Notebook[{Cell[CellGroupData[{Cell["Notebook Manipulation", "CodeSection"], 
     Cell["\[LeftCeiling]Lower-level functions directly used to manipulate \
the IDE interface\[RightFloor]", "Text", Evaluatable -> True], 
     Cell[BoxData[{RowBox[{RowBox[{RowBox[{"NotebookSaveContents", "::", 
              "usage"}], "=", 
            "\"Saves the contents of a NotebookObject to a file\""}], ";"}], 
        "\n", RowBox[{RowBox[{RowBox[{"NotebookPutFile", "::", "usage"}], 
            "=", "\"Puts a File expression into a NotebookObject\""}], ";"}], 
        "\n", RowBox[{RowBox[{RowBox[{"NotebookPutContents", "::", "usage"}], 
            "=", "\"Puts a Notebook into a NotebookObject\""}], ";"}], "\n", 
        RowBox[{RowBox[{RowBox[{"NotebookPutScratch", "::", "usage"}], "=", 
            "\"Puts a notebook into a scratch file\""}], ";"}]}], 
      "CodeInput"], Cell[BoxData[
       {RowBox[{RowBox[{RowBox[{"GetNotebookExpression", "::", "usage"}], 
            "=", "\"Extracts the Notebook expression\""}], ";"}], "\n", 
        RowBox[{RowBox[{RowBox[{"GetFileTabName", "::", "usage"}], "=", 
            "\"Gets a unique name for a tab\""}], ";"}]}], "CodeInput"], 
     Cell["\[LeftCeiling]The functions provided to an IDENotebookObject as \
methods\[RightFloor]", "Text", Evaluatable -> True], 
     Cell[BoxData[{RowBox[{RowBox[{RowBox[{"IDEOpen", "::", "usage"}], "=", 
            "\"Open a file in the IDE notebook\""}], ";"}], "\n", 
        RowBox[{RowBox[{RowBox[{"IDESave", "::", "usage"}], "=", 
            "\"Save the active IDE notebook file\""}], ";"}], "\n", 
        RowBox[{RowBox[{RowBox[{"IDEClose", "::", "usage"}], "=", 
            "\"Close the IDE notebook\""}], ";"}]}], "CodeInput"], 
     Cell[BoxData[RowBox[{RowBox[{RowBox[{"$SaveNotebookMethod", "::", 
             "usage"}], "=", "\"The method to use when saving notebooks\""}], 
         ";"}]], "CodeInput"], 
     Cell[BoxData[RowBox[{RowBox[{RowBox[{"EnsureNotebookUpdated", "::", 
             "usage"}], "=", "\n", "  ", "\"Checks to make sure the notebook \
file and the current notebook state aren't out-of-sync\""}], ";"}]], 
      "CodeInput"], Cell[BoxData[RowBox[
        {RowBox[{"Begin", "[", "\"`Private`\"", "]"}], ";"}]], 
      "InputSection"], Cell[CellGroupData[
       {Cell["\[LeftCeiling]Notebook Manipulation\[RightFloor]", 
         "CodeSubsection", Evaluatable -> True], 
        Cell[CellGroupData[
          {Cell["\[LeftCeiling]NotebookPutContents\[RightFloor]", 
            "CodeSubsubsection", Evaluatable -> True], 
           Cell[
            "\[LeftCeiling]\n\tPut a new notebook in the pane\n\[RightFloor]"\
, "Text", Evaluatable -> True], Cell[BoxData[RowBox[{RowBox[
                {RowBox[{"nbPut1", "[", RowBox[{"nbObj_NotebookObject", ",", 
                     " ", "nb_Notebook"}], "]"}], ":=", "\n", "\t\t", 
                 RowBox[{"Module", "[", "\n", "\t\t\t", RowBox[
                    {RowBox[{"{", "\n", "\t\t\t\t", "baseExpr", "\n", 
                       "\t\t\t\t", "}"}], ",", "\n", "\t\t\t", RowBox[
                      {"FrontEndExecute", "@", RowBox[{"{", "\n", "\t\t\t  ", 
                         RowBox[{RowBox[{"FrontEnd`NotebookPut", "[", "\n", 
                          "  \t\t\t\t", RowBox[{RowBox[{"Notebook", "[", 
                          RowBox[{RowBox[{"nb", "[", RowBox[{"[", "1", "]"}], 
                          "]"}], ",", " ", RowBox[{"Options", "[", "nbObj", 
                          "]"}]}], "]"}], ",", "\n", "  \t\t\t\t", "nbObj"}], 
                          "\n", "  \t\t\t\t", "]"}], ",", "\n", "  \t\t\t", 
                          RowBox[{"FrontEnd`SelectionMove", "[", "\n", 
                          "  \t\t\t\t", RowBox[{"nbObj", ",", "\n", 
                          "  \t\t\t\t", "Before", ",", "\n", "  \t\t\t\t", 
                          "Notebook"}], "\n", "  \t\t\t\t", "]"}]}], "\n", 
                         "      ", "}"}]}]}], "\n", "\t\t\t", "]"}]}], 
               ";"}]], "CodeInput"], Cell[BoxData[RowBox[{RowBox[
                {"nbPut2", "[", RowBox[{"enb_NotebookObject", ",", " ", 
                   "nb_Notebook"}], "]"}], ":=", "\n", "\t", RowBox[
                {"With", "[", "\n", "\t  ", RowBox[{RowBox[{"{", "\n", 
                     "     ", RowBox[{"mcells", "=", "\n", "       ", 
                       RowBox[{"Sequence", "@@", RowBox[{"{", "\n", 
                          "         ", RowBox[{RowBox[
                          {"FrontEnd`SelectionMove", "[", RowBox[{"enb", ",", 
                          " ", "All", ",", " ", "Notebook"}], "]"}], ",", 
                          "\n", "         ", RowBox[{"FrontEnd`SetOptions", 
                          "[", RowBox[{RowBox[{"NotebookSelection", "[", 
                          "enb", "]"}], ",", " ", RowBox[{"Deletable", "->", 
                          "True"}]}], "]"}], ",", "\n", "         ", RowBox[
                          {"FrontEnd`NotebookDelete", "[", "enb", "]"}]}], 
                          "\n", "         ", "}"}]}]}], "\n", "    ", "}"}], 
                   ",", "\n", "    ", RowBox[{RowBox[
                      {"MathLink`CallFrontEnd", "@", RowBox[{"{", "\n", 
                         "     ", RowBox[{"mcells", ",", "\n", "     ", 
                          RowBox[{"(*", RowBox[{RowBox[{
                          "FrontEnd`SelectionMove", "[", RowBox[{"enb", ",", 
                          " ", "Before", ",", " ", "Notebook"}], "]"}], 
                          ","}], "*)"}], "\n", "     ", RowBox[
                          {"FrontEnd`NotebookWrite", "[", RowBox[{"enb", ",", 
                          " ", RowBox[{"nb", "[", RowBox[{"[", "1", "]"}], 
                          "]"}], ",", " ", "None", ",", " ", RowBox[
                          {"AutoScroll", "->", "False"}]}], "]"}], ",", "\n", 
                          "     ", RowBox[{"FrontEnd`SelectionMove", "[", 
                          RowBox[{"enb", ",", " ", "Before", ",", " ", 
                          "Notebook"}], "]"}]}], "\n", "     ", "}"}]}], 
                     ";"}]}], "\n", "   ", "]"}]}]], "CodeInput"], 
           Cell[BoxData[RowBox[{RowBox[{"nbPut3", "[", RowBox[
                  {"enb_NotebookObject", ",", " ", "nb_Notebook"}], "]"}], 
               ":=", "\n", "\t", RowBox[{"MathLink`CallFrontEnd", "@", 
                 RowBox[{"{", "\n", "\t ", RowBox[{"(*", RowBox[
                      {RowBox[{"FrontEnd`SelectionMove", "[", RowBox[{"enb", 
                          ",", " ", "Before", ",", " ", "Notebook"}], "]"}], 
                       ","}], "*)"}], "\n", "   ", RowBox[{RowBox[
                      {"FrontEnd`NotebookWrite", "[", RowBox[{"enb", ",", 
                         " ", RowBox[{"nb", "[", RowBox[{"[", "1", "]"}], 
                          "]"}], ",", " ", "None", ",", " ", RowBox[
                          {"AutoScroll", "->", "False"}]}], "]"}], ",", "\n", 
                     "   ", RowBox[{"FrontEnd`SelectionMove", "[", RowBox[
                        {"enb", ",", " ", "Before", ",", " ", "Notebook"}], 
                       "]"}]}], "\n", "   ", "}"}]}]}]], "CodeInput"], 
           Cell[BoxData[{RowBox[{"NotebookPutContents", "//", "Clear"}], 
              "\n", RowBox[{RowBox[{"NotebookPutContents", "[", "\n", "  ", 
                  RowBox[{"ideNb_NotebookObject", ",", " ", "\n", "  ", 
                    RowBox[{"notebook", ":", RowBox[{"_Notebook", "|", 
                        "_Hold"}]}], " ", RowBox[{"(*", " ", RowBox[
                       {RowBox[{RowBox[{"for", " ", "some", " ", "reason", 
                          " ", "pass"}], "-", "by", "-", RowBox[{"value", 
                          " ", "helps", " ", "a", " ", "lot", " ", 
                          "here"}]}], "..."}], " ", "*)"}], ",", "\n", "  ", 
                    RowBox[{"mode", ":", RowBox[{"(", RowBox[
                         {"NotebookWrite", "|", "NotebookPut", "|", 
                          "Automatic"}], ")"}], ":", "Automatic"}]}], "\n", 
                  "  ", "]"}], ":=", "\n", "\t", RowBox[{"Module", "[", "\n", 
                  "\t\t", RowBox[{RowBox[{"{", "\n", "\t\t\t", RowBox[
                       {"ops", ",", "\n", "\t\t\t", "c", ",", "\n", "\t\t\t", 
                        "m", ",", "\n", "\t\t\t", RowBox[{"nb", " ", "=", 
                          " ", RowBox[{"ReleaseHold", "[", "notebook", 
                          "]"}]}]}], "\n", "\t\t\t", "}"}], ",", "\n", 
                    "\t\t", RowBox[{RowBox[{"ops", "=", RowBox[{"Flatten", 
                          "@", RowBox[{"{", RowBox[{"List", "@@", RowBox[
                          {"Rest", "[", "nb", "]"}]}], "}"}]}]}], ";", "\n", 
                      "\t\t", RowBox[{"m", " ", "=", " ", "\n", "\t\t  ", 
                        RowBox[{"Replace", "[", RowBox[{"mode", ",", " ", 
                          "\n", "\t\t    ", RowBox[{"Automatic", 
                          "\[RuleDelayed]", RowBox[{"(", "\n", "\t\t      ", 
                          RowBox[{RowBox[{"c", "=", RowBox[{"Cells", "[", 
                          "ideNb", "]"}]}], ";", "\n", "\t\t      ", RowBox[
                          {"If", "[", RowBox[{RowBox[{RowBox[{"Length", "@", 
                          "c"}], ">", "100000"}], ",", " ", "NotebookPut", 
                          ",", " ", "NotebookWrite"}], "]"}]}], "\n", 
                          "\t\t      ", ")"}]}]}], "\n", "\t\t    ", "]"}]}], 
                      ";", "\n", "\t\t", RowBox[{"WithNotebookPaused", "[", 
                        "\n", "\t\t\t", RowBox[{"ideNb", ",", "\n", "\t\t\t", 
                          RowBox[{RowBox[{"If", "[", RowBox[{RowBox[{"m", 
                          "===", "NotebookWrite"}], ",", "\n", "\t\t\t  ", 
                          RowBox[{RowBox[{"If", "[", RowBox[{RowBox[{"!", 
                          RowBox[{"ListQ", "[", "c", "]"}]}], ",", " ", 
                          RowBox[{"c", "=", RowBox[{"Cells", "[", "ideNb", 
                          "]"}]}]}], "]"}], ";", "\n", "\t\t\t  ", RowBox[
                          {"If", "[", RowBox[{RowBox[{RowBox[{"Length", "@", 
                          "c"}], "===", "0"}], ",", "\n", "\t\t\t    ", 
                          RowBox[{"nbPut3", "[", RowBox[{"ideNb", ",", " ", 
                          "nb"}], "]"}], ",", "\n", "\t\t\t    ", RowBox[
                          {"nbPut2", "[", RowBox[{"ideNb", ",", " ", "nb"}], 
                          "]"}]}], "\n", "\t\t\t    ", "]"}]}], ",", "\n", 
                          "\t\t\t  ", RowBox[{"nbPut1", "[", RowBox[{"ideNb", 
                          ",", " ", "nb"}], "]"}]}], "\n", "\t\t\t  ", "]"}], 
                          ";", "\n", "     ", RowBox[{RowBox[{"IDEData", "[", 
                          RowBox[{"ideNb", ",", " ", "\"Options\""}], "]"}], 
                          " ", "=", " ", "ops"}], ";"}]}], "\n", "     ", 
                        "]"}], ";"}]}], "\n", "   ", "]"}]}]}], 
            "CodeInput"]}, Closed]], Cell[CellGroupData[
          {Cell["\[LeftCeiling]setNbFileStyle\[RightFloor]", 
            "CodeSubsubsection", Evaluatable -> True], 
           Cell[CellGroupData[
             {Cell["\[LeftCeiling]getFExtStylesheet\[RightFloor]", 
               "CodeSubsubsubsection", Evaluatable -> True], Cell[BoxData[
                RowBox[{RowBox[{"loadExtStyles", "[", "]"}], ":=", "\n", 
                  "\t", RowBox[{"Append", "[", "\n", "\t\t", RowBox[
                     {RowBox[{"Normal", "@", "\n", "\t\t\t", RowBox[{"Merge", 
                          "[", "\n", "\t\t\t\t", RowBox[{RowBox[{"Get", "/@", 
                          "\n", "\t", "\t", "\t\t\t", RowBox[{"FileNames", 
                          "[", "\n", "\t", "\t", "\t\t\t\t", RowBox[
                          {"\"ExtensionStylesMap.wl\"", ",", "\n", "\t", 
                          "\t\t\t\t\t", RowBox[{"FileNames", "[", RowBox[
                          {"\"Mappings\"", ",", " ", "$IDESettingsPath"}], 
                          "]"}]}], "\n", "\t", "\t", "\t\t\t\t", "]"}]}], 
                          ",", "\n", "\t", "\t\t\t", "First"}], "\n", "\t", 
                          "\t\t\t", "]"}]}], ",", "\n", "\t\t", RowBox[
                       {"_", "\[Rule]", "None"}]}], "\n", "\t\t", "]"}]}]], 
               "CodeInput"], Cell[BoxData[RowBox[{RowBox[
                   {"getFExtStylesheet", "[", "fExt_", "]"}], ":=", "\n", 
                  "\t", RowBox[{"fExt", "/.", RowBox[{"loadExtStyles", "[", 
                      "]"}]}]}]], "CodeInput"]}, Open]], 
           Cell[CellGroupData[
             {Cell["\[LeftCeiling]getNbFileSSheet\[RightFloor]", 
               "CodeSubsubsubsection", Evaluatable -> True], Cell[BoxData[
                RowBox[{RowBox[{RowBox[{"getNbFileSSheet", "[", "nbFile_", 
                      "]"}], ":=", "\n", "\t", RowBox[{"If", "[", RowBox[
                       {RowBox[{RowBox[{"FileByteCount", "[", "nbFile", 
                          "]"}], "<", "1000000000"}], ",", "\n", "\t\t", 
                        RowBox[{"Module", "[", RowBox[{RowBox[{"{", RowBox[
                          {RowBox[{"g", "=", RowBox[{"Get", "[", "nbFile", 
                          "]"}]}], ",", " ", "sd", ",", " ", "sdFile"}], 
                          "}"}], ",", "\n", "\t", "\t\t", RowBox[{RowBox[
                          {"sd", "=", RowBox[{"FirstCase", "[", RowBox[
                          {RowBox[{"Flatten", "@", RowBox[{"Apply", "[", 
                          RowBox[{"List", ",", " ", RowBox[{"Rest", "[", "g", 
                          "]"}]}], "]"}]}], ",", " ", RowBox[{RowBox[{"(", 
                          RowBox[{"StyleDefinitions", "\[Rule]", "s_"}], 
                          ")"}], "\[RuleDelayed]", "s"}], ",", " ", 
                          "\"Default.nb\""}], "]"}]}], ";", "\n", "\t\t\t", 
                          RowBox[{"sdFile", "=", "\n", "\t\t\t\t", RowBox[
                          {"Replace", "[", RowBox[{"sd", ",", " ", "\n", 
                          "\t\t\t\t\t", RowBox[{RowBox[{"Except", "[", RowBox[
                          {"_String", "|", "_FrontEnd`FileName"}], "]"}], 
                          ":>", "\n", "\t\t\t\t\t\t", RowBox[{"FirstCase", 
                          "[", RowBox[{"sd", ",", " ", "\n", 
                          "\t\t\t\t\t\t\t", RowBox[{RowBox[{"StyleData", "[", 
                          RowBox[{RowBox[{"StyleDefinitions", "\[Rule]", 
                          "s_"}], ",", " ", "___"}], "]"}], "\[RuleDelayed]", 
                          "s"}], ",", " ", "\n", "\t\t\t\t\t\t\t", 
                          "\"Default.nb\"", ",", "\n", "\t\t\t\t\t\t\t", 
                          "\[Infinity]"}], "\n", "\t\t\t\t\t\t\t", "]"}]}]}], 
                          "\n", "\t\t\t\t\t", "]"}]}], ";", "\n", "\t\t\t", 
                          RowBox[{"If", "[", RowBox[{RowBox[{RowBox[
                          {"StringQ", "@", "sdFile"}], "&&", RowBox[{RowBox[
                          {"FileNameDepth", "[", "sdFile", "]"}], ">", 
                          "1"}]}], ",", "\n", "\t\t\t\t", RowBox[{"sdFile", 
                          " ", "=", " ", RowBox[{RowBox[{RowBox[
                          {"FrontEnd`FileName", "[", RowBox[{RowBox[{"#", 
                          "[", RowBox[{"[", RowBox[{";;", RowBox[{"-", 
                          "2"}]}], "]"}], "]"}], ",", " ", RowBox[{"#", "[", 
                          RowBox[{"[", RowBox[{"-", "1"}], "]"}], "]"}]}], 
                          "]"}], "&"}], "@", RowBox[{"FileNameSplit", "[", 
                          "sdFile", "]"}]}]}]}], "\n", "\t\t\t\t", "]"}], 
                          ";", "\n", "\t\t\t", RowBox[{"(*", RowBox[
                          {"Replace", "[", RowBox[{"sdFile", ",", "\n", 
                          "\t\t\t\t", RowBox[{"f_FrontEnd`FileName", 
                          "\[RuleDelayed]", RowBox[{"ToFileName", "[", "f", 
                          "]"}]}]}], "\n", "\t\t\t\t", "]"}], "*)"}], "\n", 
                          "\t\t\t", "sdFile"}]}], "\n", "\t\t\t", "]"}], ",", 
                        "\n", "\t\t", "$Failed"}], "\n", "\t\t", "]"}]}], 
                  ";"}]], "CodeInput"], Cell[BoxData[RowBox[
                 {RowBox[{"getStylesheetStylesheet", "[", "nbFile_", "]"}], 
                  ":=", "\n", "\t", RowBox[{"GetThemedStylesheet", "@", 
                    RowBox[{"getNbFileSSheet", "[", "nbFile", "]"}]}]}]], 
               "CodeInput"]}, Closed]], Cell[CellGroupData[
             {Cell["\[LeftCeiling]getFileStylesheet\[RightFloor]", 
               "CodeSubsubsubsection", Evaluatable -> True], Cell[BoxData[
                RowBox[{RowBox[{"getFileStylesheet", "[", RowBox[{"nb_", ",", 
                      " ", "file_"}], "]"}], ":=", "\n", "\t", RowBox[
                   {"Module", "[", "\n", "\t\t", RowBox[{RowBox[{"{", "\n", 
                        "\t\t\t", RowBox[{"fExt", " ", "=", " ", RowBox[
                          {"FileExtension", "[", "file", "]"}]}], "\n", 
                        "\t\t\t", "}"}], ",", "\n", "\t\t\t", RowBox[
                       {"Replace", "[", RowBox[{RowBox[{"getFExtStylesheet", 
                          "[", "fExt", "]"}], ",", "\n", "\t\t\t\t", RowBox[
                          {"None", "\[RuleDelayed]", RowBox[{"If", "[", 
                          RowBox[{RowBox[{"fExt", "===", "\"nb\""}], ",", 
                          " ", RowBox[{"getStylesheetStylesheet", "[", 
                          "file", "]"}], ",", " ", "None"}], "]"}]}]}], "\n", 
                        "\t\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}]], 
               "CodeInput"]}, Closed]], Cell[CellGroupData[
             {Cell["\[LeftCeiling]setNbFileStyle\[RightFloor]", 
               "CodeSubsubsubsection", Evaluatable -> True], 
              Cell["\[LeftCeiling]\n\tThis is a little too slow in general... \
like .3s? We can probably do better by only updating when the \n\tactual base \
stylesheet changes?\n\[RightFloor]", "Text", Evaluatable -> True], 
              Cell[BoxData[RowBox[{RowBox[{RowBox[{"setNbFileStyle", "[", 
                      RowBox[{"nb_", ",", " ", "file_"}], "]"}], ":=", "\n", 
                    "\t", RowBox[{"With", "[", RowBox[{RowBox[{"{", RowBox[
                          {"f", "=", RowBox[{"getFileStylesheet", "[", 
                          RowBox[{"nb", ",", " ", "file"}], "]"}]}], "}"}], 
                        ",", "\n", "\t\t", RowBox[{"If", "[", RowBox[
                          {RowBox[{"f", "=!=", RowBox[{"IDEData", "[", RowBox[
                          {"nb", ",", " ", RowBox[{"{", RowBox[{"\"Styles\"", 
                          ",", " ", "\"UnthemedStylesheet\""}], "}"}]}], 
                          "]"}]}], ",", "\n", "\t\t\t", RowBox[{RowBox[
                          {RowBox[{"IDEData", "[", RowBox[{"nb", ",", " ", 
                          RowBox[{"{", RowBox[{"\"Styles\"", ",", " ", 
                          "\"UnthemedStylesheet\""}], "}"}]}], "]"}], " ", 
                          "=", " ", "f"}], ";", "\n", "\t\t\t", RowBox[
                          {"SetThemedStylesheet", "[", RowBox[{"nb", ",", 
                          " ", RowBox[{"GetCleanStylePath", "[", RowBox[
                          {"nb", ",", " ", "f"}], "]"}]}], "]"}], ";", "\n", 
                          "\t\t\t", "True"}], ",", "\n", "\t\t\t", "False"}], 
                          "\n", "\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}], 
                  ";"}]], "CodeInput"]}, Open]]}, Open]], 
        Cell[CellGroupData[
          {Cell["\[LeftCeiling]setNbFileToolbar\[RightFloor]", 
            "CodeSubsubsection", Evaluatable -> True], 
           Cell[CellGroupData[
             {Cell["\[LeftCeiling]getFExtToolbar\[RightFloor]", 
               "CodeSubsubsubsection", Evaluatable -> True], Cell[BoxData[
                RowBox[{RowBox[{"loadExtToolbars", "[", "]"}], ":=", "\n", 
                  "\t", RowBox[{"Append", "[", "\n", "\t\t", RowBox[
                     {RowBox[{"Normal", "@", "\n", "\t\t\t", RowBox[{"Merge", 
                          "[", "\n", "\t\t\t\t", RowBox[{RowBox[{"Get", "/@", 
                          "\n", "\t", "\t", "\t\t\t", RowBox[{"FileNames", 
                          "[", "\n", "\t", "\t\t\t\t\t", RowBox[
                          {"\"ExtensionToolbarsMap.wl\"", ",", "\n", "\t", 
                          "\t\t\t\t\t", RowBox[{"FileNames", "[", RowBox[
                          {"\"Mappings\"", ",", " ", "$IDESettingsPath"}], 
                          "]"}]}], "\n", "\t", "\t\t\t\t\t", "]"}]}], ",", 
                          "\n", "\t", "\t\t\t", "First"}], "\n", "\t", 
                          "\t\t\t", "]"}]}], ",", "\n", "\t\t", RowBox[
                       {"_", "\[Rule]", "None"}]}], "\n", "\t\t", "]"}]}]], 
               "CodeInput"], Cell[BoxData[RowBox[{RowBox[{"getFExtToolbar", 
                    "[", "fExt_", "]"}], ":=", "\n", "\t", RowBox[{"fExt", 
                    "/.", RowBox[{"loadExtToolbars", "[", "]"}]}]}]], 
               "CodeInput"]}, Closed]], Cell[CellGroupData[
             {Cell["\[LeftCeiling]getStylesheetToolbar\[RightFloor]", 
               "CodeSubsubsubsection", Evaluatable -> True], Cell[BoxData[
                RowBox[{RowBox[{RowBox[{"loadSheetToolbars", "[", "]"}], 
                    ":=", "\n", "\t", RowBox[{"Append", "[", "\n", "\t\t", 
                      RowBox[{RowBox[{"Normal", "@", "\n", "\t\t\t", RowBox[
                          {"Merge", "[", "\n", "\t\t\t\t", RowBox[{RowBox[
                          {"Get", "/@", "\n", "\t", "\t", "\t\t\t", RowBox[
                          {"FileNames", "[", "\n", "\t", "\t\t\t\t\t", RowBox[
                          {"\"StylesheetToolbarsMap.wl\"", ",", "\n", "\t", 
                          "\t\t\t\t\t", RowBox[{"FileNames", "[", RowBox[
                          {"\"Mappings\"", ",", " ", "$IDESettingsPath"}], 
                          "]"}]}], "\n", "\t", "\t", "\t\t\t\t", "]"}]}], 
                          ",", "\n", "\t", "\t\t\t", "First"}], "\n", "\t", 
                          "\t\t\t", "]"}]}], ",", "\n", "\t\t", RowBox[
                         {"_", "\[Rule]", "None"}]}], "\n", "\t\t", "]"}]}], 
                  ";"}]], "CodeInput"], Cell[BoxData[RowBox[
                 {RowBox[{"getStylesheetToolbar", "[", "nbFile_", "]"}], 
                  ":=", "\n", "\t", RowBox[{RowBox[{"getNbFileSSheet", "[", 
                      "nbFile", "]"}], "/.", "\n", "\t\t", RowBox[
                     {"loadSheetToolbars", "[", "]"}]}]}]], "CodeInput"]}, 
             Closed]], Cell[CellGroupData[
             {Cell["\[LeftCeiling]getFileToolbar\[RightFloor]", 
               "CodeSubsubsubsection", Evaluatable -> True], 
              Cell["\[LeftCeiling]\n\tToolbars are just treated as another \
case of a Plugin, but not always attached to the menu or put into a \
ActionMenu\n\[RightFloor]", "Text", Evaluatable -> True], Cell[BoxData[
                RowBox[{RowBox[{"getFileToolbar", "[", RowBox[{"nb_", ",", 
                      " ", "file_"}], "]"}], ":=", "\n", "\t", RowBox[
                   {"Module", "[", "\n", "\t\t", RowBox[{RowBox[{"{", "\n", 
                        "\t\t\t", RowBox[{RowBox[{"fExt", " ", "=", " ", 
                          RowBox[{"FileExtension", "[", "file", "]"}]}], ",", 
                          "\n", "\t\t\t", "tbName"}], "\n", "\t\t\t", "}"}], 
                      ",", "\n", "\t\t", RowBox[{RowBox[{"tbName", "=", "\n", 
                          "\t\t\t", RowBox[{"Replace", "[", RowBox[{RowBox[
                          {"getFExtToolbar", "[", "fExt", "]"}], ",", "\n", 
                          "\t", "\t\t\t", RowBox[{"None", "\[RuleDelayed]", 
                          RowBox[{"If", "[", RowBox[{RowBox[{"fExt", "===", 
                          "\"nb\""}], ",", " ", RowBox[{
                          "getStylesheetToolbar", "[", "file", "]"}], ",", 
                          " ", "None"}], "]"}]}]}], "\n", "\t\t\t\t", 
                          "]"}]}], ";", "\n", "\t\t", "tbName"}]}], "\n", 
                    "\t\t", "]"}]}]], "CodeInput"]}, Closed]], 
           Cell[CellGroupData[
             {Cell["\[LeftCeiling]setNbFileToolbar\[RightFloor]", 
               "CodeSubsubsubsection", Evaluatable -> True], 
              Cell["\[LeftCeiling]\n\tThis is like .2s in \
general...\n\[RightFloor]", "Text", Evaluatable -> True], Cell[BoxData[
                RowBox[{RowBox[{"setNbFileToolbar", "[", RowBox[{"nb_", ",", 
                      " ", "file_"}], "]"}], ":=", "\n", "\t", RowBox[
                   {"Module", "[", "\n", "\t\t", RowBox[{RowBox[{"{", "\n", 
                        "\t\t\t", RowBox[{RowBox[{"currentTb", " ", "=", " ", 
                          RowBox[{"IDEData", "[", RowBox[{"nb", ",", " ", 
                          "\"FileToolbar\"", ",", " ", "None"}], "]"}]}], 
                          ",", "\n", "\t\t\t", "name"}], "\n", "\t\t\t", 
                        "}"}], ",", "\n", "\t\t", RowBox[{RowBox[{"name", 
                          " ", "=", " ", RowBox[{"getFileToolbar", "[", 
                          RowBox[{"nb", ",", " ", "file"}], "]"}]}], ";", 
                        "\n", "\t\t", RowBox[{"If", "[", RowBox[{RowBox[
                          {"currentTb", " ", "=!=", " ", "name"}], ",", "\n", 
                          "\t\t\t", RowBox[{RowBox[{RowBox[{"IDEData", "[", 
                          RowBox[{"nb", ",", " ", "\"FileToolbar\""}], "]"}], 
                          " ", "=", "  ", "name"}], ";", "\n", "\t\t\t", 
                          RowBox[{"If", "[", RowBox[{RowBox[{"currentTb", 
                          " ", "=!=", " ", "None"}], ",", "\n", "\t\t\t\t", 
                          RowBox[{"RemoveNotebookToolbar", "[", RowBox[{"nb", 
                          ",", " ", "currentTb"}], "]"}]}], "\n", "\t\t\t\t", 
                          "]"}], ";", "\n", "\t\t\t", RowBox[
                          {"UpdateNotebookToolbars", "[", "nb", "]"}], ";", 
                          " ", RowBox[{"(*", " ", RowBox[{RowBox[{RowBox[
                          {"seems", " ", "to", " ", "be", " ", "necessary"}], 
                          "..."}], "?"}], " ", "*)"}], "\n", "\t\t\t", 
                          "True"}], ",", "\n", "\t\t\t", "False"}], "\n", 
                          "\t\t\t", "]"}], ";"}]}], "\n", "\t\t", "]"}]}]], 
               "CodeInput"]}, Open]]}, Closed]], 
        Cell[CellGroupData[{Cell["\[LeftCeiling]setAutoSave\[RightFloor]", 
            "CodeSubsubsection", Evaluatable -> True], 
           Cell[BoxData[RowBox[{RowBox[{RowBox[{"setAutoSave", "[", "nb_", 
                   "]"}], ":=", "\n", "\t", RowBox[{"Module", "[", 
                   RowBox[{RowBox[{"{", RowBox[{"aug", " ", "=", " ", 
                         RowBox[{"GetCurrentValue", "[", RowBox[{"nb", ",", 
                          " ", "AutoGeneratedPackage"}], "]"}]}], "}"}], ",", 
                     "\n", "\t\t", RowBox[{"If", "[", RowBox[{RowBox[{"aug", 
                          " ", "===", " ", "Automatic"}], ",", "\n", 
                         "\t\t\t", RowBox[{RowBox[{"IDEData", "[", RowBox[
                          {"nb", ",", " ", "\"AutoGeneratePackage\""}], 
                          "]"}], " ", "=", " ", "True"}], ",", "\n", 
                         "\t\t\t", RowBox[{RowBox[{"SetCurrentValue", "[", 
                          RowBox[{"nb", ",", " ", "AutoGeneratedPackage", 
                          ",", " ", "Inherited"}], "]"}], ";", "\n", 
                          "\t\t\t", RowBox[{RowBox[{"IDEData", "[", RowBox[
                          {"nb", ",", " ", "\"AutoGeneratePackage\""}], 
                          "]"}], " ", "=", " ", "False"}]}]}], "\n", 
                       "\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}], ";"}]], 
            "CodeInput"]}, Closed]], Cell[CellGroupData[
          {Cell["\[LeftCeiling]setNbActions\[RightFloor]", 
            "CodeSubsubsection", Evaluatable -> True], 
           Cell[BoxData[RowBox[{RowBox[{"setNbActions", "[", "nb_", "]"}], 
               ":=", "\n", "\t", RowBox[{"Module", "[", RowBox[
                  {RowBox[{"{", RowBox[{"nbActs", ",", " ", "saveAction"}], 
                     "}"}], ",", "\n", "\t  ", RowBox[{"(*", " ", RowBox[
                      {"reset", " ", "the", " ", "actions", " ", "to", " ", 
                       "start"}], " ", "*)"}], "\n", "\t  ", RowBox[
                    {RowBox[{"SetCurrentValue", "[", RowBox[{"nb", ",", " ", 
                         "NotebookEventActions", ",", " ", "Inherited"}], 
                       "]"}], ";", "\n", "\t  ", RowBox[{"(*", " ", RowBox[
                        {"pull", " ", "the", " ", "events", " ", "from", " ", 
                         "the", " ", "stylesheet"}], " ", "*)"}], "\n", 
                     "\t  ", RowBox[{"nbActs", " ", "=", " ", RowBox[
                        {"GetCurrentValue", "[", RowBox[{"nb", ",", " ", 
                          "NotebookEventActions"}], "]"}]}], ";", "\n", 
                     "\t  ", RowBox[{"If", "[", RowBox[{RowBox[{"MemberQ", 
                          "[", RowBox[{RowBox[{"Keys", "@", "nbActs"}], ",", 
                          " ", RowBox[{"{", RowBox[{"\"MenuCommand\"", ",", 
                          " ", "\"Save\""}], "}"}]}], "]"}], ",", "\n", 
                         "\t    ", RowBox[{"saveAction", " ", "=", " ", "\n", 
                          "\t      ", RowBox[{"Extract", "[", RowBox[
                          {RowBox[{"Association", "[", "nbActs", "]"}], ",", 
                          "\n", "\t        ", RowBox[{"Key", "[", RowBox[
                          {"{", RowBox[{"\"MenuCommand\"", ",", " ", 
                          "\"Save\""}], "}"}], "]"}], ",", "\n", 
                          "\t        ", "Hold"}], "\n", "\t        ", 
                          "]"}]}], ",", "\n", "\t    ", RowBox[{"saveAction", 
                          " ", "=", " ", "None"}]}], "\n", "\t    ", "]"}], 
                     ";", "\n", "\t  ", RowBox[{"If", "[", RowBox[
                        {RowBox[{"MatchQ", "[", RowBox[{"saveAction", ",", 
                          " ", "\n", "  ", "\t    ", RowBox[{RowBox[{"Hold", 
                          "[", RowBox[{"IDESave", "[", RowBox[
                          {"EvaluationNotebook", "[", "]"}], "]"}], "]"}], 
                          "|", "\n", "  \t      ", RowBox[{"Hold", "[", 
                          RowBox[{"CompoundExpression", "[", RowBox[
                          {"_Needs", ",", " ", RowBox[{"IDESave", "[", RowBox[
                          {"EvaluationNotebook", "[", "]"}], "]"}]}], "]"}], 
                          "]"}]}]}], "\n", "  \t    ", "]"}], ",", "\n", 
                         "\t    ", RowBox[{"saveAction", " ", "=", " ", 
                          "None"}]}], "\n", "\t    ", "]"}], ";", "\n", 
                     "\t  ", RowBox[{RowBox[{"IDEData", "[", RowBox[{"nb", 
                          ",", " ", "\"SavingAction\""}], "]"}], " ", "=", 
                       " ", "saveAction"}], ";", "\n", "\t  ", RowBox[
                      {"SetCurrentValue", "[", RowBox[{"nb", ",", " ", "\n", 
                         "\t    ", "NotebookEventActions", ",", "\n", 
                         "\t    ", RowBox[{RowBox[{"DeleteDuplicatesBy", "[", 
                          "First", "]"}], "@", "\n", "\t      ", RowBox[
                          {"Join", "[", "\n", "  \t      ", RowBox[{RowBox[
                          {"{", "\n", "    \t      ", RowBox[{RowBox[{"{", 
                          RowBox[{"\"MenuCommand\"", ",", " ", "\"Save\""}], 
                          "}"}], "\[RuleDelayed]", "\n", "    \t        ", 
                          RowBox[{"IDESave", "[", RowBox[{
                          "EvaluationNotebook", "[", "]"}], "]"}]}], "\n", 
                          "  ", "         ", "}"}], ",", "\n", "          ", 
                          RowBox[{"Replace", "[", RowBox[{"nbActs", ",", 
                          "\n", "          \t", RowBox[{RowBox[{"Except", 
                          "[", "_List", "]"}], "\[RuleDelayed]", RowBox[{"{", 
                          "}"}]}]}], "\n", "          \t", "]"}], ",", "\n", 
                          "    \t    ", RowBox[{"{", "\n", "            ", 
                          RowBox[{RowBox[{"PassEventsDown", "\[Rule]", 
                          "True"}], ",", "\n", "  ", "          ", RowBox[
                          {"EvaluationOrder", "\[Rule]", "After"}]}], "\n", 
                          "  \t        ", "}"}]}], "\n", "    \t   ", 
                          "]"}]}]}], "\n", "      ", "]"}]}]}], "\n", "\t  ", 
                 "]"}]}]], "CodeInput"]}, Closed]], 
        Cell[CellGroupData[
          {Cell["\[LeftCeiling]GetNotebookExpression\[RightFloor]", 
            "CodeSubsubsection", Evaluatable -> True], 
           Cell[BoxData[RowBox[{RowBox[{"GetNotebookExpression", "[", "nb_", 
                 "]"}], ":=", "\n", "\t", RowBox[{"Module", "[", "\n", 
                 "\t\t", RowBox[{RowBox[{"{", "\n", "\t\t\t", RowBox[
                      {"opts", " ", "=", " ", RowBox[{"IDEData", "[", 
                         RowBox[{"nb", ",", " ", "\"Options\"", ",", " ", 
                          RowBox[{"{", "}"}]}], "]"}]}], "\n", "\t\t\t", 
                     "}"}], ",", "\n", "\t\t", RowBox[{"Notebook", "[", "\n", 
                     "\t\t\t", RowBox[{RowBox[{RowBox[{"NotebookGet", "[", 
                          "nb", "]"}], "[", RowBox[{"[", "1", "]"}], "]"}], 
                       ",", "\n", "\t\t\t", RowBox[{"Sequence", "@@", 
                         RowBox[{"Flatten", "[", RowBox[{"List", "@@", 
                          "opts"}], "]"}]}]}], "\n", "\t\t\t", "]"}]}], "\n", 
                 "\t\t", "]"}]}]], "CodeInput"]}, Closed]], 
        Cell[CellGroupData[
          {Cell["\[LeftCeiling]NotebookPutFile\[RightFloor]", 
            "CodeSubsubsection", Evaluatable -> True], Cell["\[LeftCeiling]\n\
\tShould make use of the tab cache to find some way to check if I need to \
reload from disk...\n\[RightFloor]", "Text", Evaluatable -> True], 
           Cell[BoxData[{RowBox[{"NotebookPutFile", "//", "Clear"}], "\n", 
              RowBox[{RowBox[{RowBox[{"NotebookPutFile", "[", RowBox[
                     {"nb_NotebookObject", ",", " ", "f_String", ",", " ", 
                      RowBox[{"data", ":", RowBox[{"_Notebook", "|", 
                          "None"}], ":", "None"}]}], "]"}], ":=", "\n", "\t", 
                  RowBox[{"Module", "[", "\n", "\t\t", RowBox[
                     {RowBox[{"{", "\n", "\t\t\t", RowBox[{"nbObj", ",", 
                          "\n", "\t\t\t", RowBox[{"nbExpr", " ", "=", " ", 
                          "data"}], ",", "\n", "\t\t\t", "stylesChanged", 
                          ",", "\n", "\t\t\t", "tbChanged"}], "\n", "\t\t\t", 
                        "}"}], ",", "\n", "\t\t", RowBox[{"(*", " ", 
                        RowBox[{RowBox[{"since", " ", "we", " ", "need", " ", 
                          "to", " ", "handle", " ", "autogeneration", " ", 
                          "stuff", " ", "too"}], "..."}], " ", "*)"}], "\n", 
                      "\t\t", RowBox[{RowBox[{"SetCurrentValue", "[", 
                          RowBox[{"nb", ",", " ", "AutoGeneratedPackage", 
                          ",", " ", "Inherited"}], "]"}], ";", "\n", "\t\t", 
                        RowBox[{"If", "[", RowBox[{RowBox[{"nbExpr", "===", 
                          "None"}], ",", "\n", "\t\t\t", RowBox[{"Switch", 
                          "[", RowBox[{RowBox[{"FileExtension", "[", "f", 
                          "]"}], ",", "\n", "\t", "\t\t\t", "\"nb\"", ",", 
                          "\n", "\t", "\t\t\t\t", RowBox[{"nbExpr", " ", "=", 
                          " ", RowBox[{"Get", "[", "f", "]"}]}], ",", "\n", 
                          "\t", "\t\t\t", "_", ",", "\n", "\t", "\t\t\t\t", 
                          RowBox[{RowBox[{"nbObj", " ", "=", " ", RowBox[
                          {"NotebookOpen", "[", RowBox[{"f", ",", " ", RowBox[
                          {"Visible", "->", "False"}]}], "]"}]}], ";", "\n", 
                          "\t", "\t\t\t\t", RowBox[{"nbExpr", " ", "=", " ", 
                          RowBox[{"NotebookGet", "[", "nbObj", "]"}]}], ";", 
                          "\n", "\t", "\t\t\t\t", RowBox[{"NotebookClose", 
                          "[", "nbObj", "]"}], ";"}]}], "\n", "\t\t\t\t", 
                          "]"}]}], "\n", "\t\t\t", "]"}], ";", "\n", "\t\t", 
                        RowBox[{"WithNotebookPaused", "[", "\n", "\t\t\t", 
                          RowBox[{"nb", ",", "\n", "\t\t\t", RowBox[
                          {RowBox[{"stylesChanged", " ", "=", " ", RowBox[
                          {"setNbFileStyle", "[", RowBox[{"nb", ",", " ", 
                          "f"}], "]"}]}], ";", "\n", "\t\t\t", RowBox[
                          {"tbChanged", " ", "=", " ", RowBox[
                          {"setNbFileToolbar", "[", RowBox[{"nb", ",", " ", 
                          "f"}], "]"}]}], ";", "\n", "\t\t\t", RowBox[
                          {"NotebookPutContents", "[", RowBox[{"nb", ",", 
                          " ", RowBox[{"Hold", "[", "nbExpr", "]"}]}], "]"}], 
                          ";", "\n", "\t\t\t", RowBox[{"(*", " ", RowBox[
                          {RowBox[{RowBox[{RowBox[{"can", "'"}], "t", " ", 
                          "see", " ", "why", " ", "not", " ", "to", " ", 
                          "put", " ", "it", " ", "here"}], "..."}], " ", 
                          "?"}], " ", "*)"}], "\n", "\t\t\t", RowBox[{"If", 
                          "[", RowBox[{"stylesChanged", ",", "\n", 
                          "\t\t  \t", RowBox[{RowBox[{"setAutoSave", "[", 
                          "nb", "]"}], ";", "\n", "\t", "  ", "\t\t", RowBox[
                          {"setNbActions", "[", "nb", "]"}], ";"}]}], "\n", 
                          "\t\t\t\t", "]"}], ";"}]}], "\n", "\t\t\t", "]"}], 
                        ";"}]}], "\n", "\t\t", "]"}]}], ";"}]}], 
            "CodeInput"]}, Closed]], Cell[CellGroupData[
          {Cell["\[LeftCeiling]notebookSaveNotebook\[RightFloor]", 
            "CodeSubsubsection", Evaluatable -> True], 
           Cell[BoxData[RowBox[{RowBox[{"If", "[", RowBox[
                  {RowBox[{"!", RowBox[{"ValueQ", "[", "$SaveNotebookMethod", 
                       "]"}]}], ",", " ", RowBox[{"$SaveNotebookMethod", " ", 
                     "=", " ", "notebookSaveNotebook"}]}], "]"}], ";"}]], 
            "CodeInput"], Cell[BoxData[RowBox[{RowBox[{"$poisonBoxes", " ", 
                 "=", " ", RowBox[{"_GraphicsBox", "|", "_Graphics3DBox", 
                   "|", "_Raster3DBox", "|", "_RasterBox"}]}], ";"}]], 
            "CodeInput"], Cell[BoxData[RowBox[{RowBox[
                {"notebookSaveNotebook", "[", RowBox[{"f_", ",", " ", 
                   "nb_"}], "]"}], ":=", "\n", "  ", RowBox[{"With", "[", 
                 RowBox[{RowBox[{"{", RowBox[{"expr", "=", RowBox[
                        {"GetNotebookExpression", "[", "nb", "]"}]}], "}"}], 
                   ",", "\n", "    ", RowBox[{"If", "[", RowBox[
                      {RowBox[{"!", RowBox[{"FreeQ", "[", RowBox[{RowBox[
                          {"expr", "[", RowBox[{"[", "1", "]"}], "]"}], ",", 
                          " ", "$poisonBoxes"}], "]"}]}], ",", "\n", 
                       "      ", RowBox[{"Export", "[", RowBox[{"f", ",", 
                          " ", "expr", ",", " ", "\"Notebook\""}], "]"}], 
                       ",", "\n", "      ", RowBox[{"Put", "[", RowBox[
                          {"expr", ",", " ", "f"}], "]"}]}], "\n", "      ", 
                     "]"}]}], "\n", "    ", "]"}]}]], "CodeInput"]}, 
          Closed]], Cell[CellGroupData[
          {Cell["\[LeftCeiling]notebookHandleAutoSave\[RightFloor]", 
            "CodeSubsubsection", Evaluatable -> True], 
           Cell[BoxData[RowBox[{RowBox[{"notebookHandleAutoSave", "[", 
                 RowBox[{"f_", ",", " ", "nb_"}], "]"}], ":=", "\n", "  ", 
               RowBox[{"Module", "[", RowBox[{RowBox[{"{", RowBox[{"nbFName", 
                       ",", " ", "nbPkgName"}], "}"}], ",", "\n", "  ", "  ", 
                   RowBox[{"If", "[", RowBox[{RowBox[{"IDEData", "[", 
                         RowBox[{"nb", ",", " ", "\"AutoGeneratePackage\""}], 
                         "]"}], ",", "\n", "  ", "    ", RowBox[{RowBox[
                          {"nbFName", " ", "=", " ", RowBox[
                          {"NotebookFileName", "[", "nb", "]"}]}], ";", "\n", 
                         "  ", "    ", RowBox[{"If", "[", RowBox[{RowBox[
                          {"StringQ", "[", "nbFName", "]"}], ",", "\n", "  ", 
                          "      ", RowBox[{RowBox[{"nbPkgName", " ", "=", 
                          " ", RowBox[{"StringReplace", "[", RowBox[
                          {"nbFName", ",", " ", RowBox[{"\".nb\"", "\[Rule]", 
                          "\".m\""}]}], "]"}]}], ";", "\n", "  ", "  ", 
                          "    ", RowBox[{"If", "[", RowBox[{RowBox[
                          {"FileExistsQ", "[", "nbPkgName", "]"}], ",", "\n", 
                          "  ", "  ", "      ", RowBox[{"RenameFile", "[", 
                          "\n", "  ", "  ", "        ", RowBox[{"nbPkgName", 
                          ",", "\n", "  ", "  ", "        ", RowBox[
                          {"StringReplace", "[", RowBox[{"f", ",", " ", 
                          RowBox[{"\".nb\"", "\[Rule]", "\".m\""}]}], "]"}], 
                          ",", "\n", "  ", "  ", "        ", RowBox[
                          {"OverwriteTarget", "\[Rule]", "True"}]}], "\n", 
                          "  ", "  ", "        ", "]"}]}], "\n", "  ", 
                          "        ", "]"}]}]}], "\n", "  ", "      ", 
                          "]"}]}]}], "\n", "  ", "    ", "]"}]}], "\n", "  ", 
                 "  ", "]"}]}]], "CodeInput"]}, Closed]], 
        Cell[CellGroupData[
          {Cell["\[LeftCeiling]NotebookSaveContents\[RightFloor]", 
            "CodeSubsubsection", Evaluatable -> True], 
           Cell[BoxData[{RowBox[{"NotebookSaveContents", "//", "Clear"}], 
              "\n", RowBox[{RowBox[{RowBox[{"Options", "[", 
                    "NotebookSaveContents", "]"}], "=", "\n", "\t", 
                  RowBox[{"{", "\n", "\t\t", RowBox[{RowBox[
                       {"\"AutoGenerateSave\"", "\[Rule]", "True"}], ",", 
                      "\n", "\t\t", RowBox[{"\"HandleSavingAction\"", 
                        "\[Rule]", "True"}], ",", "\n", "\t\t", RowBox[
                       {"\"ClearCache\"", "\[Rule]", "True"}], ",", "\n", 
                      "\t\t", RowBox[{"\"Preemptive\"", "\[Rule]", 
                        "False"}]}], "\n", "\t\t", "}"}]}], ";"}], "\n", 
              RowBox[{RowBox[{"Module", "[", RowBox[{RowBox[{"{", 
                      "recurseProtect", "}"}], ",", "\n", "\t", RowBox[
                     {RowBox[{RowBox[{"NotebookSaveContents", "[", RowBox[
                          {"nb_NotebookObject", ",", " ", "\n", "\t\t", 
                          RowBox[{"file", ":", RowBox[{"_String", "|", 
                          "Automatic"}], ":", "Automatic"}], ",", "\n", 
                          "\t\t", RowBox[{"ops", ":", RowBox[
                          {"OptionsPattern", "[", "]"}]}]}], "\n", "\t\t", 
                          "]"}], ":=", "\n", "\t\t", RowBox[{"Block", "[", 
                          "\n", "\t\t  ", RowBox[{RowBox[{"{", "\n", 
                          "\t\t    ", RowBox[{RowBox[{"preemptive", " ", "=", 
                          " ", "False"}], ",", "\n", "\t\t    ", RowBox[
                          {"recurseProtect", " ", "=", " ", RowBox[{RowBox[
                          {"!", "preempt"}], "&&", RowBox[{"TrueQ", "[", 
                          "recurseProtect", "]"}]}]}]}], "\n", "\t\t    ", 
                          "}"}], ",", "\n", "\t\t\t", RowBox[{"If", "[", 
                          RowBox[{RowBox[{"!", "recurseProtect"}], ",", "\n", 
                          "\t\t\t\t", RowBox[{RowBox[{"recurseProtect", "=", 
                          "True"}], ";", "\n", "\t\t\t\t", RowBox[{"Module", 
                          "[", "\n", "\t\t\t\t\t", RowBox[{RowBox[{"{", "\n", 
                          "\t\t\t\t\t\t", RowBox[{RowBox[{"f", " ", "=", " ", 
                          "file"}], ",", "\n", "\t", "\t", "\t", "\t\t\t", 
                          "dir", ",", "\n", "\t", "\t", "\t", "\t\t\t", 
                          "nbExpr", ",", "\n", "\t\t\t\t\t\t", "nbObj", ",", 
                          "\n", "\t\t\t\t\t\t", RowBox[{"ags", " ", "=", " ", 
                          RowBox[{"TrueQ", "@", RowBox[{"OptionValue", "[", 
                          "\"AutoGenerateSave\"", "]"}]}]}], ",", "\n", 
                          "\t\t\t\t\t\t", RowBox[{"sa", " ", "=", " ", RowBox[
                          {"TrueQ", "@", RowBox[{"OptionValue", "[", 
                          "\"HandleSavingAction\"", "]"}]}]}]}], "\n", 
                          "\t\t\t\t\t\t", "}"}], ",", "\n", "\t\t\t\t\t", 
                          RowBox[{RowBox[{"If", "[", RowBox[{RowBox[{"f", 
                          " ", "===", " ", "Automatic"}], ",", "\n", 
                          "\t\t\t\t\t\t", RowBox[{"f", " ", "=", " ", RowBox[
                          {"IDEPath", "[", RowBox[{"nb", ",", " ", RowBox[
                          {"Key", "[", "\"ActiveFile\"", "]"}]}], "]"}]}]}], 
                          "\n", "\t\t\t\t\t\t", "]"}], ";", "\n", 
                          "\t\t\t\t\t", RowBox[{"If", "[", RowBox[{RowBox[
                          {"f", "=!=", "None"}], ",", "\n", "\t\t\t\t\t\t", 
                          RowBox[{RowBox[{"f", " ", "=", " ", RowBox[
                          {"IDEPath", "[", RowBox[{"nb", ",", " ", "f"}], 
                          "]"}]}], ";", "\n", "\t\t\t\t\t\t", RowBox[
                          {"Switch", "[", RowBox[{RowBox[{"FileExtension", 
                          "[", "f", "]"}], ",", "\n", "\t", "\t", "\t", "\t", 
                          "\t\t\t", "\"nb\"", ",", "\n", "\t\t\t\t\t\t\t\t", 
                          RowBox[{RowBox[{"If", "[", RowBox[{"preemptive", 
                          ",", "\n", "\t\t\t\t\t\t\t\t\t", RowBox[{
                          "PreemptiveQueued", "[", RowBox[{"nb", ",", " ", 
                          RowBox[{"notebookSaveNotebook", "[", RowBox[{"f", 
                          ",", " ", "nb"}], "]"}]}], "]"}], ",", "\n", 
                          "\t\t\t\t\t\t\t\t\t ", RowBox[{RowBox[{
                          "$SaveNotebookMethod", "[", RowBox[{"f", ",", " ", 
                          "nb"}], "]"}], ";"}]}], "\n", "\t\t\t\t\t\t\t\t\t", 
                          "]"}], ";", "\n", "\t\t\t\t\t\t\t\t", RowBox[{"If", 
                          "[", RowBox[{"ags", ",", "\n", 
                          "\t\t\t\t\t\t\t\t  ", RowBox[{RowBox[{"If", "[", 
                          RowBox[{"preemptive", ",", "\n", "  ", 
                          "\t\t\t\t\t\t\t\t\t", RowBox[{"Function", "[", 
                          RowBox[{"Null", ",", " ", RowBox[{
                          "PreemptiveQueued", "[", RowBox[{"nb", ",", " ", 
                          "#"}], "]"}], ",", " ", "HoldAllComplete"}], "]"}], 
                          ",", "\n", "  ", "\t\t\t\t\t\t\t\t\t", RowBox[{"#", 
                          "&"}]}], "\n", "  \t\t\t\t\t\t\t\t\t", "]"}], "@", 
                          RowBox[{"notebookHandleAutoSave", "[", RowBox[{"f", 
                          ",", " ", "nb"}], "]"}]}]}], "\n", 
                          "  \t\t\t\t\t\t\t\t", "]"}], ";", "\n", 
                          "  \t\t\t\t\t\t ", RowBox[{"If", "[", RowBox[{"sa", 
                          ",", "\n", "  \t\t\t\t\t\t   ", RowBox[{
                          "ReleaseHold", "@", RowBox[{"IDEData", "[", RowBox[
                          {"nb", ",", " ", "\"SavingAction\""}], "]"}]}]}], 
                          "\n", "  \t\t\t\t\t\t   ", "]"}]}], ",", "\n", 
                          "\t\t\t\t\t\t\t", RowBox[{"\"m\"", "|", "\"wl\""}], 
                          ",", "\n", "\t\t\t\t\t\t\t\t", RowBox[{"If", "[", 
                          RowBox[{"preemptive", ",", "\n", 
                          "\t\t\t\t\t\t\t\t\t", RowBox[{RowBox[{"nbExpr", 
                          " ", "=", RowBox[{"GetNotebookExpression", "[", 
                          "nb", "]"}]}], ";", "\n", "\t\t\t\t\t\t\t\t\t", 
                          RowBox[{"PreemptiveQueued", "[", RowBox[{"nb", ",", 
                          "\n", "\t\t\t\t\t\t\t\t\t\t", RowBox[{
                          "Internal`WithLocalSettings", "[", "\n", 
                          "\t\t\t\t\t\t\t\t\t\t\t", RowBox[{RowBox[{"nbObj", 
                          " ", "=", " ", RowBox[{"CreateDocument", "[", 
                          RowBox[{"nbExpr", ",", " ", RowBox[{"Visible", 
                          "\[Rule]", "False"}]}], "]"}]}], ",", "\n", 
                          "\t\t\t\t\t\t\t\t\t\t\t", RowBox[{
                          "FrontEndExecute", "@", "\n", 
                          "\t\t\t\t\t\t\t\t\t\t\t\t", RowBox[{
                          "FrontEndToken", "[", "\n", 
                          "\t\t\t\t\t\t\t\t\t\t\t\t\t", RowBox[{"nbObj", ",", 
                          "\n", "\t", "\t", "\t\t\t\t\t\t\t\t\t\t\t", 
                          "\"Save\"", ",", "\n", "\t", "\t", "\t", "\t", 
                          "\t", "\t", "\t", "\t\t\t\t\t\t", RowBox[{"{", 
                          RowBox[{"f", ",", " ", "\"Package\""}], "}"}]}], 
                          "\n", "\t\t\t\t\t\t\t\t\t\t\t\t\t", "]"}]}], ",", 
                          "\n", "\t\t\t\t\t\t\t\t\t\t\t", RowBox[{
                          "NotebookClose", "[", "nbObj", "]"}]}], "\n", 
                          "\t\t\t\t\t\t\t\t\t\t\t", "]"}]}], "\n", 
                          "\t\t\t\t\t\t\t\t\t\t", "]"}]}], ",", "\n", 
                          "\t\t\t\t\t\t\t\t\t", RowBox[{RowBox[{"nbObj", " ", 
                          "=", " ", "nb"}], ";", "\n", "\t\t\t\t\t\t\t\t\t", 
                          RowBox[{"FrontEndExecute", "@", "\n", 
                          "\t\t\t\t\t\t\t\t\t\t", RowBox[{"FrontEndToken", 
                          "[", "\n", "\t\t\t\t\t\t\t\t\t\t\t", RowBox[{
                          "nbObj", ",", "\n", "\t\t\t\t\t\t\t\t\t\t\t", 
                          "\"Save\"", ",", "\n", "\t", "\t", "\t", "\t", 
                          "\t", "\t\t\t\t\t\t", RowBox[{"{", RowBox[{"f", 
                          ",", " ", "\"Package\""}], "}"}]}], "\n", 
                          "\t\t\t\t\t\t\t\t\t\t\t", "]"}]}]}]}], "\n", 
                          "\t\t\t\t\t\t\t\t\t", "]"}], ",", "\n", 
                          "\t\t\t\t\t\t\t", "_", ",", "\n", 
                          "\t\t\t\t\t\t\t\t", RowBox[{"If", "[", RowBox[
                          {"preemptive", ",", "\n", "\t\t\t\t\t\t\t\t\t", 
                          RowBox[{RowBox[{"nbExpr", " ", "=", RowBox[{
                          "GetNotebookExpression", "[", "nb", "]"}]}], ";", 
                          "\n", "\t\t\t\t\t\t\t\t\t", RowBox[{
                          "PreemptiveQueued", "[", RowBox[{"nb", ",", "\n", 
                          "\t\t\t\t\t\t\t\t\t\t", RowBox[{
                          "Internal`WithLocalSettings", "[", "\n", 
                          "\t\t\t\t\t\t\t\t\t\t\t", RowBox[{RowBox[{"nbObj", 
                          " ", "=", " ", RowBox[{"CreateDocument", "[", 
                          RowBox[{"nbExpr", ",", " ", RowBox[{"Visible", 
                          "\[Rule]", "False"}]}], "]"}]}], ",", "\n", 
                          "\t\t\t\t\t\t\t\t\t\t\t", RowBox[{
                          "FrontEndExecute", "@", "\n", 
                          "\t\t\t\t\t\t\t\t\t\t\t\t", RowBox[{
                          "FrontEndToken", "[", "\n", 
                          "\t\t\t\t\t\t\t\t\t\t\t\t\t", RowBox[{"nbObj", ",", 
                          "\n", "\t", "\t", "\t\t\t\t\t\t\t\t\t\t\t", 
                          "\"Save\"", ",", "\n", "\t", "\t", "\t", "\t", 
                          "\t", "\t", "\t", "\t\t\t\t\t\t", RowBox[{"{", 
                          RowBox[{"f", ",", " ", "\"Text\""}], "}"}]}], "\n", 
                          "\t\t\t\t\t\t\t\t\t\t\t\t\t", "]"}]}], ",", "\n", 
                          "\t\t\t\t\t\t\t\t\t\t\t", RowBox[{"NotebookClose", 
                          "[", "nbObj", "]"}]}], "\n", 
                          "\t\t\t\t\t\t\t\t\t\t\t", "]"}]}], "\n", 
                          "\t\t\t\t\t\t\t\t\t\t", "]"}]}], ",", "\n", 
                          "\t\t\t\t\t\t\t\t\t", RowBox[{RowBox[{"nbObj", " ", 
                          "=", " ", "nb"}], ";", "\n", "\t\t\t\t\t\t\t\t\t", 
                          RowBox[{"FrontEndExecute", "@", "\n", 
                          "\t\t\t\t\t\t\t\t\t\t", RowBox[{"FrontEndToken", 
                          "[", "\n", "\t\t\t\t\t\t\t\t\t\t\t", RowBox[{
                          "nbObj", ",", "\n", "\t\t\t\t\t\t\t\t\t\t\t", 
                          "\"Save\"", ",", "\n", "\t", "\t", "\t", "\t", 
                          "\t", "\t\t\t\t\t\t", RowBox[{"{", RowBox[{"f", 
                          ",", " ", "\"Text\""}], "}"}]}], "\n", 
                          "\t\t\t\t\t\t\t\t\t\t\t", "]"}]}]}]}], "\n", 
                          "\t\t\t\t\t\t\t\t\t", "]"}]}], "\n", 
                          "\t\t\t\t\t\t\t", "]"}]}]}], "\n", "\t\t\t\t\t\t", 
                          "]"}]}]}], "\n", "\t\t\t\t\t", "]"}], ";", "\n", 
                          "\t\t\t  ", RowBox[{"If", "[", RowBox[{RowBox[
                          {"OptionValue", "[", "\"ClearCache\"", "]"}], ",", 
                          "\n", "\t\t\t    ", RowBox[{"ClearCachedTabData", 
                          "[", "nb", "]"}]}], "\n", "\t\t\t    ", "]"}]}]}], 
                          "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t\t", "]"}]}], 
                      ";"}]}], "\n", "\t\t", "]"}], ";"}], "\n", 
              RowBox[{RowBox[{"NotebookSaveContents", "[", RowBox[
                   {"nb_NotebookObject", ",", " ", "\n", "\t\t", RowBox[
                     {"file", ":", RowBox[{"_String", "|", "Automatic"}], 
                      ":", "Automatic"}], ",", "\n", "\t\t", RowBox[
                     {"preempt", ":", RowBox[{"True", "|", "False"}]}], ",", 
                    "\n", "\t\t", RowBox[{"ops", ":", RowBox[
                       {"OptionsPattern", "[", "]"}]}]}], "\n", "\t\t", 
                  "]"}], ":=", "\n", "\t\t", RowBox[{"NotebookSaveContents", 
                  "[", RowBox[{"nb", ",", " ", "file", ",", " ", RowBox[
                     {"\"Preemptive\"", "\[Rule]", "preempt"}], ",", " ", 
                    "ops"}], "]"}]}]}], "CodeInput"]}, Closed]], 
        Cell[CellGroupData[
          {Cell["\[LeftCeiling]NotebookPutScratch\[RightFloor] ", 
            "CodeSubsubsection", Evaluatable -> True], 
           Cell[BoxData[RowBox[{RowBox[{"NotebookPutScratch", "[", 
                 RowBox[{"nb_", ",", " ", "expr_Notebook"}], "]"}], ":=", 
               "\n", "  ", RowBox[{"NotebookPutFile", "[", RowBox[{"nb", ",", 
                   " ", RowBox[{"CreateProjectScratchFile", "[", RowBox[
                      {"nb", ",", " ", "expr"}], "]"}]}], "]"}]}]], 
            "CodeInput"]}, Closed]]}, Open]], 
     Cell[CellGroupData[{Cell["\[LeftCeiling]File Operations\[RightFloor]", 
         "CodeSubsection", Evaluatable -> True], 
        Cell[CellGroupData[
          {Cell["\[LeftCeiling]EnsureNotebookUpdated\[RightFloor]", 
            "CodeSubsubsection", Evaluatable -> True], 
           Cell[BoxData[RowBox[{RowBox[{"EnsureNotebookUpdated", "[", 
                 RowBox[{"nb_NotebookObject", ",", " ", RowBox[{"openDialog", 
                     ":", RowBox[{"True", "|", "False"}], ":", "True"}]}], 
                 "]"}], ":=", "\n", "  ", RowBox[{"Module", "[", "\n", 
                 "    ", RowBox[{RowBox[{"{", "\n", "      ", RowBox[
                      {RowBox[{"nbDate", " ", "=", " ", "\n", "        ", 
                         RowBox[{"FromAbsoluteTime", "[", RowBox[{RowBox[
                          {"Lookup", "[", RowBox[{RowBox[{
                          "NotebookInformation", "[", "nb", "]"}], ",", " ", 
                          "\"MemoryModificationTime\""}], "]"}], ",", " ", 
                          RowBox[{"TimeZone", "\[Rule]", "0"}]}], "]"}]}], 
                       ",", "\n", "      ", RowBox[{"buffer", " ", "=", " ", 
                         RowBox[{"Quantity", "[", RowBox[{"3", ",", " ", 
                          "\"Seconds\""}], "]"}]}], ",", "\n", "      ", 
                       RowBox[{"active", " ", "=", " ", RowBox[{"IDEPath", 
                          "[", RowBox[{"nb", ",", " ", RowBox[{"Key", "[", 
                          "\"ActiveFile\"", "]"}]}], "]"}]}], ",", "\n", 
                       "      ", "needsUpdate", ",", "\n", "      ", 
                       "hasDeclined"}], "\n", "      ", "}"}], ",", "\n", 
                   "    ", RowBox[{RowBox[{"needsUpdate", " ", "=", " ", 
                       RowBox[{"Quiet", "[", RowBox[{"TrueQ", "[", RowBox[
                          {RowBox[{"FileDate", "[", "active", "]"}], ">", 
                          RowBox[{"nbDate", "+", "buffer"}]}], "]"}], 
                         "]"}]}], ";", "\n", "    ", RowBox[{"If", "[", 
                       RowBox[{RowBox[{"needsUpdate", "&&", "openDialog"}], 
                         ",", "\n", "      ", RowBox[{RowBox[{"hasDeclined", 
                          " ", "=", " ", RowBox[{"IDEData", "[", RowBox[
                          {"nb", ",", " ", RowBox[{"PrivateKey", "[", 
                          "\"CheckUpdateData\"", "]"}]}], "]"}]}], ";", "\n", 
                          "      ", RowBox[{"If", "[", RowBox[{RowBox[{"!", 
                          RowBox[{"AssociationQ", "@", "hasDeclined"}]}], 
                          ",", "\n", "        ", RowBox[{"hasDeclined", " ", 
                          "=", " ", RowBox[{"<|", RowBox[{RowBox[{"\"Tab\"", 
                          "\[Rule]", "active"}], ",", " ", RowBox[
                          {"\"InUpdate\"", "\[Rule]", "False"}], ",", " ", 
                          RowBox[{"\"HasDeclined\"", "\[Rule]", "False"}]}], 
                          "|>"}]}]}], "\n", "        ", "]"}], ";", "\n", 
                          "      ", RowBox[{"If", "[", RowBox[{RowBox[
                          {RowBox[{"(", RowBox[{RowBox[{"!", RowBox[{"TrueQ", 
                          "[", RowBox[{"hasDeclined", "[", "\"InUpdate\"", 
                          "]"}], "]"}]}], "&&", RowBox[{"!", RowBox[{"TrueQ", 
                          "[", RowBox[{"hasDeclined", "[", "\"HasDeclined\"", 
                          "]"}], "]"}]}]}], ")"}], "||", "\n", "          ", 
                          RowBox[{RowBox[{"hasDeclined", "[", "\"Tab\"", 
                          "]"}], "=!=", "active"}]}], ",", "\n", "        ", 
                          RowBox[{"With", "[", RowBox[{RowBox[{"{", RowBox[
                          {RowBox[{"active", "=", "active"}], ",", " ", 
                          RowBox[{"hasDeclined", "=", "hasDeclined"}]}], 
                          "}"}], ",", "\n", "          ", RowBox[{RowBox[
                          {RowBox[{"IDEData", "[", RowBox[{"nb", ",", " ", 
                          RowBox[{"PrivateKey", "[", "\"CheckUpdateData\"", 
                          "]"}]}], "]"}], " ", "=", " ", "\n", 
                          "            ", RowBox[{"<|", RowBox[{RowBox[
                          {"\"Tab\"", "\[Rule]", "active"}], ",", " ", RowBox[
                          {"\"InUpdate\"", "\[Rule]", "True"}], ",", " ", 
                          RowBox[{"\"HasDeclined\"", "\[Rule]", RowBox[
                          {"hasDeclined", "[", "\"HasDeclined\"", "]"}]}]}], 
                          "|>"}]}], ";", "\n", "          ", RowBox[
                          {"CreateAttachedDialog", "[", "\n", "            ", 
                          RowBox[{"nb", ",", "\n", "            ", RowBox[
                          {"<|", "\n", "              ", RowBox[{RowBox[
                          {"\"Header\"", "\[Rule]", 
                          "\"Update from Disk?\""}], ",", "\n", "  ", "  ", 
                          "          ", RowBox[{"\"Body\"", "->", "\"File \
changed on disk. Would you like to reload?\""}], ",", "\n", "  ", "  ", 
                          "          ", RowBox[{"\"SubmitButton\"", "->", 
                          "\n", "  ", "  ", "            ", RowBox[{"{", 
                          "\n", "  ", "  ", "              ", RowBox[
                          {"\"Reload\"", ",", "\n", "  ", "  ", 
                          "              ", RowBox[{"Function", "[", "\n", 
                          "  ", "  ", "                ", RowBox[{RowBox[
                          {"NotebookDelete", "[", RowBox[{"EvaluationCell", 
                          "[", "]"}], "]"}], ";", "\n", "  ", "  ", 
                          "                ", RowBox[{"NotebookPutFile", "[", 
                          RowBox[{"nb", ",", " ", "active"}], "]"}], ";", 
                          "\n", "                    ", RowBox[{RowBox[
                          {"IDEData", "[", RowBox[{"nb", ",", " ", RowBox[
                          {"PrivateKey", "[", "\"CheckUpdateData\"", "]"}]}], 
                          "]"}], " ", "=", " ", "\n", 
                          "                      ", RowBox[{"Append", "[", 
                          RowBox[{"hasDeclined", ",", " ", RowBox[{
                          "\"HasDeclined\"", "\[Rule]", "False"}]}], "]"}]}], 
                          ";", "\n", "                    ", RowBox[{
                          "needsUpdate", " ", "=", " ", "False"}]}], "\n", 
                          "                    ", "]"}]}], "\n", "  ", 
                          "                ", "}"}]}], ",", "\n", "  ", 
                          "            ", RowBox[{"\"CancelButton\"", "->", 
                          "\n", "  ", "              ", RowBox[{"{", "\n", 
                          "  ", "                ", RowBox[{"\"Cancel\"", 
                          ",", "\n", "  ", "                ", RowBox[
                          {"Function", "[", "\n", "  ", "  ", 
                          "                ", RowBox[{RowBox[{
                          "NotebookDelete", "[", RowBox[{"EvaluationCell", 
                          "[", "]"}], "]"}], ";", "\n", 
                          "                    ", RowBox[{RowBox[{"IDEData", 
                          "[", RowBox[{"nb", ",", " ", RowBox[{"PrivateKey", 
                          "[", "\"CheckUpdateData\"", "]"}]}], "]"}], " ", 
                          "=", " ", "\n", "                      ", RowBox[
                          {"Append", "[", RowBox[{"hasDeclined", ",", " ", 
                          RowBox[{"\"HasDeclined\"", "\[Rule]", "True"}]}], 
                          "]"}]}], ";"}], "\n", "                    ", 
                          "]"}]}], "\n", "                  ", "}"}]}]}], 
                          "\n", "              ", "|>"}]}], "\n", 
                          "            ", "]"}]}]}], "\n", "          ", 
                          "]"}]}], "\n", "        ", "]"}]}]}], "\n", 
                       "      ", "]"}], ";", "\n", "    ", RowBox[{"!", 
                       "needsUpdate"}]}]}], "\n", "    ", "]"}]}]], 
            "CodeInput"]}, Closed]], Cell[CellGroupData[
          {Cell["\[LeftCeiling]GetFileTabName\[RightFloor]", 
            "CodeSubsubsection", Evaluatable -> True], 
           Cell[BoxData[RowBox[{RowBox[{"GetFileTabName", "[", RowBox[
                  {"nb_", ",", " ", "f_"}], "]"}], ":=", "\n", "\t", RowBox[
                {"Module", "[", "\n", "\t\t", RowBox[{RowBox[{"{", "\n", 
                     "\t\t\t", RowBox[{RowBox[{"tabs", " ", "=", " ", 
                         RowBox[{"IDEData", "[", RowBox[{"nb", ",", " ", 
                          "\"Tabs\""}], "]"}]}], ",", "\n", "\t\t\t", "tns", 
                       ",", "\n", "\t\t\t", "tabName"}], "\n", "\t\t\t", 
                     "}"}], ",", "\n", "\t\t", RowBox[{RowBox[{"tabName", 
                       " ", "=", "\n", "\t\t\t", RowBox[{"Do", "[", RowBox[
                          {RowBox[{"If", "[", RowBox[{RowBox[{RowBox[
                          {"Lookup", "[", RowBox[{RowBox[{"t", "[", RowBox[
                          {"[", "2", "]"}], "]"}], ",", " ", "\"File\""}], 
                          "]"}], "\[Equal]", "f"}], ",", " ", RowBox[
                          {"Return", "[", RowBox[{RowBox[{"t", "[", RowBox[
                          {"[", "1", "]"}], "]"}], ",", " ", "Do"}], "]"}]}], 
                          "]"}], ",", " ", RowBox[{"{", RowBox[{"t", ",", 
                          " ", "tabs"}], "}"}]}], "]"}]}], ";", "\n", "\t\t", 
                     RowBox[{"If", "[", RowBox[{RowBox[{"tabName", "===", 
                          "Null"}], ",", "\n", "\t\t\t", RowBox[{RowBox[
                          {"tabName", " ", "=", " ", RowBox[{"FileBaseName", 
                          "[", "f", "]"}]}], ";", "\n", "\t\t\t", RowBox[
                          {"tns", " ", "=", " ", RowBox[{"tabs", "[", RowBox[
                          {"[", RowBox[{"All", ",", " ", "1"}], "]"}], 
                          "]"}]}], ";", "\n", "\t\t\t", RowBox[{"If", "[", 
                          RowBox[{RowBox[{"MemberQ", "[", RowBox[{"tns", ",", 
                          " ", "tabName"}], "]"}], ",", "\n", "\t", "\t\t\t", 
                          RowBox[{"tabName", " ", "=", " ", RowBox[
                          {"tabName", " ", "<>", " ", "\".\"", " ", "<>", 
                          " ", RowBox[{"FileExtension", "[", "f", 
                          "]"}]}]}]}], "\n", "\t\t\t\t", "]"}], ";", "\n", 
                          "\t\t\t", RowBox[{"tabName", "=", "\n", "\t\t\t\t", 
                          RowBox[{"NestWhile", "[", "\n", "\t\t\t\t\t", 
                          RowBox[{RowBox[{RowBox[{"#", " ", "<>", " ", 
                          "\"/\"", " ", "<>", " ", RowBox[{"FileNameTake", 
                          "[", RowBox[{"f", ",", " ", RowBox[{"-", RowBox[
                          {"Length", "[", RowBox[{"URLParse", "[", RowBox[
                          {"#", ",", " ", "\"Path\""}], "]"}], "]"}]}]}], 
                          "]"}]}], "&"}], ",", "\n", "\t", "\t\t\t\t", 
                          "tabName", ",", "\n", "\t", "\t\t\t\t", RowBox[
                          {RowBox[{"MemberQ", "[", RowBox[{"tns", ",", " ", 
                          "#"}], "]"}], "&"}], ",", "\n", "\t\t\t\t\t", "1", 
                          ",", "\n", "\t\t\t\t\t", RowBox[{RowBox[
                          {"FileNameDepth", "[", "f", "]"}], "-", "1"}]}], 
                          "\n", "\t", "\t\t\t\t", "]"}]}]}]}], "\n", 
                       "\t\t\t", "]"}], ";", "\n", "\t\t", "tabName"}]}], 
                 "\n", "\t\t", "]"}]}]], "CodeInput"]}, Closed]], 
        Cell[CellGroupData[{Cell["\[LeftCeiling]IDEOpen\[RightFloor]", 
            "CodeSubsubsection", Evaluatable -> True], 
           Cell[BoxData[{RowBox[{RowBox[{RowBox[{"IDEOpen", "[", RowBox[
                     {"nb_NotebookObject", ",", " ", RowBox[{"f_String", "?", 
                        "FileExistsQ"}]}], "]"}], ":=", "\n", "\t", 
                  RowBox[{"Module", "[", "\n", "\t\t", RowBox[
                     {RowBox[{"{", "\n", "\t\t\t", RowBox[{"nbObj", ",", 
                          "\n", "\t\t\t", "nbExpr", ",", "\n", "\t\t\t", 
                          "tabName"}], "\n", "\t\t\t", "}"}], ",", "\n", 
                      "\t\t", RowBox[{RowBox[{"tabName", " ", "=", " ", 
                          RowBox[{"GetFileTabName", "[", RowBox[{"nb", ",", 
                          " ", "f"}], "]"}]}], ";", "\n", "\t\t", RowBox[
                         {"If", "[", RowBox[{RowBox[{"!", RowBox[{"TrueQ", 
                          "@", RowBox[{"IDETabExists", "[", RowBox[{"nb", 
                          ",", " ", "tabName"}], "]"}]}]}], ",", "\n", 
                          "\t\t\t", RowBox[{"NotebookCreateTab", "[", RowBox[
                          {"nb", ",", " ", "tabName", ",", " ", "\n", "\t", 
                          "\t\t\t", RowBox[{"{", "\n", "\t", "\t\t\t\t", 
                          RowBox[{"\"File\"", "\[Rule]", "f"}], "\t", "\n", 
                          "\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t", "]"}]}], 
                          "\n", "\t\t\t", "]"}], ";", "\n", "\t\t", RowBox[
                         {"NotebookSwitchTab", "[", RowBox[{"nb", ",", " ", 
                          "tabName"}], "]"}]}]}], "\n", "\t\t", "]"}]}], 
                ";"}], "\n", RowBox[{RowBox[{RowBox[{"IDEOpen", "[", 
                    RowBox[{"nb_IDENotebookObject", ",", " ", RowBox[
                       {"f_String", "?", "FileExistsQ"}]}], "]"}], ":=", 
                  "\n", "\t", RowBox[{"IDEOpen", "[", RowBox[{RowBox[
                       {"nb", "[", "\"Notebook\"", "]"}], ",", " ", "f"}], 
                    "]"}]}], ";"}], "\n", RowBox[{RowBox[{RowBox[{"IDEOpen", 
                    "[", RowBox[{"nb_NotebookObject", ",", " ", 
                      "expr_Notebook"}], "]"}], ":=", "\n", "  ", 
                  RowBox[{"IDEOpen", "[", RowBox[{"nb", ",", " ", RowBox[
                       {"CreateProjectScratchFile", "[", RowBox[{"nb", ",", 
                          " ", "expr"}], "]"}]}], "]"}]}], ";"}], "\n", 
              RowBox[{RowBox[{RowBox[{"IDEOpen", "[", RowBox[
                     {"nb_IDENotebookObject", ",", " ", "expr_Notebook"}], 
                    "]"}], ":=", "\n", "\t", RowBox[{"IDEOpen", "[", 
                    RowBox[{RowBox[{"nb", "[", "\"Notebook\"", "]"}], ",", 
                      " ", "expr"}], "]"}]}], ";"}], "\n", 
              RowBox[{RowBox[{RowBox[{"IDEOpen", "[", RowBox[{"e", ":", 
                      RowBox[{RowBox[{"_String", "?", "FileExistsQ"}], "|", 
                        "_Notebook"}]}], "]"}], ":=", "\n", "  ", 
                  RowBox[{"IDEOpen", "[", RowBox[{"$CurrentIDENotebook", ",", 
                      " ", "e"}], "]"}]}], ";"}]}], "CodeInput"]}, Closed]], 
        Cell[CellGroupData[{Cell["\[LeftCeiling]IDESave\[RightFloor]", 
            "CodeSubsubsection", Evaluatable -> True], 
           Cell[BoxData[{RowBox[{"IDESave", "//", "Clear"}], "\n", 
              RowBox[{RowBox[{RowBox[{"IDESave", "[", RowBox[
                     {"nb_NotebookObject", ",", " ", RowBox[{"ops", ":", 
                        RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], 
                  ":=", "\n", "\t", RowBox[{"NotebookSaveContents", "[", 
                    RowBox[{"nb", ",", " ", "ops"}], "]"}]}], ";"}], "\n", 
              RowBox[{RowBox[{RowBox[{"IDESave", "[", RowBox[
                     {"nb_IDENotebookObject", ",", " ", RowBox[{"ops", ":", 
                        RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], 
                  ":=", "\n", "\t", RowBox[{"IDESave", "[", RowBox[
                     {RowBox[{"nb", "[", "\"Notebook\"", "]"}], ",", " ", 
                      "ops"}], "]"}]}], ";"}], "\n", RowBox[{RowBox[
                 {RowBox[{"IDESave", "[", RowBox[{"ops", ":", RowBox[
                       {"OptionsPattern", "[", "]"}]}], "]"}], ":=", "\n", 
                  "  ", RowBox[{"IDESave", "[", RowBox[
                     {"$CurrentIDENotebook", ",", " ", "ops"}], "]"}]}], 
                ";"}]}], "CodeInput"]}, Closed]], 
        Cell[CellGroupData[{Cell["\[LeftCeiling]IDEClose\[RightFloor]", 
            "CodeSubsubsection", Evaluatable -> True], 
           Cell[BoxData[{RowBox[{RowBox[{RowBox[{"IDEClose", "[", RowBox[
                     {"nb_NotebookObject", ",", " ", "tabName_"}], "]"}], 
                  ":=", "\n", "\t", RowBox[{"If", "[", RowBox[
                     {RowBox[{"IDETabExists", "[", "tabName", "]"}], ",", 
                      "\n", "\t\t", RowBox[{"NotebookCloseTab", "[", 
                        RowBox[{"nb", ",", " ", "tabName"}], "]"}]}], "\n", 
                    "\t\t", "]"}]}], ";"}], "\n", RowBox[{RowBox[
                 {RowBox[{"IDEClose", "[", RowBox[{"nb_IDENotebookObject", 
                      ",", " ", "tabName_"}], "]"}], ":=", "\n", "\t", 
                  RowBox[{"IDEClose", "[", RowBox[{RowBox[{"nb", "[", 
                        "\"Notebook\"", "]"}], ",", " ", "tabName"}], 
                    "]"}]}], ";"}], "\n", RowBox[{RowBox[{RowBox[{"IDEClose", 
                    "[", "tabName_", "]"}], ":=", "\n", "  ", RowBox[
                   {"IDEClose", "[", RowBox[{"$CurrentIDENotebook", ",", " ", 
                      "tabName"}], "]"}]}], ";"}]}], "CodeInput"]}, 
          Closed]]}, Open]], Cell[BoxData[RowBox[{RowBox[{"End", "[", "]"}], 
         ";"}]], "InputSection"]}, Open]], Cell["", "SectionSeparator"]}, 
 WindowSize -> {808, 755}, WindowMargins -> 
  {{11, Automatic}, {33, Automatic}}, TaggingRules -> 
  {"UUIDButtons" -> 
    {"Active" -> {"Button-89ffd2c3-ec41-4179-a9b1-8e28670bca2c" -> False, 
       "Button-ca46e5e0-4fd1-47e8-8cf6-72998922b757" -> False, 
       "Button-a6d68254-3684-4d32-83fc-e5ef6f443930" -> False}}}, 
 FrontEndVersion -> "12.0 for Mac OS X x86 (64-bit) (April 8, 2019)", 
 StyleDefinitions -> FrontEnd`FileName[{"BTools"}, "CodePackage.nb", 
   CharacterEncoding -> "UTF-8"]]
