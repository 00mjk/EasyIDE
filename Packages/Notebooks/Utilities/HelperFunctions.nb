(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[     13536,        373]
NotebookOptionsPosition[      9931,        295]
NotebookOutlinePosition[     10597,        318]
CellTagsIndexPosition[     10554,        315]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Helper Functions", "CodeSection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"WithNotebookPaused", "::", "usage"}], "=", 
   "\"\<Pauses the notebook temporarily to execute code\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PreemptiveQueued", "::", "usage"}], "=", 
   "\"\<Evaluates preemptive code in a queued fashion\>\""}], 
  ";"}]}], "CodeInput"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"WithCurrentValueUpdating", "::", "usage"}], "=", 
   "\"\<Executes with CurrentValue updating resumed\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WithoutCurrentValueUpdating", "::", "usage"}], "=", 
   "\"\<Executes with CurrentValue updating paused\>\""}], 
  ";"}]}], "CodeInput"],

Cell["\[LeftCeiling]Consistent references to the current IDE notebook\
\[RightFloor]", "Text",
 Evaluatable->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$CurrentIDENotebook", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"$CurrentIDE", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]}], "CodeInput"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetCurrentValue", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetCurrentValueDelayed", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]}], "CodeInput"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}]], "InputSection"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]CurrentValues\[RightFloor]", "CodeSubsection",
 Evaluatable->True],

Cell[BoxData[{
 RowBox[{"SetCurrentValue", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{"SetCurrentValue", "[", 
   RowBox[{"nb_", ",", " ", "k_", ",", " ", "value_"}], "]"}], ":=", "\n", 
  "  ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"h", "=", "FrontEnd`$TrackingEnabled"}], "}"}], ",", "\n", 
    "  \t", 
    RowBox[{"MathLink`CallFrontEndHeld", "[", "\n", "      ", 
     RowBox[{"FrontEnd`SetValue", "[", "\n", "\t\t\t\t\t", 
      RowBox[{
       RowBox[{"FEPrivate`Set", "[", "\n", "\t\t\t\t\t\t", 
        RowBox[{
         RowBox[{"FrontEnd`CurrentValue", "[", 
          RowBox[{"nb", ",", " ", "k"}], "]"}], ",", " ", "\n", "          ", 
         "value"}], "\n", "\t\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t\t", 
       "h"}], "\n", "\t\t\t\t\t", "]"}], "\n", "      ", "]"}]}], "\n", 
   "    ", "]"}]}]}], "CodeInput"],

Cell[BoxData[{
 RowBox[{"SetCurrentValueDelayed", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{"SetCurrentValueDelayed", "[", 
   RowBox[{"nb_", ",", " ", "k_", ",", " ", 
    RowBox[{"Hold", "[", "value_", "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"h", "=", "FrontEnd`$TrackingEnabled"}], "}"}], ",", "\n", "  ", 
    "\t", 
    RowBox[{"MathLink`CallFrontEndHeld", "[", "\n", "  ", "    ", 
     RowBox[{"FrontEnd`SetValue", "[", "\n", "        ", 
      RowBox[{
       RowBox[{"FEPrivate`SetDelayed", "[", "\n", "          ", 
        RowBox[{
         RowBox[{"FrontEnd`CurrentValue", "[", 
          RowBox[{"nb", ",", " ", "k"}], "]"}], ",", " ", "\n", "          ", 
         "value"}], "\n", "  ", "        ", "]"}], ",", "\n", "  ", "      ", 
       "h"}], "\n", "  ", "      ", "]"}], "\n", "      ", "]"}]}], "\n", 
   "    ", "]"}]}]}], "CodeInput"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]IDE Refs\[RightFloor]", "CodeSubsection",
 Evaluatable->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$CurrentIDENotebook", " ", ":=", " ", 
   RowBox[{"EvaluationNotebook", "[", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"$CurrentIDE", " ", ":=", " ", 
   RowBox[{"IDENotebookObject", "[", "$CurrentIDENotebook", "]"}]}], 
  ";"}]}], "CodeInput"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Helpers\[RightFloor]", "CodeSubsection",
 Evaluatable->True],

Cell[CellGroupData[{

Cell["\[LeftCeiling]WithPausedNotebook\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True],

Cell["\<\
\[LeftCeiling]
\tHelper function to suspend the screen while updating the nb
\[RightFloor]\
\>", "Text",
 Evaluatable->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"WithNotebookPaused", "[", 
    RowBox[{"nb_NotebookObject", ",", " ", "expr_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Block", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t  ", 
      RowBox[{
       RowBox[{"paused", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"TrueQ", "@", "paused"}], ",", " ", "True", ",", " ", 
          "False"}], "]"}]}], ",", "\n", "\t  ", 
       RowBox[{"FrontEnd`$TrackingEnabled", " ", "=", " ", "False"}], ",", 
       "\n", "\t  ", "setDataCalls"}], " ", "\n", "\t    ", 
      RowBox[{"(*", " ", "\n", "\t            ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
           "Should", " ", "I", " ", "catch", " ", "all", " ", "of", " ", 
            "the", " ", "ideSetNbData", " ", "calls"}], "..."}], "?", " ", 
          "\n", "\t            ", "I"}], " ", "could", " ", "batch", " ", 
         "them", " ", "all", " ", "up", " ", "at", " ", "once", " ", "and", 
         " ", "maybe", " ", "decrease", " ", "the", " ", "amount", " ", "of", 
         " ", "processing", " ", "time"}], "..."}], "\n", "\t            ", 
       "*)"}], "\n", "\t  ", "}"}], ",", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{"paused", ",", "\n", "\t\t\t", "expr", ",", "\n", "\t\t\t", 
       RowBox[{"Internal`WithLocalSettings", "[", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"FrontEndExecute", "@", "\n", "\t", "\t", "\t\t\t", 
           RowBox[{
           "FrontEnd`NotebookSuspendScreenUpdates", "[", "nb", "]"}]}], ";"}],
          ",", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{"paused", " ", "=", " ", "True"}], ";", "\n", "\t\t\t\t", 
          "expr"}], ",", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{"FrontEndExecute", "@", "\n", "\t\t\t\t\t", 
           RowBox[{"FrontEnd`NotebookResumeScreenUpdates", "[", "nb", "]"}]}],
           ";"}]}], "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t\t", "]"}]}], "\n", 
    "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{"WithNotebookPaused", "~", "SetAttributes", "~", 
  "HoldRest"}]}], "CodeInput"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]WithCurrentValueUpdating\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"WithCurrentValueUpdating", "[", "expr_", "]"}], ":=", "\n", "\t", 
   
   RowBox[{"Block", "[", "\n", "\t  ", 
    RowBox[{
     RowBox[{"{", "\n", "  \t  ", 
      RowBox[{"FrontEnd`$TrackingEnabled", " ", "=", " ", "True"}], "\n", 
      "  ", "\t  ", "}"}], ",", "\n", "\t\t", "expr"}], "\n", "\t\t", "]"}]}],
   ";"}], "\n", 
 RowBox[{"WithCurrentValueUpdating", "~", "SetAttributes", "~", 
  "HoldRest"}]}], "CodeInput"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]WithoutCurrentValueUpdating\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True],

Cell["\<\
\[LeftCeiling]
\tHelper function to suspend the screen while updating the nb
\[RightFloor]\
\>", "Text",
 Evaluatable->True],

Cell[BoxData[{
 RowBox[{"WithoutCurrentValueUpdating", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WithoutCurrentValueUpdating", "[", "expr_", "]"}], ":=", "\n", 
   "\t", 
   RowBox[{"Block", "[", "\n", "\t  ", 
    RowBox[{
     RowBox[{"{", "\n", "  \t  ", 
      RowBox[{"FrontEnd`$TrackingEnabled", " ", "=", " ", "False"}], "\n", 
      "  ", "\t  ", "}"}], ",", "\n", "\t\t", "expr"}], "\n", "\t\t", "]"}]}],
   ";"}], "\n", 
 RowBox[{"WithoutCurrentValueUpdating", "~", "SetAttributes", "~", 
  "HoldRest"}]}], "CodeInput"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]IDEPreemptive\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PreemptiveQueued", "[", 
    RowBox[{"nb_", ",", " ", "expr_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"MessageDialog", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"DynamicModule", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\n", "\t\t\t", "Null", ",", "\n", "\t\t\t", 
       RowBox[{"Initialization", "\[RuleDelayed]", 
        RowBox[{"{", "\n", "\t\t\t\t", 
         RowBox[{"Internal`WithLocalSettings", "[", "\n", "\t\t\t\t\t", 
          RowBox[{"Null", ",", "\n", "\t\t\t\t\t", 
           RowBox[{"Block", "[", "\n", "\t\t\t\t\t\t", 
            RowBox[{
             RowBox[{"{", "\n", "\t\t\t\t\t\t\t", 
              RowBox[{"$CurrentIDENotebook", "=", "nb"}], "\n", 
              "\t\t\t\t\t\t\t", "}"}], ",", "\n", "\t\t\t\t\t\t", "expr"}], 
            "\n", "\t\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t\t", 
           RowBox[{"NotebookClose", "[", 
            RowBox[{"EvaluationNotebook", "[", "]"}], "]"}]}], "\n", 
          "\t\t\t\t\t", "]"}], "\n", "\t\t\t\t", "}"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"SynchronousInitialization", " ", "->", " ", "False"}]}], "\n",
       "\t\t\t", "]"}], ",", "\n", "\t\t", 
     RowBox[{"Visible", "\[Rule]", "False"}], ",", "\n", "\t\t", 
     RowBox[{"Evaluator", "\[Rule]", 
      RowBox[{"CurrentValue", "[", 
       RowBox[{"nb", ",", " ", "Evaluator"}], "]"}]}]}], "\n", "\t\t", 
    "]"}]}], ";"}], "\n", 
 RowBox[{"PreemptiveQueued", "~", "SetAttributes", "~", 
  "HoldRest"}]}], "CodeInput"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}]], "InputSection"]
}, Open  ]],

Cell["", "SectionSeparator"]
},
WindowSize->{808, 755},
WindowMargins->{{Automatic, 270}, {Automatic, 49}},
TaggingRules->{
 "UUIDButtons" -> {
   "Active" -> {
     "Button-89ffd2c3-ec41-4179-a9b1-8e28670bca2c" -> False, 
      "Button-ca46e5e0-4fd1-47e8-8cf6-72998922b757" -> False, 
      "Button-a6d68254-3684-4d32-83fc-e5ef6f443930" -> False}}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->FrontEnd`FileName[{"BTools"}, "CodePackage.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 39, 0, 70, "CodeSection",ExpressionUUID->"15d8057d-1eed-4e02-b3d7-9d179d9b1bef"],
Cell[464, 17, 331, 9, 70, "CodeInput",ExpressionUUID->"a7829aa9-ea6c-4943-b8ad-d64c56cf510f"],
Cell[798, 28, 341, 9, 70, "CodeInput",ExpressionUUID->"df728e75-df1a-427c-a838-56bbdc7640ff"],
Cell[1142, 39, 114, 2, 70, "Text",ExpressionUUID->"92a95426-1a8f-42ee-b9d2-d1efc7d1cf2e",
 Evaluatable->True],
Cell[1259, 43, 230, 8, 70, "CodeInput",ExpressionUUID->"aa242c9b-07bf-4f78-866b-0adee954a300"],
Cell[1492, 53, 234, 7, 70, "CodeInput",ExpressionUUID->"dfe24ef1-c2ea-4e30-bc30-5e8f58a41c4b"],
Cell[1729, 62, 99, 2, 70, "InputSection",ExpressionUUID->"6159279a-9957-4659-be87-a05e4160527d"],
Cell[CellGroupData[{
Cell[1853, 68, 86, 1, 70, "CodeSubsection",ExpressionUUID->"8cae0b1f-7ad2-404a-a785-77f93a33d5c1",
 Evaluatable->True],
Cell[1942, 71, 861, 20, 70, "CodeInput",ExpressionUUID->"38786a46-783b-4c39-93fb-2585fa6cbfd7"],
Cell[2806, 93, 922, 20, 70, "CodeInput",ExpressionUUID->"8e20e2c9-530e-4ac1-9e7e-ebf22bf39952"]
}, Closed]],
Cell[CellGroupData[{
Cell[3765, 118, 81, 1, 70, "CodeSubsection",ExpressionUUID->"c1a3e4b1-f311-4a14-9f55-53c81a7bea44",
 Evaluatable->True],
Cell[3849, 121, 281, 7, 70, "CodeInput",ExpressionUUID->"44e2f7fd-8666-48b1-88bb-e34ec8dc1e9a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4167, 133, 80, 1, 70, "CodeSubsection",ExpressionUUID->"6ae25e5d-bbbc-4017-86fa-ee09190b1f12",
 Evaluatable->True],
Cell[CellGroupData[{
Cell[4272, 138, 94, 1, 70, "CodeSubsubsection",ExpressionUUID->"4e8bdc28-a263-4b1e-8eb0-9c00d0e8d981",
 Evaluatable->True],
Cell[4369, 141, 134, 5, 70, "Text",ExpressionUUID->"385a88ca-e5aa-4534-890f-9774ac6ff2e0",
 Evaluatable->True],
Cell[4506, 148, 2165, 47, 70, "CodeInput",ExpressionUUID->"bd06b52d-f466-4995-b7f8-f6859e1bb9c1"]
}, Closed]],
Cell[CellGroupData[{
Cell[6708, 200, 102, 2, 70, "CodeSubsubsection",ExpressionUUID->"910cc142-a51f-4d1c-a247-96b4173ccb70",
 Evaluatable->True],
Cell[6813, 204, 473, 12, 70, "CodeInput",ExpressionUUID->"166ca040-be50-461d-8df8-0edfd242ffb2"]
}, Closed]],
Cell[CellGroupData[{
Cell[7323, 221, 105, 2, 70, "CodeSubsubsection",ExpressionUUID->"7547f741-4804-4b4e-a540-57955a2f47e0",
 Evaluatable->True],
Cell[7431, 225, 134, 5, 70, "Text",ExpressionUUID->"f43d1ca0-60be-4612-b3c4-0369cc8c9ec1",
 Evaluatable->True],
Cell[7568, 232, 544, 13, 70, "CodeInput",ExpressionUUID->"9b8a5fad-3cda-436a-b096-2ac4b2eb0914"]
}, Closed]],
Cell[CellGroupData[{
Cell[8149, 250, 89, 1, 70, "CodeSubsubsection",ExpressionUUID->"c36fa01f-0767-46a8-8872-b8a8d5c0761f",
 Evaluatable->True],
Cell[8241, 253, 1540, 31, 70, "CodeInput",ExpressionUUID->"23600f6c-4157-4fcb-87fc-4706ac314f32"]
}, Open  ]]
}, Open  ]],
Cell[9808, 288, 76, 2, 70, "InputSection",ExpressionUUID->"c04acdcf-272c-4664-87d6-c91db1d1448b"]
}, Open  ]],
Cell[9899, 293, 28, 0, 70, "SectionSeparator",ExpressionUUID->"4c6b6dfd-0cf7-494c-8364-f2f9c57f10b3"]
}
]
*)

