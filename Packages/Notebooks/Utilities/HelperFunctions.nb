Notebook[{Cell[CellGroupData[{Cell["Helper Functions", "CodeSection"], 
     Cell[BoxData[{RowBox[{RowBox[{RowBox[{"WithNotebookPaused", "::", 
              "usage"}], "=", 
            "\"Pauses the notebook temporarily to execute code\""}], ";"}], 
        "\n", RowBox[{RowBox[{RowBox[{"PreemptiveQueued", "::", "usage"}], 
            "=", "\"Evaluates preemptive code in a queued fashion\""}], 
          ";"}]}], "CodeInput"], 
     Cell[BoxData[{RowBox[{RowBox[{RowBox[{"WithFrontEndTracking", "::", 
              "usage"}], "=", "\n", "  ", 
            "\"Executes with FrontEnd tracking enabled\""}], ";"}], "\n", 
        RowBox[{RowBox[{RowBox[{"WithoutCurrentValueUpdating", "::", 
              "usage"}], "=", "\n", "  ", 
            "\"Executes with FrontEnd tracking disabled\""}], ";"}], "\n", 
        RowBox[{RowBox[{RowBox[{"WithCurrentValueUpdating", "::", "usage"}], 
            "=", "\n", "  ", "\"Alias for WithFrontEndTracking\""}], ";"}], 
        "\n", RowBox[{RowBox[{RowBox[{"WithoutCurrentValueUpdating", "::", 
              "usage"}], "=", "\n", "  ", 
            "\"Alias for WithoutFrontEndTracking\""}], ";"}]}], "CodeInput"], 
     Cell[BoxData[{RowBox[{RowBox[{RowBox[{"WithoutDynamics", "::", 
              "usage"}], "=", "\n", "  ", 
            "\"Executes with DynamicUpdating paused\""}], ";"}], "\n", 
        RowBox[{RowBox[{RowBox[{"WithoutScreenUpdates", "::", "usage"}], "=", 
            "\n", "  ", "\"Executes with DynamicUpdating paused\""}], ";"}], 
        "\n", RowBox[{RowBox[{RowBox[{"WithoutScreenUpdatesOrDynamics", "::", 
              "usage"}], "=", "\n", "\t", "\"Turns of both screen updates and \
DynamicUpdating in a clean fashion\""}], ";"}]}], "CodeInput"], 
     Cell[BoxData[RowBox[{RowBox[{RowBox[{"WithActiveNotebookPath", "::", 
             "usage"}], "=", "\n", "  ", "\"Temporarily sets NotebookFileName \
and NotebookDirectory to the ActiveFile path\""}], ";"}]], "CodeInput"], 
     Cell["\[LeftCeiling]Consistent references to the current IDE \
notebook\[RightFloor]", "Text", Evaluatable -> True], 
     Cell[BoxData[{RowBox[{RowBox[{RowBox[{"$CurrentIDENotebook", "::", 
              "usage"}], "=", "\"\""}], ";"}], "\n", 
        RowBox[{RowBox[{RowBox[{"$CurrentIDE", "::", "usage"}], "=", 
            "\"\""}], ";"}]}], "CodeInput"], 
     Cell[BoxData[{RowBox[{RowBox[{RowBox[{"GetCurrentValue", "::", 
              "usage"}], "=", 
            "\"Just reimplements CurrentValue for when it's needed\""}], 
          ";"}], "\n", RowBox[{RowBox[{RowBox[{"SetNotebookOptions", "::", 
              "usage"}], "=", 
            "\"Reimplements SetOptions for when that is needed\""}], ";"}], 
        "\n", RowBox[{RowBox[{RowBox[{"SetCurrentValue", "::", "usage"}], 
            "=", "\"\""}], ";"}], "\n", 
        RowBox[{RowBox[{RowBox[{"SetCurrentValueDelayed", "::", "usage"}], 
            "=", "\"\""}], ";"}], "\n", 
        RowBox[{RowBox[{RowBox[{"SetCurrentValues", "::", "usage"}], "=", 
            "\"Batch form of SetCurrentValue\""}], ";"}], "\n", 
        RowBox[{RowBox[{RowBox[{"SetCurrentValuesDelayed", "::", "usage"}], 
            "=", "\"Batch form of SetCurrentValueDelayed\""}], ";"}], "\n", 
        RowBox[{RowBox[{RowBox[{"WithIDEData", "::", "usage"}], "=", 
            "\"Reroutes CurrentValue to the EasyIDE path\""}], ";"}]}], 
      "CodeInput"], Cell[BoxData[RowBox[
        {RowBox[{"Begin", "[", "\"`Private`\"", "]"}], ";"}]], 
      "InputSection"], Cell[CellGroupData[
       {Cell["\[LeftCeiling]CurrentValues\[RightFloor]", "CodeSubsection", 
         Evaluatable -> True], Cell["\[LeftCeiling]\n\tI do a lot of hoop \
jumping to avoid having to call into the front end multiple times but I think \
it\[CloseCurlyQuote]s worth it...\n\[RightFloor]", "Text", 
         Evaluatable -> True], Cell[CellGroupData[
          {Cell["\[LeftCeiling]iCurrentValue\[RightFloor]", 
            "CodeSubsubsection", Evaluatable -> True], 
           Cell[BoxData[RowBox[{RowBox[{"GetCurrentValue", "[", "a___", 
                 "]"}], ":=", "\n", "  ", RowBox[{"iCurrentValue", "[", "a", 
                 "]"}]}]], "CodeInput"], Cell[BoxData[
             {RowBox[{RowBox[{RowBox[{RowBox[{"iCurrentValue", "[", "a___", 
                      "]"}], "/;", RowBox[{"!", RowBox[{"TrueQ", "[", 
                        "$inCVHeld", "]"}]}]}], ":=", "\n", "  ", 
                  RowBox[{"Block", "[", RowBox[{RowBox[{"{", 
                        "FrontEnd`CurrentValue", "}"}], ",", "\n", "  ", 
                      "  ", RowBox[{"With", "[", RowBox[{RowBox[{"{", RowBox[
                          {"c", "=", RowBox[{"FrontEnd`CurrentValue", "[", 
                          "a", "]"}]}], "}"}], ",", "\n", "  ", "  ", "  ", 
                          RowBox[{"Replace", "[", "\n", "  ", "  ", "    ", 
                          RowBox[{RowBox[{"MathLink`CallFrontEnd", "[", "\n", 
                          "  ", "  ", "  ", "    ", RowBox[{"FrontEnd`Value", 
                          "[", RowBox[{"c", ",", " ", 
                          "FrontEnd`$TrackingEnabled"}], "]"}], "]"}], ",", 
                          "\n", "  ", "  ", "  ", "  ", RowBox[{"c", 
                          "\[Rule]", "$Failed"}]}], "\n", "  ", "      ", 
                          "]"}]}], "\n", "      ", "]"}]}], "\n", "    ", 
                    "]"}]}], ";"}], "\n", RowBox[{"  ", RowBox[
                 {RowBox[{RowBox[{"iCurrentValue", "[", RowBox[{"nb_", ",", 
                        " ", "k_", ",", " ", "default___"}], "]"}], "/;", 
                    RowBox[{"TrueQ", "[", "$inCVHeld", "]"}]}], ":=", "\n", 
                  "   ", RowBox[{"If", "[", RowBox[{RowBox[{"KeyExistsQ", 
                        "[", RowBox[{"$setCurrentValueStack", ",", " ", 
                          RowBox[{"{", RowBox[{"nb", ",", " ", "k"}], 
                          "}"}]}], "]"}], ",", "\n", "     ", RowBox[
                       {"$setCurrentValueStack", "[", RowBox[{"{", RowBox[
                          {"nb", ",", " ", "k"}], "}"}], "]"}], ",", "\n", 
                      "     ", RowBox[{"Block", "[", RowBox[{RowBox[{"{", 
                          "$inCVHeld", "}"}], ",", " ", RowBox[
                          {"iCurrentValue", "[", RowBox[{"nb", ",", " ", "k", 
                          ",", " ", "default"}], "]"}]}], "]"}]}], "\n", 
                    "     ", "]"}]}]}]}], "CodeInput"]}, Closed]], 
        Cell[CellGroupData[{Cell["\[LeftCeiling]iSetOptions\[RightFloor]", 
            "CodeSubsubsection", Evaluatable -> True], 
           Cell[BoxData[RowBox[{RowBox[{"SetNotebookOptions", "[", 
                 RowBox[{"o_", ",", " ", "a___"}], "]"}], ":=", "\n", "  ", 
               RowBox[{"Block", "[", RowBox[{RowBox[{"{", 
                     "FrontEnd`SetOptions", "}"}], ",", "\n", "    ", 
                   RowBox[{"MathLink`CallFrontEnd", "@", "\n", "      ", 
                     RowBox[{"FrontEnd`SetOptions", "[", RowBox[{"o", ",", 
                         " ", "a"}], "]"}]}]}], "\n", "    ", "]"}]}]], 
            "CodeInput"]}, Closed]], Cell[CellGroupData[
          {Cell["\[LeftCeiling]SetCurrentValue\[RightFloor]", 
            "CodeSubsubsection", Evaluatable -> True], 
           Cell[BoxData[{RowBox[{"SetCurrentValue", "//", "Clear"}], "\n", 
              RowBox[{RowBox[{RowBox[{"SetCurrentValue", "[", RowBox[
                     {"nb_", ",", " ", "k_", ",", " ", "value_"}], "]"}], 
                  ":=", "\n", "  ", RowBox[{"iSetCurrentValue", "[", 
                    RowBox[{"nb", ",", " ", "k", ",", " ", "value"}], 
                    "]"}]}], ";"}], "\n", RowBox[{RowBox[
                 {RowBox[{RowBox[{"iSetCurrentValue", "[", RowBox[{"nb_", 
                        ",", " ", "k_", ",", " ", "value_"}], "]"}], "/;", 
                    RowBox[{"!", RowBox[{"TrueQ", "[", "$inCVHeld", 
                        "]"}]}]}], ":=", "\n", "  ", RowBox[{"With", "[", 
                    RowBox[{RowBox[{"{", RowBox[{"h", "=", 
                          "FrontEnd`$TrackingEnabled"}], "}"}], ",", "\n", 
                      "  ", "  \t", RowBox[{"MathLink`CallFrontEndHeld", "[", 
                        "\n", "  ", "      ", RowBox[{"FrontEnd`SetValue", 
                          "[", "\n", "  ", "\t\t\t\t\t", RowBox[{RowBox[
                          {"FEPrivate`Set", "[", "\n", "  ", "\t\t\t\t\t\t", 
                          RowBox[{RowBox[{"FrontEnd`CurrentValue", "[", 
                          RowBox[{"nb", ",", " ", "k"}], "]"}], ",", " ", 
                          "\n", "  ", "          ", "value"}], "\n", "  ", 
                          "\t\t\t\t\t\t", "]"}], ",", "\n", "  ", 
                          "\t\t\t\t\t", "h"}], "\n", "  ", "\t\t\t\t\t", 
                          "]"}], "\n", "  ", "      ", "]"}]}], "\n", "  ", 
                    "    ", "]"}]}], ";"}], "\n", RowBox[{RowBox[
                 {RowBox[{RowBox[{"iSetCurrentValue", "[", RowBox[{"nb_", 
                        ",", " ", "k_", ",", " ", "value_"}], "]"}], "/;", 
                    RowBox[{"TrueQ", "[", "$inCVHeld", "]"}]}], ":=", "\n", 
                  "  ", RowBox[{RowBox[{"$setCurrentValueStack", "[", 
                      RowBox[{"{", RowBox[{"nb", ",", " ", "k"}], "}"}], 
                      "]"}], " ", "=", " ", "value"}]}], ";"}]}], 
            "CodeInput"], Cell[BoxData[{RowBox[{RowBox[{RowBox[
                   {"SetCurrentValues", "[", "triples_", "]"}], ":=", "\n", 
                  "  ", RowBox[{"MathLink`CallFrontEnd", "@", RowBox[
                     {"FrontEnd`SetValue", "@", "\n", "    ", RowBox[
                       {"Map", "[", "\n", "      ", RowBox[{RowBox[
                          {RowBox[{"FEPrivate`Set", "[", "\n", "        ", 
                          RowBox[{RowBox[{"FrontEnd`CurrentValue", "[", 
                          RowBox[{RowBox[{"#", "[", RowBox[{"[", RowBox[{"1", 
                          ",", " ", "1"}], "]"}], "]"}], ",", " ", RowBox[
                          {"#", "[", RowBox[{"[", RowBox[{"1", ",", " ", 
                          "2"}], "]"}], "]"}]}], "]"}], ",", " ", "\n", 
                          "        ", RowBox[{"#", "[", RowBox[{"[", "2", 
                          "]"}], "]"}]}], "\n", "\t\t\t\t\t", "]"}], "&"}], 
                          ",", "\n", "\t\t\t  ", "triples"}], "\n", 
                        "\t\t\t  ", "]"}]}]}]}], ";"}], "\n", 
              RowBox[{RowBox[{"SetCurrentValuesDelayed", "[", "triples_", 
                  "]"}], ":=", "\n", "  ", RowBox[{"With", "[", "\n", "    ", 
                  RowBox[{RowBox[{"{", "\n", "      ", RowBox[{"r", "=", 
                        RowBox[{"FrontEnd`SetValue", "@", "\n", "  ", "  ", 
                          "    ", RowBox[{"Map", "[", "\n", "  ", "  ", 
                          "      ", RowBox[{RowBox[{RowBox[
                          {"FEPrivate`SetDelayed", "[", "\n", "  ", "  ", 
                          "        ", RowBox[{RowBox[{
                          "FrontEnd`CurrentValue", "[", RowBox[{RowBox[{"#", 
                          "[", RowBox[{"[", RowBox[{"1", ",", " ", "1"}], 
                          "]"}], "]"}], ",", " ", RowBox[{"#", "[", RowBox[
                          {"[", RowBox[{"1", ",", " ", "2"}], "]"}], "]"}]}], 
                          "]"}], ",", " ", "\n", "  ", "  ", "        ", 
                          RowBox[{"Extract", "[", RowBox[{RowBox[{"#", "[", 
                          RowBox[{"[", "2", "]"}], "]"}], ",", " ", "1", ",", 
                          " ", "Unevaluated"}], "]"}]}], "\n", "  ", "  ", 
                          "\t\t\t\t\t", "]"}], "&"}], ",", "\n", "  ", "  ", 
                          "\t\t\t  ", "triples"}], "\n", "  ", "  ", 
                          "\t\t\t  ", "]"}]}]}], "\n", "  ", "  \t\t", "}"}], 
                    ",", "\n", "\t\t", RowBox[{"MathLink`CallFrontEndHeld", 
                      "[", "r", "]"}]}], "\n", "\t\t", "]"}]}]}], 
            "CodeInput"]}, Closed]], Cell[CellGroupData[
          {Cell["\[LeftCeiling]SetCurrentValueDelayed\[RightFloor]", 
            "CodeSubsubsection", Evaluatable -> True], 
           Cell[BoxData[{RowBox[{"SetCurrentValueDelayed", "//", "Clear"}], 
              "\n", RowBox[{RowBox[{"SetCurrentValueDelayed", "[", 
                  RowBox[{"nb_", ",", " ", "k_", ",", " ", RowBox[{"Hold", 
                      "[", "value_", "]"}]}], "]"}], ":=", "\n", "\t", 
                RowBox[{"With", "[", RowBox[{RowBox[{"{", RowBox[{"h", "=", 
                        "FrontEnd`$TrackingEnabled"}], "}"}], ",", "\n", 
                    "  ", "\t", RowBox[{"MathLink`CallFrontEndHeld", "[", 
                      "\n", "  ", "    ", RowBox[{"FrontEnd`SetValue", "[", 
                        "\n", "        ", RowBox[{RowBox[
                          {"FEPrivate`SetDelayed", "[", "\n", "          ", 
                          RowBox[{RowBox[{"FrontEnd`CurrentValue", "[", 
                          RowBox[{"nb", ",", " ", "k"}], "]"}], ",", " ", 
                          "\n", "          ", "value"}], "\n", "  ", 
                          "        ", "]"}], ",", "\n", "  ", "      ", 
                          "h"}], "\n", "  ", "      ", "]"}], "\n", "      ", 
                      "]"}]}], "\n", "    ", "]"}]}]}], "CodeInput"]}, 
          Closed]], Cell[CellGroupData[
          {Cell["\[LeftCeiling]WithIDEData\[RightFloor]", 
            "CodeSubsubsection", Evaluatable -> True], 
           Cell[BoxData[{RowBox[{RowBox[{RowBox[{"WithIDEData", "[", 
                    RowBox[{"nb_", ",", " ", "expr_"}], "]"}], ":=", "\n", 
                  "  ", RowBox[{"Block", "[", "\n", "    ", RowBox[
                     {RowBox[{"{", "\n", "      ", RowBox[{"CurrentValue", 
                          ",", "\n", "      ", "FrontEnd`Options"}], "\n", 
                        "      ", "}"}], ",", "\n", "    ", RowBox[
                       {RowBox[{RowBox[{"CurrentValue", "[", RowBox[{"a_", 
                          ",", " ", "b_", ",", " ", "c___"}], "]"}], ":=", 
                          "\n", "      ", RowBox[{"Block", "[", RowBox[
                          {RowBox[{"{", RowBox[{RowBox[{"CurrentValue", "=", 
                          "iCurrentValue"}], ",", " ", RowBox[{"k", "=", 
                          RowBox[{"Flatten", "@", RowBox[{"{", RowBox[
                          {"\"Options\"", ",", " ", "b"}], "}"}]}]}]}], 
                          "}"}], ",", "\n", "        ", RowBox[{"IDEData", 
                          "[", RowBox[{"a", ",", " ", "k", ",", " ", "c"}], 
                          "]"}]}], "\n", "        ", "]"}]}], ";", "\n", 
                        "    ", RowBox[{"CurrentValue", "/:", "\n", "      ", 
                          RowBox[{"(", RowBox[{RowBox[{"CurrentValue", "[", 
                          RowBox[{"a_", ",", " ", "b_", ",", " ", "c___"}], 
                          "]"}], " ", "=", " ", "v_"}], ")"}], ":=", "\n", 
                          "        ", RowBox[{"Block", "[", RowBox[{RowBox[
                          {"{", RowBox[{"CurrentValue", "=", 
                          "iCurrentValue"}], "}"}], ",", "\n", "          ", 
                          RowBox[{"With", "[", RowBox[{RowBox[{"{", RowBox[
                          {"k", "=", RowBox[{"Flatten", "@", RowBox[{"{", 
                          RowBox[{"\"Options\"", ",", " ", "b"}], "}"}]}]}], 
                          "}"}], ",", "\n", "            ", RowBox[{RowBox[
                          {"IDEData", "[", RowBox[{"a", ",", " ", "k"}], 
                          "]"}], " ", "=", " ", "v"}]}], "\n", "  ", 
                          "          ", "]"}]}], "\n", "          ", "]"}]}], 
                        ";", "\n", "    ", RowBox[{"CurrentValue", "/:", 
                          "\n", "      ", RowBox[{"(", RowBox[{RowBox[
                          {"CurrentValue", "[", RowBox[{"a_", ",", " ", "b_", 
                          ",", " ", "c___"}], "]"}], " ", ":=", " ", "v_"}], 
                          ")"}], ":=", "\n", "        ", RowBox[{"Block", 
                          "[", RowBox[{RowBox[{"{", RowBox[{"CurrentValue", 
                          "=", "iCurrentValue"}], "}"}], ",", "\n", 
                          "          ", RowBox[{"With", "[", RowBox[{RowBox[
                          {"{", RowBox[{"k", "=", RowBox[{"Flatten", "@", 
                          RowBox[{"{", RowBox[{"\"Options\"", ",", " ", 
                          "b"}], "}"}]}]}], "}"}], ",", "\n", "            ", 
                          RowBox[{RowBox[{"IDEData", "[", RowBox[{"a", ",", 
                          " ", "k"}], "]"}], " ", ":=", " ", "v"}]}], "\n", 
                          "            ", "]"}]}], "\n", "          ", 
                          "]"}]}], ";", "\n", "    ", RowBox[{RowBox[
                          {"FrontEnd`Options", "[", "n_", "]"}], ":=", "\n", 
                          "    \t", RowBox[{"Block", "[", "\n", "    \t\t", 
                          RowBox[{RowBox[{"{", "\n", "    \t\t\t", RowBox[
                          {"iCurrentValue", "=", "\n", "    \t\t\t\t", RowBox[
                          {RowBox[{"FrontEnd`Value", "[", "\n", 
                          "    \t\t\t\t  ", RowBox[{RowBox[{
                          "FrontEnd`CurrentValue", "[", "##", "]"}], ",", 
                          " ", "\n", "    \t\t\t\t  ", 
                          "FrontEnd`$TrackingEnabled"}], "\n", 
                          "    \t\t\t\t  ", "]"}], "&"}]}], "\n", 
                          "    \t\t\t", "}"}], ",", "\n", "    \t  ", RowBox[
                          {"IDEData", "[", RowBox[{"n", ",", " ", 
                          "\"Options\""}], "]"}]}], "\n", "    \t  ", 
                          "]"}]}], ";", "\n", "    ", RowBox[
                         {"Internal`InheritedBlock", "[", RowBox[{RowBox[
                          {"{", "NotebookGet", "}"}], ",", "\n", "    \t", 
                          RowBox[{RowBox[{"Unprotect", "[", "NotebookGet", 
                          "]"}], ";", "\n", "    \t", RowBox[{RowBox[
                          {"NotebookGet", "[", "nb", "]"}], ":=", "\n", 
                          "    \t  ", RowBox[{"Block", "[", "\n", 
                          "    \t  \t", RowBox[{RowBox[{"{", "\n", 
                          "    \t  \t\t", RowBox[{RowBox[{"NotebookGet", "=", 
                          RowBox[{RowBox[{"MathLink`CallFrontEnd", "[", 
                          RowBox[{"FrontEnd`NotebookGet", "[", "nb", "]"}], 
                          "]"}], "&"}]}], ",", "\n", "    \t  \t\t", RowBox[
                          {"CurrentValue", "=", "iCurrentValue"}]}], "\n", 
                          "    \t  \t\t", "}"}], ",", "\n", "    \t\t\t", 
                          RowBox[{"GetNotebookExpression", "[", "nb", 
                          "]"}]}], "\n", "    \t\t\t", "]"}]}], ";", "\n", 
                          " \t   ", "expr"}]}], "\n", " \t   ", "]"}]}]}], 
                    "\n", "    ", "]"}]}], ";"}], "\n", RowBox[{
                RowBox[{"WithIDEData", "~", "SetAttributes", "~", 
                  "HoldRest"}], ";"}]}], "CodeInput"]}, Closed]]}, Open]], 
     Cell[CellGroupData[{Cell["\[LeftCeiling]IDE Refs\[RightFloor]", 
         "CodeSubsection", Evaluatable -> True], 
        Cell[BoxData[{RowBox[{RowBox[{"$CurrentIDENotebook", " ", ":=", " ", 
               RowBox[{"EvaluationNotebook", "[", "]"}]}], ";"}], "\n", 
           RowBox[{RowBox[{"$CurrentIDE", " ", ":=", " ", RowBox[
                {"IDENotebookObject", "[", "$CurrentIDENotebook", "]"}]}], 
             ";"}]}], "CodeInput"]}, Open]], 
     Cell[CellGroupData[{Cell["\[LeftCeiling]Pausing\[RightFloor]", 
         "CodeSubsection", Evaluatable -> True], 
        Cell[CellGroupData[
          {Cell["\[LeftCeiling]WithoutDynamics\[RightFloor]", 
            "CodeSubsubsection", Evaluatable -> True], 
           Cell[BoxData[{RowBox[{RowBox[{"WithoutDynamics", "//", "Clear"}], 
                ";"}], "\n", RowBox[{RowBox[{RowBox[{"WithoutDynamics", "[", 
                    RowBox[{"nb_NotebookObject", ",", " ", "expr_"}], "]"}], 
                  ":=", "\n", "\t", RowBox[{"Block", "[", "\n", "  \t", 
                    RowBox[{RowBox[{"{", "\n", "  \t  ", RowBox[
                         {"dynamicsOff", " ", "=", " ", RowBox[{"If", "[", 
                          RowBox[{RowBox[{"TrueQ", "@", "dynamicsOff"}], ",", 
                          " ", "True", ",", " ", "False"}], "]"}]}], "\n", 
                        "  ", "\t  ", "}"}], ",", "\n", "  ", "\t\t", 
                      RowBox[{"If", "[", RowBox[{"dynamicsOff", ",", "\n", 
                          "  ", "\t\t\t", "expr", ",", "\n", "  ", "\t\t\t", 
                          RowBox[{"Internal`WithLocalSettings", "[", "\n", 
                          "  ", "\t\t\t\t", RowBox[{RowBox[{"SetOptions", 
                          "[", RowBox[{"nb", ",", " ", RowBox[
                          {"DynamicUpdating", "\[Rule]", "False"}]}], "]"}], 
                          ",", "\n", "  ", "\t\t\t\t", RowBox[{RowBox[
                          {"dynamicsOff", " ", "=", " ", "True"}], ";", "\n", 
                          "  ", "\t\t\t\t", "expr"}], ",", "\n", 
                          "  \t\t\t\t", RowBox[{"SetOptions", "[", RowBox[
                          {"nb", ",", " ", RowBox[{"DynamicUpdating", 
                          "\[Rule]", "Automatic"}]}], "]"}]}], "\n", 
                          "  \t\t\t\t", "]"}]}], "\n", "  \t\t\t", "]"}]}], 
                    "\n", "  \t\t", "]"}]}], ";"}], "\n", 
              RowBox[{RowBox[{RowBox[{"WithoutDynamics", "[", RowBox[
                     {RowBox[{"e", ":", RowBox[{"Except", "[", 
                          "_NotebookObject", "]"}]}], ",", " ", "expr_"}], 
                    "]"}], ":=", "\n", "  ", RowBox[{"With", "[", "\n", 
                    "    ", RowBox[{RowBox[{"{", "\n", "      ", RowBox[
                         {"nb", "=", "\n", "        ", RowBox[{"Replace", 
                          "[", RowBox[{"e", ",", " ", "\n", "          ", 
                          RowBox[{RowBox[{"n", ":", RowBox[
                          {"_FrontEnd`InputNotebook", "|", 
                          "_FrontEnd`EvaluationNotebook"}]}], 
                          "\[RuleDelayed]", RowBox[{"FE`Evaluate", "[", "n", 
                          "]"}]}]}], "\n", "          ", "]"}]}], "\n", 
                        "      ", "}"}], ",", "\n", "    ", RowBox[
                       {RowBox[{"WithoutDynamics", "[", RowBox[{"nb", ",", 
                          " ", "expr"}], "]"}], "/;", RowBox[{"MatchQ", "[", 
                          RowBox[{"nb", ",", " ", "NotebookObject"}], 
                          "]"}]}]}], "\n", "    ", "]"}]}], ";"}], "\n", 
              RowBox[{RowBox[{RowBox[{"WithoutDynamics", "[", "expr_", "]"}], 
                  ":=", "\n", "  ", RowBox[{"WithoutDynamics", "[", 
                    RowBox[{"$CurrentIDENotebook", ",", " ", "expr"}], 
                    "]"}]}], ";"}], "\n", RowBox[{RowBox[{"WithoutDynamics", 
                  "~", "SetAttributes", "~", "HoldAll"}], ";"}]}], 
            "CodeInput"]}, Closed]], Cell[CellGroupData[
          {Cell["\[LeftCeiling]WithoutScreenUpdates\[RightFloor]", 
            "CodeSubsubsection", Evaluatable -> True], 
           Cell[BoxData[{RowBox[{RowBox[{RowBox[{"pauseScreen", "[", "nb_", 
                    "]"}], ":=", "\n", "\t", RowBox[{"MathLink`CallFrontEnd", 
                    "@", "\n", "\t\t", RowBox[
                     {"FrontEnd`NotebookSuspendScreenUpdates", "[", "nb", 
                      "]"}]}]}], ";"}], "\n", RowBox[{RowBox[
                 {RowBox[{"resumeScreen", "[", "nb_", "]"}], ":=", "\n", 
                  "\t", RowBox[{"MathLink`CallFrontEnd", "@", "\n", "\t\t", 
                    RowBox[{"FrontEnd`NotebookResumeScreenUpdates", "[", 
                      "nb", "]"}]}]}], ";"}]}], "CodeInput"], 
           Cell[BoxData[{RowBox[{RowBox[{"WithoutScreenUpdates", "//", 
                  "Clear"}], ";"}], "\n", RowBox[{RowBox[
                 {RowBox[{"WithoutScreenUpdates", "[", RowBox[
                     {"nb_NotebookObject", ",", " ", "expr_"}], "]"}], ":=", 
                  "\n", "\t", RowBox[{"Block", "[", "\n", "  \t", RowBox[
                     {RowBox[{"{", "\n", "  \t  ", RowBox[{"noScreen", " ", 
                          "=", " ", RowBox[{"If", "[", RowBox[{RowBox[
                          {"TrueQ", "@", "noScreen"}], ",", " ", "True", ",", 
                          " ", "False"}], "]"}]}], "\n", "  ", "\t  ", "}"}], 
                      ",", "\n", "  \t\t", RowBox[{"If", "[", RowBox[
                         {"noScreen", ",", "\n", "  \t\t\t", "expr", ",", 
                          "\n", "  \t\t\t", RowBox[
                          {"Internal`WithLocalSettings", "[", "\n", 
                          "  \t\t\t\t", RowBox[{RowBox[{"pauseScreen", "[", 
                          "nb", "]"}], ",", "\n", "  \t\t\t\t", RowBox[
                          {RowBox[{"noScreen", " ", "=", " ", "True"}], ";", 
                          "\n", "  \t\t\t\t", RowBox[{"Block", "[", RowBox[
                          {RowBox[{"{", RowBox[{"pauseScreen", ",", " ", 
                          "resumeScreen"}], "}"}], ",", " ", "expr"}], 
                          "]"}]}], ",", "\n", "  \t\t\t\t", RowBox[
                          {"resumeScreen", "[", "nb", "]"}]}], "\n", 
                          "  \t\t\t\t", "]"}]}], "\n", "  \t\t\t", "]"}]}], 
                    "\n", "  \t\t", "]"}]}], ";"}], "\n", 
              RowBox[{RowBox[{RowBox[{"WithoutScreenUpdates", "[", 
                    RowBox[{RowBox[{"e", ":", RowBox[{"Except", "[", 
                          "_NotebookObject", "]"}]}], ",", " ", "expr_"}], 
                    "]"}], ":=", "\n", "  ", RowBox[{"With", "[", "\n", 
                    "    ", RowBox[{RowBox[{"{", "\n", "      ", RowBox[
                         {"nb", "=", "\n", "        ", RowBox[{"Replace", 
                          "[", RowBox[{"e", ",", " ", "\n", "          ", 
                          RowBox[{RowBox[{"n", ":", RowBox[
                          {"_FrontEnd`InputNotebook", "|", 
                          "_FrontEnd`EvaluationNotebook"}]}], 
                          "\[RuleDelayed]", RowBox[{"FE`Evaluate", "[", "n", 
                          "]"}]}]}], "\n", "          ", "]"}]}], "\n", 
                        "      ", "}"}], ",", "\n", "    ", RowBox[
                       {RowBox[{"WithoutScreenUpdates", "[", RowBox[{"nb", 
                          ",", " ", "expr"}], "]"}], "/;", RowBox[{"MatchQ", 
                          "[", RowBox[{"nb", ",", " ", "NotebookObject"}], 
                          "]"}]}]}], "\n", "    ", "]"}]}], ";"}], "\n", 
              RowBox[{RowBox[{RowBox[{"WithoutScreenUpdates", "[", "expr_", 
                    "]"}], ":=", "\n", "  ", RowBox[{"WithoutScreenUpdates", 
                    "[", RowBox[{"$CurrentIDENotebook", ",", " ", "expr"}], 
                    "]"}]}], ";"}], "\n", RowBox[{RowBox[
                 {"WithoutScreenUpdates", "~", "SetAttributes", "~", 
                  "HoldAll"}], ";"}]}], "CodeInput"]}, Open]], 
        Cell[CellGroupData[
          {Cell["\[LeftCeiling]WithoutScreenUpdatesOrDynamics\[RightFloor]", 
            "CodeSubsubsection", Evaluatable -> True], 
           Cell[BoxData[{RowBox[{RowBox[{"WithoutScreenUpdatesOrDynamics", 
                  "//", "Clear"}], ";"}], "\n", RowBox[{RowBox[
                 {RowBox[{"WithoutScreenUpdatesOrDynamics", "[", RowBox[
                     {"nb_NotebookObject", ",", " ", "expr_"}], "]"}], ":=", 
                  "\n", "\t", RowBox[{"Block", "[", "\n", "  \t", RowBox[
                     {RowBox[{"{", "\n", "  \t  ", RowBox[{RowBox[
                          {"noScreen", " ", "=", " ", RowBox[{"If", "[", 
                          RowBox[{RowBox[{"TrueQ", "@", "noScreen"}], ",", 
                          " ", "True", ",", " ", "False"}], "]"}]}], ",", 
                          "\n", "  \t  ", RowBox[{"dynamicsOff", " ", "=", 
                          " ", RowBox[{"If", "[", RowBox[{RowBox[{"TrueQ", 
                          "@", "dynamicsOff"}], ",", " ", "True", ",", " ", 
                          "False"}], "]"}]}]}], "\n", "  \t  ", "}"}], ",", 
                      "\n", "  \t\t", RowBox[{"Which", "[", "\n", "  \t\t\t", 
                        RowBox[{RowBox[{"noScreen", " ", "&&", " ", 
                          "dynamicsOff"}], ",", "\n", "\t  \t\t\t", "expr", 
                          ",", "\n", "\t\t\t\t", "noScreen", ",", "\n", 
                          "\t\t\t\t\t", RowBox[{"WithoutDynamics", "[", 
                          RowBox[{"nb", ",", " ", "expr"}], "]"}], ",", "\n", 
                          "\t\t\t\t", "dynamicsOff", ",", "\n", "\t\t\t\t\t", 
                          RowBox[{"WithoutScreenUpdates", "[", RowBox[{"nb", 
                          ",", " ", "expr"}], "]"}], ",", "\n", "\t\t\t\t", 
                          "True", ",", "\n", "  \t\t\t\t", RowBox[
                          {"Internal`WithLocalSettings", "[", "\n", 
                          "\t  \t\t\t\t", RowBox[{RowBox[{"FrontEndExecute", 
                          "@", RowBox[{"{", "\n", "\t  \t\t\t\t  ", RowBox[
                          {RowBox[{"FrontEnd`NotebookSuspendScreenUpdates", 
                          "[", "nb", "]"}], ",", "\n", "\t  \t\t\t\t  ", 
                          RowBox[{"FrontEnd`SetOptions", "[", RowBox[{"nb", 
                          ",", " ", RowBox[{"DynamicUpdating", "\[Rule]", 
                          "False"}]}], "]"}]}], "\n", "\t  \t\t\t\t  ", 
                          "}"}]}], ",", "\n", "\t  \t\t\t\t", RowBox[
                          {RowBox[{"noScreen", " ", "=", " ", "True"}], ";", 
                          "\n", "\t  \t\t\t\t", RowBox[{"dynamicsOff", " ", 
                          "=", " ", "False"}], ";", "\n", "\t  \t\t\t\t", 
                          "expr"}], ",", "\n", "\t  \t\t\t\t", RowBox[
                          {"FrontEndExecute", "@", RowBox[{"{", "\n", 
                          "\t  \t\t\t\t  ", RowBox[{RowBox[{
                          "FrontEnd`NotebookResumeScreenUpdates", "[", "nb", 
                          "]"}], ",", "\n", "\t  \t\t\t\t  ", RowBox[
                          {"FrontEnd`SetOptions", "[", RowBox[{"nb", ",", 
                          " ", RowBox[{"DynamicUpdating", "\[Rule]", 
                          "Inherited"}]}], "]"}]}], "\n", "\t  \t\t\t\t  ", 
                          "}"}]}]}], "\n", "\t  \t\t\t\t", "]"}]}], "\n", 
                        "\t  \t\t\t", "]"}]}], "\n", "  \t\t", "]"}]}], 
                ";"}], "\n", RowBox[{RowBox[{RowBox[
                   {"WithoutScreenUpdatesOrDynamics", "[", RowBox[
                     {RowBox[{"e", ":", RowBox[{"Except", "[", 
                          "_NotebookObject", "]"}]}], ",", " ", "expr_"}], 
                    "]"}], ":=", "\n", "  ", RowBox[{"With", "[", "\n", 
                    "    ", RowBox[{RowBox[{"{", "\n", "      ", RowBox[
                         {"nb", "=", "\n", "        ", RowBox[{"Replace", 
                          "[", RowBox[{"e", ",", " ", "\n", "          ", 
                          RowBox[{RowBox[{"n", ":", RowBox[
                          {"_FrontEnd`InputNotebook", "|", 
                          "_FrontEnd`EvaluationNotebook"}]}], 
                          "\[RuleDelayed]", RowBox[{"FE`Evaluate", "[", "n", 
                          "]"}]}]}], "\n", "          ", "]"}]}], "\n", 
                        "      ", "}"}], ",", "\n", "    ", RowBox[
                       {RowBox[{"WithoutScreenUpdatesOrDynamics", "[", 
                          RowBox[{"nb", ",", " ", "expr"}], "]"}], "/;", 
                        RowBox[{"MatchQ", "[", RowBox[{"nb", ",", " ", 
                          "NotebookObject"}], "]"}]}]}], "\n", "    ", 
                    "]"}]}], ";"}], "\n", RowBox[{RowBox[
                 {RowBox[{"WithoutScreenUpdatesOrDynamics", "[", "expr_", 
                    "]"}], ":=", "\n", "  ", RowBox[
                   {"WithoutScreenUpdatesOrDynamics", "[", RowBox[
                     {"$CurrentIDENotebook", ",", " ", "expr"}], "]"}]}], 
                ";"}], "\n", RowBox[{RowBox[
                 {"WithoutScreenUpdatesOrDynamics", "~", "SetAttributes", 
                  "~", "HoldAll"}], ";"}]}], "CodeInput"]}, Open]], 
        Cell[CellGroupData[
          {Cell["\[LeftCeiling]WithFrontEndTracking\[RightFloor]", 
            "CodeSubsubsection", Evaluatable -> True], 
           Cell[BoxData[{RowBox[{RowBox[{RowBox[{"WithFrontEndTracking", "[", 
                    "expr_", "]"}], ":=", "\n", "\t", RowBox[{"Block", "[", 
                    "\n", "\t  ", RowBox[{RowBox[{"{", "\n", "  \t  ", 
                        RowBox[{"FrontEnd`$TrackingEnabled", " ", "=", " ", 
                          "True"}], RowBox[{"(*", RowBox[{",", "\n", 
                          "  \t  ", RowBox[{"$inCVHeld", " ", "=", " ", 
                          "False"}], ",", "\n", "  \t  ", RowBox[
                          {"$setCurrentValueStack", " ", "=", " ", "\n", 
                          "  \t    ", RowBox[{"If", "[", RowBox[{RowBox[
                          {"!", RowBox[{"AssociationQ", "[", 
                          "$setCurrentValueStack", "]"}]}], ",", " ", RowBox[
                          {"<|", "|>"}], ",", " ", "$setCurrentValueStack"}], 
                          "]"}]}]}], "*)"}], "\n", "  \t  ", "}"}], ",", 
                      "\n", "   ", RowBox[{"(*", RowBox[{RowBox[
                          {"SetCurrentValues", "[", RowBox[{"KeyValueMap", 
                          "[", RowBox[{"List", ",", " ", 
                          "$setCurrentValueStack"}], "]"}], "]"}], ";", "\n", 
                          "   ", RowBox[{"$setCurrentValueStack", " ", "=", 
                          " ", RowBox[{"<|", "|>"}]}], ";"}], "*)"}], "\n", 
                      "\t\t", "expr"}], "\n", "\t\t", "]"}]}], ";"}], "\n", 
              RowBox[{"WithFrontEndTracking", "~", "SetAttributes", "~", 
                "HoldRest"}]}], "CodeInput"]}, Closed]], 
        Cell[CellGroupData[
          {Cell["\[LeftCeiling]WithoutFrontEndTracking\[RightFloor]", 
            "CodeSubsubsection", Evaluatable -> True], 
           Cell[BoxData[{RowBox[{"WithoutFrontEndTracking", "//", "Clear"}], 
              "\n", RowBox[{RowBox[{RowBox[{"WithoutFrontEndTracking", "[", 
                    "expr_", "]"}], ":=", "\n", "\t", RowBox[{"Block", "[", 
                    "\n", "\t  ", RowBox[{RowBox[{"{", "\n", "  \t  ", 
                        RowBox[{"FrontEnd`$TrackingEnabled", " ", "=", " ", 
                          "False"}], RowBox[{"(*", RowBox[{",", "\n", 
                          "  \t  ", RowBox[{"$headCall", " ", "=", " ", 
                          RowBox[{"If", "[", RowBox[{RowBox[{"TrueQ", "[", 
                          "$headCall", "]"}], ",", " ", "False", ",", " ", 
                          "True"}], "]"}]}], ",", "\n", "  \t  ", RowBox[
                          {"$inCVHeld", " ", "=", " ", "True"}], ",", "\n", 
                          "  \t  ", RowBox[{"$setCurrentValueStack", " ", 
                          "=", " ", "\n", "  \t    ", RowBox[{"If", "[", 
                          RowBox[{RowBox[{"!", RowBox[{"AssociationQ", "[", 
                          "$setCurrentValueStack", "]"}]}], ",", " ", RowBox[
                          {"<|", "|>"}], ",", " ", "$setCurrentValueStack"}], 
                          "]"}]}]}], "*)"}], "\n", "  \t  ", "}"}], ",", 
                      "\n", "  \t", "expr"}], "\n", "  \t", RowBox[{"(*", 
                      RowBox[{"Internal`WithLocalSettings", "[", "\n", 
                        "  \t  ", RowBox[{"(*", " ", RowBox[{RowBox[{"don", 
                          "'"}], "t", " ", "need", " ", "to", " ", "process", 
                          " ", "$setCurrentValueStack", " ", "before", " ", 
                          "hand"}], " ", "*)"}], "\n", "  \t  ", RowBox[
                         {"None", ",", "\n", "\t\t  ", "expr", ",", "\n", 
                          "\t\t  ", RowBox[{"If", "[", RowBox[{"$headCall", 
                          ",", " ", RowBox[{"(*", " ", RowBox[{"if", " ", 
                          RowBox[{"we", "'"}], "ve", " ", "bottomed", " ", 
                          "out", " ", "we", " ", "call", " ", "into", " ", 
                          "the", " ", "FE"}], " ", "*)"}], "\n", "\t\t    ", 
                          RowBox[{"SetCurrentValues", "[", RowBox[
                          {"KeyValueMap", "[", RowBox[{"List", ",", " ", 
                          "$setCurrentValueStack"}], "]"}], "]"}]}], "\n", 
                          "\t\t    ", "]"}]}], "\n", "\t\t  ", "]"}], "*)"}], 
                    "\n", "\t\t", "]"}]}], ";"}], "\n", RowBox[{
                "WithoutFrontEndTracking", "~", "SetAttributes", "~", 
                "HoldRest"}]}], "CodeInput"]}, Closed]], 
        Cell[CellGroupData[
          {Cell["\[LeftCeiling]WithCurrentValueUpdating\[RightFloor]", 
            "CodeSubsubsection", Evaluatable -> True], 
           Cell[BoxData[RowBox[{RowBox[{"WithCurrentValueUpdating", " ", "=", 
                 " ", "WithFrontEndTracking"}], ";"}]], "CodeInput"]}, 
          Closed]], Cell[CellGroupData[
          {Cell["\[LeftCeiling]WithoutCurrentValueUpdating\[RightFloor]", 
            "CodeSubsubsection", Evaluatable -> True], 
           Cell[BoxData[RowBox[{RowBox[{"WithoutCurrentValueUpdating", " ", 
                 "=", " ", "WithoutFrontEndTracking"}], ";"}]], 
            "CodeInput"]}, Closed]], Cell[CellGroupData[
          {Cell["\[LeftCeiling]WithNotebookPaused\[RightFloor]", 
            "CodeSubsubsection", Evaluatable -> True], Cell["\[LeftCeiling]\n\
\tHelper function to suspend the screen while updating the nb\n\[RightFloor]"\
, "Text", Evaluatable -> True], Cell[BoxData[{RowBox[{RowBox[
                 {"WithNotebookPaused", "//", "Clear"}], ";"}], "\n", 
              RowBox[{RowBox[{RowBox[{"WithNotebookPaused", "[", RowBox[
                     {"nb_NotebookObject", ",", " ", "expr_"}], "]"}], ":=", 
                  "\n", "\t", RowBox[{"WithoutFrontEndTracking", "@", "\n", 
                    "\t  ", RowBox[{"WithoutScreenUpdatesOrDynamics", "[", 
                      RowBox[{"nb", ",", " ", "expr"}], "]"}]}]}], ";"}], 
              "\n", RowBox[{RowBox[{RowBox[{"WithNotebookPaused", "[", 
                    RowBox[{RowBox[{"e", ":", RowBox[{"Except", "[", 
                          "_NotebookObject", "]"}]}], ",", " ", "expr_"}], 
                    "]"}], ":=", "\n", "  ", RowBox[{"With", "[", "\n", 
                    "    ", RowBox[{RowBox[{"{", "\n", "      ", RowBox[
                         {"nb", "=", "\n", "        ", RowBox[{"Replace", 
                          "[", RowBox[{"e", ",", " ", "\n", "          ", 
                          RowBox[{"{", "\n", "          \t", RowBox[{RowBox[
                          {"n", ":", RowBox[{"_FrontEnd`InputNotebook", "|", 
                          "_FrontEnd`EvaluationNotebook"}]}], 
                          "\[RuleDelayed]", RowBox[{"FE`Evaluate", "[", "n", 
                          "]"}]}], "\n", "          \t", "}"}]}], "\n", 
                          "          ", "]"}]}], "\n", "      ", "}"}], ",", 
                      "\n", "    ", RowBox[{RowBox[{"WithNotebookPaused", 
                          "[", RowBox[{"nb", ",", " ", "expr"}], "]"}], "/;", 
                        RowBox[{"MatchQ", "[", RowBox[{"nb", ",", " ", 
                          "NotebookObject"}], "]"}]}]}], "\n", "    ", 
                    "]"}]}], ";"}], "\n", RowBox[{RowBox[
                 {RowBox[{"WithNotebookPaused", "[", "expr_", "]"}], ":=", 
                  "\n", "  ", RowBox[{"WithNotebookPaused", "[", RowBox[
                     {"$CurrentIDENotebook", ",", " ", "expr"}], "]"}]}], 
                ";"}], "\n", RowBox[{RowBox[{"WithNotebookPaused", "~", 
                  "SetAttributes", "~", "HoldAll"}], ";"}]}], "CodeInput"]}, 
          Open]]}, Open]], Cell[CellGroupData[
       {Cell["\[LeftCeiling]Preemptive\[RightFloor]", "CodeSubsection", 
         Evaluatable -> True], Cell[CellGroupData[
          {Cell["\[LeftCeiling]PreemptiveQueued\[RightFloor]", 
            "CodeSubsubsection", Evaluatable -> True], 
           Cell[BoxData[{RowBox[{RowBox[{RowBox[{"PreemptiveQueued", "[", 
                    RowBox[{"nb_", ",", " ", "expr_"}], "]"}], ":=", "\n", 
                  "  ", RowBox[{"With", "[", RowBox[{RowBox[{"{", RowBox[
                         {"nnbb", "=", "nb"}], "}"}], ",", "\n", "  ", "\t", 
                      RowBox[{"MessageDialog", "[", "\n", "  ", "\t\t", 
                        RowBox[{RowBox[{"DynamicModule", "[", "\n", "  ", 
                          "\t\t\t", RowBox[{RowBox[{"{", "}"}], ",", "\n", 
                          "  ", "\t\t\t", "Null", ",", "\n", "  ", "\t\t\t", 
                          RowBox[{"Initialization", "\[RuleDelayed]", RowBox[
                          {"{", "\n", "  ", "\t\t\t\t", RowBox[
                          {"Internal`WithLocalSettings", "[", "\n", "  ", 
                          "\t\t\t\t\t", RowBox[{"Null", ",", "\n", "  ", 
                          "\t\t\t\t\t", RowBox[{"Block", "[", "\n", "  ", 
                          "\t\t\t\t\t\t", RowBox[{RowBox[{"{", "\n", "  ", 
                          "\t\t\t\t\t\t\t", RowBox[{"$CurrentIDENotebook", 
                          "=", "nnbb"}], "\n", "  ", "\t\t\t\t\t\t\t", "}"}], 
                          ",", "\n", "  ", "\t\t\t\t\t\t", "expr"}], "\n", 
                          "  ", "\t\t\t\t\t\t", "]"}], ",", "\n", "  ", 
                          "\t\t\t\t\t", RowBox[{"NotebookClose", "[", RowBox[
                          {"EvaluationNotebook", "[", "]"}], "]"}]}], "\n", 
                          "  ", "\t\t\t\t\t", "]"}], "\n", "  ", "\t\t\t\t", 
                          "}"}]}], ",", "\n", "  ", "\t\t\t", RowBox[
                          {"SynchronousInitialization", " ", "->", " ", 
                          "False"}]}], "\n", "  ", "\t\t\t", "]"}], ",", 
                          "\n", "  ", "\t\t", RowBox[{"Visible", "\[Rule]", 
                          "False"}], ",", "\n", "  ", "\t\t", RowBox[
                          {"Evaluator", "\[Rule]", RowBox[{"CurrentValue", 
                          "[", RowBox[{"nb", ",", " ", "Evaluator"}], 
                          "]"}]}]}], "\n", "  \t\t", "]"}]}], "\n", "    ", 
                    "]"}]}], ";"}], "\n", RowBox[{RowBox[
                 {RowBox[{"PreemptiveQueued", "[", "expr_", "]"}], ":=", 
                  "\n", "  ", RowBox[{"With", "[", RowBox[{RowBox[{"{", 
                        RowBox[{"nb", "=", "$CurrentIDENotebook"}], "}"}], 
                      ",", "\n", "  ", "  ", RowBox[{"PreemptiveQueued", "[", 
                        RowBox[{"nb", ",", " ", "expr"}], "]"}]}], "\n", 
                    "    ", "]"}]}], ";"}], "\n", RowBox[{"PreemptiveQueued", 
                "~", "SetAttributes", "~", "HoldAll"}]}], "CodeInput"]}, 
          Closed]]}, Open]], Cell[CellGroupData[
       {Cell["\[LeftCeiling]Paths\[RightFloor]", "CodeSubsection", 
         Evaluatable -> True], Cell[CellGroupData[
          {Cell["\[LeftCeiling]WithActiveNotebookPath\[RightFloor]", 
            "CodeSubsubsection", Evaluatable -> True], 
           Cell[BoxData[{RowBox[{RowBox[{RowBox[{"WithActiveNotebookPath", 
                    "[", RowBox[{"nb_", ",", " ", "expr_"}], "]"}], ":=", 
                  "\n", "  ", RowBox[{"With", "[", RowBox[{RowBox[{"{", 
                        RowBox[{"p", "=", RowBox[{"IDEPath", "[", RowBox[
                          {"nb", ",", " ", RowBox[{"Key", "[", 
                          "\"ActiveFile\"", "]"}]}], "]"}]}], "}"}], ",", 
                      "\n", "    ", RowBox[{"If", "[", RowBox[{RowBox[
                          {"StringQ", "[", "p", "]"}], ",", "\n", "      ", 
                          RowBox[{"Internal`InheritedBlock", "[", "\n", 
                          "        ", RowBox[{RowBox[{"{", "\n", 
                          "          ", RowBox[{"NotebookFileName", ",", 
                          "\n", "  ", "  ", "      ", "NotebookDirectory"}], 
                          "\n", "          ", "}"}], ",", "\n", "        ", 
                          RowBox[{RowBox[{"Unprotect", "[", 
                          "NotebookFileName", "]"}], ";", "\n", "        ", 
                          RowBox[{"Unprotect", "[", "NotebookDirectory", 
                          "]"}], ";", "\n", "        ", RowBox[{RowBox[
                          {"NotebookFileName", "[", "nb", "]"}], "=", "p"}], 
                          ";", "\n", "        ", RowBox[{RowBox[
                          {"NotebookDirectory", "[", "nb", "]"}], "=", RowBox[
                          {"DirectoryName", "[", "p", "]"}]}], ";", "\n", 
                          "        ", RowBox[{"DownValues", "[", 
                          "NotebookFileName", "]"}], ";", "\n", "        ", 
                          "expr"}]}], "\n", "        ", "]"}], ",", "\n", 
                          "      ", "expr"}], "\n", "      ", "]"}]}], "\n", 
                    "    ", "]"}]}], ";"}], "\n", RowBox[{RowBox[
                 {RowBox[{"WithActiveNotebookPath", "[", "expr_", "]"}], 
                  ":=", "\n", "  ", RowBox[{"With", "[", RowBox[
                     {RowBox[{"{", RowBox[{"nb", "=", 
                          "$CurrentIDENotebook"}], "}"}], ",", "\n", "    ", 
                      RowBox[{"WithActiveNotebookPath", "[", RowBox[{"nb", 
                          ",", " ", "expr"}], "]"}]}], "\n", "    ", "]"}]}], 
                ";"}], "\n", RowBox[{"WithActiveNotebookPath", "~", 
                "SetAttributes", "~", "HoldAll"}]}], "CodeInput"]}, 
          Closed]]}, Open]], Cell[BoxData[RowBox[{RowBox[{"End", "[", "]"}], 
         ";"}]], "InputSection"]}, Open]], Cell["", "SectionSeparator"], 
  Cell[BoxData[TemplateBox[{"Name", "shdw", "\"Symbol \
\\!\\(\\*RowBox[{\\\"\\\\\\\"Name\\\\\\\"\\\"}]\\) appears in multiple \
contexts \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"PacletManager`Private`\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Global`\\\\\\\"\\\"}], \\\"}\\\"}]\\); definitions in context \
\\!\\(\\*RowBox[{\\\"\\\\\\\"PacletManager`Private`\\\\\\\"\\\"}]\\) may \
shadow or be shadowed by other definitions.\"", 2, 124, 5, 
      28142374816192855047, "Local", "PacletManager`Private`Name"}, 
     "MessageTemplate2"]], "Message", "MSG", 
   CellLabel -> "During evaluation of In[124]:="], 
  Cell[BoxData[TemplateBox[{"NumericArray", "lend", "\"The argument at \
position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"NumericArray\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"\[LeftAngleBracket]\\\", RowBox[{\\\"24\\\", \\\",\\\", \
\\\"24\\\", \\\",\\\", \\\"4\\\"}], \\\"\[RightAngleBracket]\\\"}], \
\\\",\\\", \\\"\\\\\\\"UnsignedInteger8\\\\\\\"\\\"}], \\\"]\\\"}]\\) should \
be a list of data.\"", 2, 124, 6, 28142374816192855047, "Local"}, 
     "MessageTemplate"]], "Message", "MSG", 
   CellLabel -> "During evaluation of In[124]:="], 
  Cell[BoxData[TemplateBox[{"Image", "imgarray", "\"The specified argument \
\\!\\(\\*RowBox[{\\\"NumericArray\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"\[LeftAngleBracket]\\\", RowBox[{\\\"24\\\", \\\",\\\", \
\\\"24\\\", \\\",\\\", \\\"4\\\"}], \\\"\[RightAngleBracket]\\\"}], \
\\\",\\\", \\\"\\\\\\\"UnsignedInteger8\\\\\\\"\\\"}], \\\"]\\\"}]\\) should \
be an array of rank 2 or 3 with machine-sized numbers.\"", 2, 124, 7, 
      28142374816192855047, "Local"}, "MessageTemplate"]], "Message", "MSG", 
   CellLabel -> "During evaluation of In[124]:="], 
  Cell[BoxData[TemplateBox[{"NumericArray", "lend", "\"The argument at \
position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"NumericArray\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"\[LeftAngleBracket]\\\", RowBox[{\\\"48\\\", \\\",\\\", \
\\\"48\\\", \\\",\\\", \\\"4\\\"}], \\\"\[RightAngleBracket]\\\"}], \
\\\",\\\", \\\"\\\\\\\"UnsignedInteger8\\\\\\\"\\\"}], \\\"]\\\"}]\\) should \
be a list of data.\"", 2, 124, 8, 28142374816192855047, "Local"}, 
     "MessageTemplate"]], "Message", "MSG", 
   CellLabel -> "During evaluation of In[124]:="], 
  Cell[BoxData[TemplateBox[{"Image", "imgarray", "\"The specified argument \
\\!\\(\\*RowBox[{\\\"NumericArray\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"\[LeftAngleBracket]\\\", RowBox[{\\\"48\\\", \\\",\\\", \
\\\"48\\\", \\\",\\\", \\\"4\\\"}], \\\"\[RightAngleBracket]\\\"}], \
\\\",\\\", \\\"\\\\\\\"UnsignedInteger8\\\\\\\"\\\"}], \\\"]\\\"}]\\) should \
be an array of rank 2 or 3 with machine-sized numbers.\"", 2, 124, 9, 
      28142374816192855047, "Local"}, "MessageTemplate"]], "Message", "MSG", 
   CellLabel -> "During evaluation of In[124]:="]}, WindowSize -> {808, 755}, 
 WindowMargins -> {{114, Automatic}, {Automatic, 0}}, 
 TaggingRules -> {"UUIDButtons" -> 
    {"Active" -> {"Button-89ffd2c3-ec41-4179-a9b1-8e28670bca2c" -> False, 
       "Button-ca46e5e0-4fd1-47e8-8cf6-72998922b757" -> False, 
       "Button-a6d68254-3684-4d32-83fc-e5ef6f443930" -> False}}}, 
 FrontEndVersion -> "12.0 for Mac OS X x86 (64-bit) (April 8, 2019)", 
 StyleDefinitions -> Notebook[
   {Cell[StyleData[StyleDefinitions -> FrontEnd`FileName[{"BTools"}, 
        "CodePackage.nb", CharacterEncoding -> "UTF-8"]]]}, Visible -> False, 
   FrontEndVersion -> "12.0 for Mac OS X x86 (64-bit) (April 8, 2019)", 
   StyleDefinitions -> "PrivateStylesheetFormatting.nb"]]
