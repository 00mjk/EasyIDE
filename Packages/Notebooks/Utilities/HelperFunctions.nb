(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[     13446,        372]
NotebookOptionsPosition[      9841,        294]
NotebookOutlinePosition[     10507,        317]
CellTagsIndexPosition[     10464,        314]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Helper Functions", "CodeSection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"WithNotebookPaused", "::", "usage"}], "=", 
   "\"\<Pauses the notebook temporarily to execute code\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PreemptiveQueued", "::", "usage"}], "=", 
   "\"\<Evaluates preemptive code in a queued fashion\>\""}], 
  ";"}]}], "CodeInput"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"WithCurrentValueUpdating", "::", "usage"}], "=", 
   "\"\<Executes with CurrentValue updating resumed\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WithoutCurrentValueUpdating", "::", "usage"}], "=", 
   "\"\<Executes with CurrentValue updating paused\>\""}], 
  ";"}]}], "CodeInput"],

Cell["\[LeftCeiling]Consistent references to the current IDE notebook\
\[RightFloor]", "Text",
 Evaluatable->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$CurrentIDENotebook", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"$CurrentIDE", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]}], "CodeInput"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetCurrentValue", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetCurrentValueDelayed", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]}], "CodeInput"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}]], "InputSection"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]CurrentValues\[RightFloor]", "CodeSubsection",
 Evaluatable->True],

Cell[BoxData[{
 RowBox[{"SetCurrentValue", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{"SetCurrentValue", "[", 
   RowBox[{"nb_", ",", " ", "k_", ",", " ", "value_"}], "]"}], ":=", "\n", 
  "  ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"h", "=", "FrontEnd`$TrackingEnabled"}], "}"}], ",", "\n", 
    "  \t", 
    RowBox[{"MathLink`CallFrontEndHeld", "[", "\n", "      ", 
     RowBox[{"FrontEnd`SetValue", "[", "\n", "\t\t\t\t\t", 
      RowBox[{
       RowBox[{"FEPrivate`Set", "[", "\n", "\t\t\t\t\t\t", 
        RowBox[{
         RowBox[{"FrontEnd`CurrentValue", "[", 
          RowBox[{"nb", ",", " ", "k"}], "]"}], ",", " ", "\n", "          ", 
         "value"}], "\n", "\t\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t\t", 
       "h"}], "\n", "\t\t\t\t\t", "]"}], "\n", "      ", "]"}]}], "\n", 
   "    ", "]"}]}]}], "CodeInput"],

Cell[BoxData[{
 RowBox[{"SetCurrentValueDelayed", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{"SetCurrentValueDelayed", "[", 
   RowBox[{"nb_", ",", " ", "k_", ",", " ", 
    RowBox[{"Hold", "[", "value_", "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"h", "=", "FrontEnd`$TrackingEnabled"}], "}"}], ",", "\n", "  ", 
    "\t", 
    RowBox[{"MathLink`CallFrontEndHeld", "[", "\n", "  ", "    ", 
     RowBox[{"FrontEnd`SetValue", "[", "\n", "        ", 
      RowBox[{
       RowBox[{"FEPrivate`SetDelayed", "[", "\n", "          ", 
        RowBox[{
         RowBox[{"FrontEnd`CurrentValue", "[", 
          RowBox[{"nb", ",", " ", "k"}], "]"}], ",", " ", "\n", "          ", 
         "value"}], "\n", "  ", "        ", "]"}], ",", "\n", "  ", "      ", 
       "h"}], "\n", "  ", "      ", "]"}], "\n", "      ", "]"}]}], "\n", 
   "    ", "]"}]}]}], "CodeInput"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]IDE Refs\[RightFloor]", "CodeSubsection",
 Evaluatable->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$CurrentIDENotebook", " ", ":=", " ", 
   RowBox[{"EvaluationNotebook", "[", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"$CurrentIDE", " ", ":=", " ", 
   RowBox[{"IDENotebookObject", "[", "$CurrentIDENotebook", "]"}]}], 
  ";"}]}], "CodeInput"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Helpers\[RightFloor]", "CodeSubsection",
 Evaluatable->True],

Cell[CellGroupData[{

Cell["\[LeftCeiling]WithPausedNotebook\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True],

Cell["\<\
\[LeftCeiling]
\tHelper function to suspend the screen while updating the nb
\[RightFloor]\
\>", "Text",
 Evaluatable->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"WithNotebookPaused", "[", 
    RowBox[{"nb_NotebookObject", ",", " ", "expr_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Block", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t  ", 
      RowBox[{
       RowBox[{"paused", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"TrueQ", "@", "paused"}], ",", " ", "True", ",", " ", 
          "False"}], "]"}]}], ",", "\n", "\t  ", 
       RowBox[{"FrontEnd`$TrackingEnabled", " ", "=", " ", "False"}], ",", 
       "\n", "\t  ", "setDataCalls"}], " ", "\n", "\t    ", 
      RowBox[{"(*", " ", "\n", "\t            ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
           "Should", " ", "I", " ", "catch", " ", "all", " ", "of", " ", 
            "the", " ", "ideSetNbData", " ", "calls"}], "..."}], "?", " ", 
          "\n", "\t            ", "I"}], " ", "could", " ", "batch", " ", 
         "them", " ", "all", " ", "up", " ", "at", " ", "once", " ", "and", 
         " ", "maybe", " ", "decrease", " ", "the", " ", "amount", " ", "of", 
         " ", "processing", " ", "time"}], "..."}], "\n", "\t            ", 
       "*)"}], "\n", "\t  ", "}"}], ",", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{"paused", ",", "\n", "\t\t\t", "expr", ",", "\n", "\t\t\t", 
       RowBox[{"Internal`WithLocalSettings", "[", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"FrontEndExecute", "@", "\n", "\t", "\t", "\t\t\t", 
           RowBox[{
           "FrontEnd`NotebookSuspendScreenUpdates", "[", "nb", "]"}]}], ";"}],
          ",", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{"paused", " ", "=", " ", "True"}], ";", "\n", "\t\t\t\t", 
          "expr"}], ",", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{"FrontEndExecute", "@", "\n", "\t\t\t\t\t", 
           RowBox[{"FrontEnd`NotebookResumeScreenUpdates", "[", "nb", "]"}]}],
           ";"}]}], "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t\t", "]"}]}], "\n", 
    "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{"WithNotebookPaused", "~", "SetAttributes", "~", 
  "HoldRest"}]}], "CodeInput"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]WithCurrentValueUpdating\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"WithCurrentValueUpdating", "[", "expr_", "]"}], ":=", "\n", "\t", 
   
   RowBox[{"Block", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t  ", 
      RowBox[{"FrontEnd`$TrackingEnabled", " ", "=", " ", "True"}], "\n", 
      "\t  ", "}"}], ",", "\n", "\t\t", "expr"}], "\n", "\t\t", "]"}]}], 
  ";"}], "\n", 
 RowBox[{"WithCurrentValueUpdating", "~", "SetAttributes", "~", 
  "HoldRest"}]}], "CodeInput"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]WithoutCurrentValueUpdating\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True],

Cell["\<\
\[LeftCeiling]
\tHelper function to suspend the screen while updating the nb
\[RightFloor]\
\>", "Text",
 Evaluatable->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"WithCurrentValueUpdating", "[", "expr_", "]"}], ":=", "\n", "\t", 
   
   RowBox[{"Block", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t  ", 
      RowBox[{"FrontEnd`$TrackingEnabled", " ", "=", " ", "False"}], "\n", 
      "\t  ", "}"}], ",", "\n", "\t\t", "expr"}], "\n", "\t\t", "]"}]}], 
  ";"}], "\n", 
 RowBox[{"WithCurrentValueUpdating", "~", "SetAttributes", "~", 
  "HoldRest"}]}], "CodeInput"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]IDEPreemptive\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PreemptiveQueued", "[", 
    RowBox[{"nb_", ",", " ", "expr_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"MessageDialog", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"DynamicModule", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\n", "\t\t\t", "Null", ",", "\n", "\t\t\t", 
       RowBox[{"Initialization", "\[RuleDelayed]", 
        RowBox[{"{", "\n", "\t\t\t\t", 
         RowBox[{"Internal`WithLocalSettings", "[", "\n", "\t\t\t\t\t", 
          RowBox[{"Null", ",", "\n", "\t\t\t\t\t", 
           RowBox[{"Block", "[", "\n", "\t\t\t\t\t\t", 
            RowBox[{
             RowBox[{"{", "\n", "\t\t\t\t\t\t\t", 
              RowBox[{"$CurrentIDENotebook", "=", "nb"}], "\n", 
              "\t\t\t\t\t\t\t", "}"}], ",", "\n", "\t\t\t\t\t\t", "expr"}], 
            "\n", "\t\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t\t", 
           RowBox[{"NotebookClose", "[", 
            RowBox[{"EvaluationNotebook", "[", "]"}], "]"}]}], "\n", 
          "\t\t\t\t\t", "]"}], "\n", "\t\t\t\t", "}"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"SynchronousInitialization", " ", "->", " ", "False"}]}], "\n",
       "\t\t\t", "]"}], ",", "\n", "\t\t", 
     RowBox[{"Visible", "\[Rule]", "False"}], ",", "\n", "\t\t", 
     RowBox[{"Evaluator", "\[Rule]", 
      RowBox[{"CurrentValue", "[", 
       RowBox[{"nb", ",", " ", "Evaluator"}], "]"}]}]}], "\n", "\t\t", 
    "]"}]}], ";"}], "\n", 
 RowBox[{"PreemptiveQueued", "~", "SetAttributes", "~", 
  "HoldRest"}]}], "CodeInput"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}]], "InputSection"]
}, Open  ]],

Cell["", "SectionSeparator"]
},
WindowSize->{808, 755},
WindowMargins->{{Automatic, 270}, {Automatic, 49}},
TaggingRules->{
 "UUIDButtons" -> {
   "Active" -> {
     "Button-89ffd2c3-ec41-4179-a9b1-8e28670bca2c" -> False, 
      "Button-ca46e5e0-4fd1-47e8-8cf6-72998922b757" -> False, 
      "Button-a6d68254-3684-4d32-83fc-e5ef6f443930" -> False}}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->FrontEnd`FileName[{"BTools"}, "CodePackage.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 39, 0, 70, "CodeSection",ExpressionUUID->"a9ca26fe-75c2-444c-a629-a03409c25146"],
Cell[464, 17, 331, 9, 70, "CodeInput",ExpressionUUID->"effa516d-9cab-40ab-bd76-2b10b80ad77d"],
Cell[798, 28, 341, 9, 70, "CodeInput",ExpressionUUID->"b0a097b0-748a-45bd-af4c-8b9492aaae69"],
Cell[1142, 39, 114, 2, 70, "Text",ExpressionUUID->"97081435-6792-4e6c-9ee4-50ba4b605a0b",
 Evaluatable->True],
Cell[1259, 43, 230, 8, 70, "CodeInput",ExpressionUUID->"7b4c49a1-493d-4d3b-8204-1fe0bccb97fb"],
Cell[1492, 53, 234, 7, 70, "CodeInput",ExpressionUUID->"479bbdfb-a4a2-4205-87cf-6c6c1245c3d5"],
Cell[1729, 62, 99, 2, 70, "InputSection",ExpressionUUID->"cc6009ba-0925-4ccf-8fd0-49b8f4f5600f"],
Cell[CellGroupData[{
Cell[1853, 68, 86, 1, 70, "CodeSubsection",ExpressionUUID->"f0ef8ea3-6880-4feb-9ae0-e94de80e05ac",
 Evaluatable->True],
Cell[1942, 71, 861, 20, 70, "CodeInput",ExpressionUUID->"99fd7be9-8f6a-40ab-9923-cd696edba6ae"],
Cell[2806, 93, 922, 20, 70, "CodeInput",ExpressionUUID->"a588b4f3-e560-4009-a24f-610b5a050e44"]
}, Closed]],
Cell[CellGroupData[{
Cell[3765, 118, 81, 1, 70, "CodeSubsection",ExpressionUUID->"f637704b-3a83-42e8-9707-894626cc670c",
 Evaluatable->True],
Cell[3849, 121, 281, 7, 70, "CodeInput",ExpressionUUID->"0df8007d-a7d8-415e-b0bf-ddaef473a052"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4167, 133, 80, 1, 70, "CodeSubsection",ExpressionUUID->"273452e5-7df2-4d10-b672-0ae29d7c1a36",
 Evaluatable->True],
Cell[CellGroupData[{
Cell[4272, 138, 94, 1, 70, "CodeSubsubsection",ExpressionUUID->"3eda61cc-d061-4c4f-9f02-e9cebece2228",
 Evaluatable->True],
Cell[4369, 141, 134, 5, 70, "Text",ExpressionUUID->"b1bcfe9c-b3fa-41f1-bd76-b8638d6e911e",
 Evaluatable->True],
Cell[4506, 148, 2165, 47, 70, "CodeInput",ExpressionUUID->"f4dd83ef-3817-41d6-afa7-5f04c87be77e"]
}, Closed]],
Cell[CellGroupData[{
Cell[6708, 200, 102, 2, 70, "CodeSubsubsection",ExpressionUUID->"ea0c9214-6937-44c2-8a63-33ec0beefcd1",
 Evaluatable->True],
Cell[6813, 204, 463, 12, 70, "CodeInput",ExpressionUUID->"c510820c-efd4-404b-ba59-14da781a9365"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7313, 221, 105, 2, 70, "CodeSubsubsection",ExpressionUUID->"bba7a863-71f5-44ab-a692-6a241da87533",
 Evaluatable->True],
Cell[7421, 225, 134, 5, 70, "Text",ExpressionUUID->"11f7dc5f-2c0f-4832-8f34-0288cdfcfef5",
 Evaluatable->True],
Cell[7558, 232, 464, 12, 70, "CodeInput",ExpressionUUID->"5d2975af-4fe4-406a-b3a9-6438c2ea7e10"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8059, 249, 89, 1, 70, "CodeSubsubsection",ExpressionUUID->"189f0082-d2c9-4e6a-9284-f33039bbfdf2",
 Evaluatable->True],
Cell[8151, 252, 1540, 31, 70, "CodeInput",ExpressionUUID->"6542efb5-e38a-45fe-9ca8-6fbdd5ae3995"]
}, Open  ]]
}, Open  ]],
Cell[9718, 287, 76, 2, 70, "InputSection",ExpressionUUID->"6c1080a5-b9e0-4d92-88ad-4256d341283d"]
}, Open  ]],
Cell[9809, 292, 28, 0, 70, "SectionSeparator",ExpressionUUID->"8583866a-4f2e-499a-b3a3-424bd27c8bb3"]
}
]
*)

