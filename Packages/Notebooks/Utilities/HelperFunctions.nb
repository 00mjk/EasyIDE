(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[     17820,        487]
NotebookOptionsPosition[     13539,        395]
NotebookOutlinePosition[     14205,        418]
CellTagsIndexPosition[     14162,        415]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Helper Functions", "CodeSection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"WithNotebookPaused", "::", "usage"}], "=", 
   "\"\<Pauses the notebook temporarily to execute code\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PreemptiveQueued", "::", "usage"}], "=", 
   "\"\<Evaluates preemptive code in a queued fashion\>\""}], 
  ";"}]}], "CodeInput"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"WithCurrentValueUpdating", "::", "usage"}], "=", 
   "\"\<Executes with CurrentValue updating resumed\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WithoutCurrentValueUpdating", "::", "usage"}], "=", 
   "\"\<Executes with CurrentValue updating paused\>\""}], 
  ";"}]}], "CodeInput"],

Cell["\[LeftCeiling]Consistent references to the current IDE notebook\
\[RightFloor]", "Text",
 Evaluatable->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$CurrentIDENotebook", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"$CurrentIDE", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]}], "CodeInput"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetCurrentValue", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetCurrentValueDelayed", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WithIDEData", "::", "usage"}], "=", 
   "\"\<Reroutes CurrentValue to the EasyIDE path\>\""}], ";"}]}], "CodeInput"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}]], "InputSection"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]CurrentValues\[RightFloor]", "CodeSubsection",
 Evaluatable->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"iCurrentValue", " ", "=", " ", "System`FEDump`iCV"}], 
  ";"}]], "CodeInput"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]SetCurrentValue\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True],

Cell[BoxData[{
 RowBox[{"SetCurrentValue", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{"SetCurrentValue", "[", 
   RowBox[{"nb_", ",", " ", "k_", ",", " ", "value_"}], "]"}], ":=", "\n", 
  "  ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"h", "=", "FrontEnd`$TrackingEnabled"}], "}"}], ",", "\n", 
    "  \t", 
    RowBox[{"MathLink`CallFrontEndHeld", "[", "\n", "      ", 
     RowBox[{"FrontEnd`SetValue", "[", "\n", "\t\t\t\t\t", 
      RowBox[{
       RowBox[{"FEPrivate`Set", "[", "\n", "\t\t\t\t\t\t", 
        RowBox[{
         RowBox[{"FrontEnd`CurrentValue", "[", 
          RowBox[{"nb", ",", " ", "k"}], "]"}], ",", " ", "\n", "          ", 
         "value"}], "\n", "\t\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t\t", 
       "h"}], "\n", "\t\t\t\t\t", "]"}], "\n", "      ", "]"}]}], "\n", 
   "    ", "]"}]}]}], "CodeInput"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]SetCurrentValueDelayed\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True],

Cell[BoxData[{
 RowBox[{"SetCurrentValueDelayed", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{"SetCurrentValueDelayed", "[", 
   RowBox[{"nb_", ",", " ", "k_", ",", " ", 
    RowBox[{"Hold", "[", "value_", "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"h", "=", "FrontEnd`$TrackingEnabled"}], "}"}], ",", "\n", "  ", 
    "\t", 
    RowBox[{"MathLink`CallFrontEndHeld", "[", "\n", "  ", "    ", 
     RowBox[{"FrontEnd`SetValue", "[", "\n", "        ", 
      RowBox[{
       RowBox[{"FEPrivate`SetDelayed", "[", "\n", "          ", 
        RowBox[{
         RowBox[{"FrontEnd`CurrentValue", "[", 
          RowBox[{"nb", ",", " ", "k"}], "]"}], ",", " ", "\n", "          ", 
         "value"}], "\n", "  ", "        ", "]"}], ",", "\n", "  ", "      ", 
       "h"}], "\n", "  ", "      ", "]"}], "\n", "      ", "]"}]}], "\n", 
   "    ", "]"}]}]}], "CodeInput"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]WithIDEData\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"WithIDEData", "[", 
    RowBox[{"nb_", ",", " ", "expr_"}], "]"}], ":=", "\n", "  ", 
   RowBox[{"Block", "[", "\n", "    ", 
    RowBox[{
     RowBox[{"{", "\n", "      ", "CurrentValue", "\n", "      ", "}"}], ",", 
     "\n", "    ", 
     RowBox[{
      RowBox[{
       RowBox[{"CurrentValue", "[", 
        RowBox[{"a_", ",", " ", "b_", ",", " ", "c___"}], "]"}], ":=", "\n", 
       "      ", 
       RowBox[{"IDEData", "[", 
        RowBox[{"a", ",", " ", 
         RowBox[{"Flatten", "@", 
          RowBox[{"{", 
           RowBox[{"\"\<Options\>\"", ",", " ", "b"}], "}"}]}], ",", " ", 
         "c"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"CurrentValue", "/:", "\n", "      ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"CurrentValue", "[", 
          RowBox[{"a_", ",", " ", "b_", ",", " ", "c___"}], "]"}], " ", "=", 
         " ", "v_"}], ")"}], ":=", "\n", "        ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IDEData", "[", 
          RowBox[{"a", ",", " ", 
           RowBox[{"Flatten", "@", 
            RowBox[{"{", 
             RowBox[{"\"\<Options\>\"", ",", " ", "b"}], "}"}]}]}], "]"}], 
         " ", "=", " ", "v"}], ")"}]}], ";", "\n", "    ", 
      RowBox[{"CurrentValue", "/:", "\n", "      ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"CurrentValue", "[", 
          RowBox[{"a_", ",", " ", "b_", ",", " ", "c___"}], "]"}], " ", ":=", 
         " ", "v_"}], ")"}], ":=", "\n", "        ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IDEData", "[", 
          RowBox[{"a", ",", " ", 
           RowBox[{"Flatten", "@", 
            RowBox[{"{", 
             RowBox[{"\"\<Options\>\"", ",", " ", "b"}], "}"}]}]}], "]"}], 
         " ", ":=", " ", "v"}], ")"}]}], ";", "\n", "    ", 
      RowBox[{"Internal`InheritedBlock", "[", 
       RowBox[{
        RowBox[{"{", "Options", "}"}], ",", "\n", "      ", 
        RowBox[{
         RowBox[{
          RowBox[{"Options", "[", "nb", "]"}], " ", ":=", " ", 
          RowBox[{"IDEData", "[", 
           RowBox[{"nb", ",", " ", "\"\<Options\>\""}], "]"}]}], ";", "\n", 
         "\t    ", "expr"}]}], "\n", "\t    ", "]"}]}]}], "\n", "    ", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"WithIDEData", "~", "SetAttributes", "~", "HoldRest"}], 
  ";"}]}], "CodeInput"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]IDE Refs\[RightFloor]", "CodeSubsection",
 Evaluatable->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$CurrentIDENotebook", " ", ":=", " ", 
   RowBox[{"EvaluationNotebook", "[", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"$CurrentIDE", " ", ":=", " ", 
   RowBox[{"IDENotebookObject", "[", "$CurrentIDENotebook", "]"}]}], 
  ";"}]}], "CodeInput"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Helpers\[RightFloor]", "CodeSubsection",
 Evaluatable->True],

Cell[CellGroupData[{

Cell["\[LeftCeiling]WithPausedNotebook\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True],

Cell["\<\
\[LeftCeiling]
\tHelper function to suspend the screen while updating the nb
\[RightFloor]\
\>", "Text",
 Evaluatable->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"WithNotebookPaused", "[", 
    RowBox[{"nb_NotebookObject", ",", " ", "expr_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Block", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t  ", 
      RowBox[{
       RowBox[{"paused", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"TrueQ", "@", "paused"}], ",", " ", "True", ",", " ", 
          "False"}], "]"}]}], ",", "\n", "\t  ", 
       RowBox[{"FrontEnd`$TrackingEnabled", " ", "=", " ", "False"}], ",", 
       "\n", "\t  ", "setDataCalls"}], " ", "\n", "\t    ", 
      RowBox[{"(*", " ", "\n", "\t            ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
           "Should", " ", "I", " ", "catch", " ", "all", " ", "of", " ", 
            "the", " ", "ideSetNbData", " ", "calls"}], "..."}], "?", " ", 
          "\n", "\t            ", "I"}], " ", "could", " ", "batch", " ", 
         "them", " ", "all", " ", "up", " ", "at", " ", "once", " ", "and", 
         " ", "maybe", " ", "decrease", " ", "the", " ", "amount", " ", "of", 
         " ", "processing", " ", "time"}], "..."}], "\n", "\t            ", 
       "*)"}], "\n", "\t  ", "}"}], ",", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{"paused", ",", "\n", "\t\t\t", "expr", ",", "\n", "\t\t\t", 
       RowBox[{"Internal`WithLocalSettings", "[", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{"FrontEndExecute", "@", "\n", "\t\t\t\t\t", 
          RowBox[{"{", "\n", "\t\t\t\t\t  ", 
           RowBox[{"FrontEnd`NotebookSuspendScreenUpdates", "[", "nb", "]"}], 
           
           RowBox[{"(*", 
            RowBox[{",", "\n", "\t\t\t\t\t  ", 
             RowBox[{"FrontEnd`SetOptions", "[", 
              RowBox[{"nb", ",", " ", 
               RowBox[{"DynamicUpdating", "\[Rule]", "False"}]}], "]"}]}], 
            "*)"}], "\n", "\t\t\t\t\t  ", "}"}]}], ",", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{"paused", " ", "=", " ", "True"}], ";", "\n", "\t\t\t\t", 
          "expr"}], ",", "\n", "\t\t\t\t", 
         RowBox[{"FrontEndExecute", "@", "\n", "\t\t\t\t\t", 
          RowBox[{"{", "\n", "\t\t\t\t\t  ", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"FrontEnd`SetOptions", "[", 
              RowBox[{"nb", ",", " ", 
               RowBox[{"DynamicUpdating", "\[Rule]", "True"}]}], "]"}], ","}],
             "*)"}], "\n", "\t\t\t\t\t  ", 
           RowBox[{"FrontEnd`NotebookResumeScreenUpdates", "[", "nb", "]"}], 
           "\n", "\t\t\t\t\t  ", "}"}]}]}], "\n", "\t\t\t\t", "]"}]}], "\n", 
      "\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{"WithNotebookPaused", "~", "SetAttributes", "~", 
  "HoldRest"}]}], "CodeInput"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]WithCurrentValueUpdating\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"WithCurrentValueUpdating", "[", "expr_", "]"}], ":=", "\n", "\t", 
   
   RowBox[{"Block", "[", "\n", "\t  ", 
    RowBox[{
     RowBox[{"{", "\n", "  \t  ", 
      RowBox[{"FrontEnd`$TrackingEnabled", " ", "=", " ", "True"}], "\n", 
      "  ", "\t  ", "}"}], ",", "\n", "\t\t", "expr"}], "\n", "\t\t", "]"}]}],
   ";"}], "\n", 
 RowBox[{"WithCurrentValueUpdating", "~", "SetAttributes", "~", 
  "HoldRest"}]}], "CodeInput"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]WithoutCurrentValueUpdating\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True],

Cell["\<\
\[LeftCeiling]
\tHelper function to suspend the screen while updating the nb
\[RightFloor]\
\>", "Text",
 Evaluatable->True],

Cell[BoxData[{
 RowBox[{"WithoutCurrentValueUpdating", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WithoutCurrentValueUpdating", "[", "expr_", "]"}], ":=", "\n", 
   "\t", 
   RowBox[{"Block", "[", "\n", "\t  ", 
    RowBox[{
     RowBox[{"{", "\n", "  \t  ", 
      RowBox[{"FrontEnd`$TrackingEnabled", " ", "=", " ", "False"}], "\n", 
      "  ", "\t  ", "}"}], ",", "\n", "\t\t", "expr"}], "\n", "\t\t", "]"}]}],
   ";"}], "\n", 
 RowBox[{"WithoutCurrentValueUpdating", "~", "SetAttributes", "~", 
  "HoldRest"}]}], "CodeInput"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]IDEPreemptive\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PreemptiveQueued", "[", 
    RowBox[{"nb_", ",", " ", "expr_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"MessageDialog", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"DynamicModule", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\n", "\t\t\t", "Null", ",", "\n", "\t\t\t", 
       RowBox[{"Initialization", "\[RuleDelayed]", 
        RowBox[{"{", "\n", "\t\t\t\t", 
         RowBox[{"Internal`WithLocalSettings", "[", "\n", "\t\t\t\t\t", 
          RowBox[{"Null", ",", "\n", "\t\t\t\t\t", 
           RowBox[{"Block", "[", "\n", "\t\t\t\t\t\t", 
            RowBox[{
             RowBox[{"{", "\n", "\t\t\t\t\t\t\t", 
              RowBox[{"$CurrentIDENotebook", "=", "nb"}], "\n", 
              "\t\t\t\t\t\t\t", "}"}], ",", "\n", "\t\t\t\t\t\t", "expr"}], 
            "\n", "\t\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t\t", 
           RowBox[{"NotebookClose", "[", 
            RowBox[{"EvaluationNotebook", "[", "]"}], "]"}]}], "\n", 
          "\t\t\t\t\t", "]"}], "\n", "\t\t\t\t", "}"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"SynchronousInitialization", " ", "->", " ", "False"}]}], "\n",
       "\t\t\t", "]"}], ",", "\n", "\t\t", 
     RowBox[{"Visible", "\[Rule]", "False"}], ",", "\n", "\t\t", 
     RowBox[{"Evaluator", "\[Rule]", 
      RowBox[{"CurrentValue", "[", 
       RowBox[{"nb", ",", " ", "Evaluator"}], "]"}]}]}], "\n", "\t\t", 
    "]"}]}], ";"}], "\n", 
 RowBox[{"PreemptiveQueued", "~", "SetAttributes", "~", 
  "HoldRest"}]}], "CodeInput"]
}, Closed]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}]], "InputSection"]
}, Open  ]],

Cell["", "SectionSeparator"]
},
WindowSize->{808, 755},
WindowMargins->{{Automatic, 270}, {Automatic, 49}},
TaggingRules->{
 "UUIDButtons" -> {
   "Active" -> {
     "Button-89ffd2c3-ec41-4179-a9b1-8e28670bca2c" -> False, 
      "Button-ca46e5e0-4fd1-47e8-8cf6-72998922b757" -> False, 
      "Button-a6d68254-3684-4d32-83fc-e5ef6f443930" -> False}}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->FrontEnd`FileName[{"BTools"}, "CodePackage.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 39, 0, 70, "CodeSection",ExpressionUUID->"88aea480-7307-4093-b996-1555bedc042d"],
Cell[464, 17, 331, 9, 70, "CodeInput",ExpressionUUID->"6495548f-bec3-496b-a341-7adb3af26014"],
Cell[798, 28, 341, 9, 70, "CodeInput",ExpressionUUID->"7899ea82-bcde-470c-bfe2-a413d85e3ae8"],
Cell[1142, 39, 114, 2, 70, "Text",ExpressionUUID->"dda21ca9-ca62-4506-9599-00fc55092498",
 Evaluatable->True],
Cell[1259, 43, 230, 8, 70, "CodeInput",ExpressionUUID->"374568e0-0a94-4f70-a9a7-e4a0962fde5e"],
Cell[1492, 53, 376, 11, 70, "CodeInput",ExpressionUUID->"e951ad13-10b7-484e-8029-d3d5aed5ea20"],
Cell[1871, 66, 99, 2, 70, "InputSection",ExpressionUUID->"ef63879c-34a6-447d-9594-92f6e7f88aa8"],
Cell[CellGroupData[{
Cell[1995, 72, 86, 1, 70, "CodeSubsection",ExpressionUUID->"dcb65c06-09c1-4edd-b011-cfabf582f548",
 Evaluatable->True],
Cell[2084, 75, 112, 3, 70, "CodeInput",ExpressionUUID->"6f62d4b7-2f65-49f7-a3fa-6a828accb88e"],
Cell[CellGroupData[{
Cell[2221, 82, 91, 1, 70, "CodeSubsubsection",ExpressionUUID->"8e74c97a-e931-44c0-aae3-0d84cbe09be9",
 Evaluatable->True],
Cell[2315, 85, 861, 20, 70, "CodeInput",ExpressionUUID->"92e0068d-5737-4172-b1df-5ebab8ebcb2a"]
}, Closed]],
Cell[CellGroupData[{
Cell[3213, 110, 98, 1, 70, "CodeSubsubsection",ExpressionUUID->"5675f0cd-cdc3-4f47-bf44-669a775f49f4",
 Evaluatable->True],
Cell[3314, 113, 922, 20, 70, "CodeInput",ExpressionUUID->"1921ab32-0c32-4549-b8dc-7d1f77135267"]
}, Closed]],
Cell[CellGroupData[{
Cell[4273, 138, 87, 1, 70, "CodeSubsubsection",ExpressionUUID->"36f0f4ed-5d12-4b62-a4f1-369230c1d4d1",
 Evaluatable->True],
Cell[4363, 141, 2359, 60, 70, "CodeInput",ExpressionUUID->"c86d06f8-2dd8-4768-9309-acc10b99fe14"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6771, 207, 81, 1, 70, "CodeSubsection",ExpressionUUID->"8e5961a9-1f89-43fe-8b31-f7f12e80505b",
 Evaluatable->True],
Cell[6855, 210, 281, 7, 70, "CodeInput",ExpressionUUID->"65b9b460-5bdc-4f74-83ec-bb7dd31643d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7173, 222, 80, 1, 70, "CodeSubsection",ExpressionUUID->"9a636e19-2cbe-4acf-a0ad-796453ef9127",
 Evaluatable->True],
Cell[CellGroupData[{
Cell[7278, 227, 94, 1, 70, "CodeSubsubsection",ExpressionUUID->"093519e5-a537-4ae7-b2ec-e57414a5351e",
 Evaluatable->True],
Cell[7375, 230, 134, 5, 70, "Text",ExpressionUUID->"b51fc8c2-6a29-470e-a6c4-1f3049a8cace",
 Evaluatable->True],
Cell[7512, 237, 2767, 58, 70, "CodeInput",ExpressionUUID->"e109bfa1-a8fa-4208-a6f2-91e1edb13c66"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10316, 300, 102, 2, 70, "CodeSubsubsection",ExpressionUUID->"f69e28b3-280c-4179-b067-7871ff9d01b5",
 Evaluatable->True],
Cell[10421, 304, 473, 12, 70, "CodeInput",ExpressionUUID->"c6783e34-5949-4652-b4b6-25f64db57135"]
}, Closed]],
Cell[CellGroupData[{
Cell[10931, 321, 105, 2, 70, "CodeSubsubsection",ExpressionUUID->"be1992f4-9089-422d-af70-769f00a13f08",
 Evaluatable->True],
Cell[11039, 325, 134, 5, 70, "Text",ExpressionUUID->"7bbb3336-0740-4dd3-acaf-f4b30fca0c38",
 Evaluatable->True],
Cell[11176, 332, 544, 13, 70, "CodeInput",ExpressionUUID->"e48d6192-4381-47e1-ba18-45ba6696949d"]
}, Closed]],
Cell[CellGroupData[{
Cell[11757, 350, 89, 1, 70, "CodeSubsubsection",ExpressionUUID->"f853762d-4a40-48ab-b6d4-2a35aa94a277",
 Evaluatable->True],
Cell[11849, 353, 1540, 31, 70, "CodeInput",ExpressionUUID->"e34b779e-90a6-4171-b388-a6efea3321dc"]
}, Closed]]
}, Open  ]],
Cell[13416, 388, 76, 2, 70, "InputSection",ExpressionUUID->"5c13d61c-3de2-4c6a-8ae3-c46e34313c8a"]
}, Open  ]],
Cell[13507, 393, 28, 0, 70, "SectionSeparator",ExpressionUUID->"11ea7c93-a54d-4480-8719-ffe5aedc8a20"]
}
]
*)

