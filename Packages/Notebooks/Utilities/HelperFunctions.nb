(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[     11270,        307]
NotebookOptionsPosition[      8385,        242]
NotebookOutlinePosition[      9051,        265]
CellTagsIndexPosition[      9008,        262]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Helper Functions", "CodeSection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"WithNotebookPaused", "::", "usage"}], "=", 
   "\"\<Pauses the notebook temporarily to execute code\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PreemptiveQueued", "::", "usage"}], "=", 
   "\"\<Evaluates preemptive code in a queued fashion\>\""}], 
  ";"}]}], "CodeInput"],

Cell["\[LeftCeiling]Consistent references to the current IDE notebook\
\[RightFloor]", "Text",
 Evaluatable->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$CurrentIDENotebook", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"$CurrentIDE", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]}], "CodeInput"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetCurrentValue", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetCurrentValueDelayed", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]}], "CodeInput"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}]], "InputSection"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]CurrentValues\[RightFloor]", "CodeSubsection",
 Evaluatable->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetCurrentValue", "[", 
   RowBox[{"nb_", ",", " ", 
    RowBox[{"{", "opts___", "}"}], ",", " ", "value_"}], "]"}], ":=", "\n", 
  "  ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"h", "=", "FrontEnd`$TrackingEnabled"}], "}"}], ",", "\n", "  ", 
    "\t", 
    RowBox[{"MathLink`CallFrontEndHeld", "[", "\n", "  ", "    ", 
     RowBox[{"FrontEnd`SetValue", "[", "\n", "  ", "      ", 
      RowBox[{
       RowBox[{"FEPrivate`Set", "[", "\n", "  ", "        ", 
        RowBox[{
         RowBox[{"FrontEnd`CurrentValue", "[", 
          RowBox[{"nb", ",", " ", 
           RowBox[{"{", 
            RowBox[{
            "TaggingRules", ",", " ", "$PackageName", ",", " ", "opts"}], 
            "}"}]}], "]"}], ",", " ", "\n", "  ", "        ", "value"}], "\n",
         "  ", "        ", "]"}], ",", "\n", "  ", "      ", "h"}], "\n", 
      "  ", "      ", "]"}], "\n", "      ", "]"}]}], "\n", "    ", 
   "]"}]}]], "CodeInput"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetCurrentValueDelayed", "[", 
   RowBox[{"nb_", ",", " ", 
    RowBox[{"{", "opts___", "}"}], ",", " ", 
    RowBox[{"Hold", "[", "value_", "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"h", "=", "FrontEnd`$TrackingEnabled"}], "}"}], ",", "\n", "  ", 
    "\t", 
    RowBox[{"MathLink`CallFrontEndHeld", "[", "\n", "  ", "    ", 
     RowBox[{"FrontEnd`SetValue", "[", "\n", "        ", 
      RowBox[{
       RowBox[{"FEPrivate`SetDelayed", "[", "\n", "          ", 
        RowBox[{
         RowBox[{"FrontEnd`CurrentValue", "[", 
          RowBox[{"nb", ",", " ", 
           RowBox[{"{", 
            RowBox[{
            "TaggingRules", ",", " ", "$PackageName", ",", " ", "opts"}], 
            "}"}]}], "]"}], ",", " ", "\n", "  ", "        ", "value"}], "\n",
         "  ", "        ", "]"}], ",", "\n", "  ", "      ", "h"}], "\n", 
      "  ", "      ", "]"}], "\n", "      ", "]"}]}], "\n", "    ", 
   "]"}]}]], "CodeInput"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]IDE Refs\[RightFloor]", "CodeSubsection",
 Evaluatable->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$CurrentIDENotebook", " ", ":=", " ", 
   RowBox[{"EvaluationNotebook", "[", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"$CurrentIDE", " ", ":=", " ", 
   RowBox[{"IDENotebookObject", "[", "$CurrentIDENotebook", "]"}]}], 
  ";"}]}], "CodeInput"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Helpers\[RightFloor]", "CodeSubsection",
 Evaluatable->True],

Cell[CellGroupData[{

Cell["\[LeftCeiling]WithPausedNotebook\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True],

Cell["\<\
\[LeftCeiling]
\tHelper function to suspend the screen while updating the nb
\[RightFloor]\
\>", "Text",
 Evaluatable->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"WithNotebookPaused", "[", 
    RowBox[{"nb_NotebookObject", ",", " ", "expr_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Block", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t  ", 
      RowBox[{
       RowBox[{"paused", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"TrueQ", "@", "paused"}], ",", " ", "True", ",", " ", 
          "False"}], "]"}]}], ",", "\n", "\t  ", 
       RowBox[{"FrontEnd`$TrackingEnabled", " ", "=", " ", "False"}], ",", 
       "\n", "\t  ", "setDataCalls"}], " ", "\n", "\t    ", 
      RowBox[{"(*", " ", "\n", "\t            ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
           "Should", " ", "I", " ", "catch", " ", "all", " ", "of", " ", 
            "the", " ", "ideSetNbData", " ", "calls"}], "..."}], "?", " ", 
          "\n", "\t            ", "I"}], " ", "could", " ", "batch", " ", 
         "them", " ", "all", " ", "up", " ", "at", " ", "once", " ", "and", 
         " ", "maybe", " ", "decrease", " ", "the", " ", "amount", " ", "of", 
         " ", "processing", " ", "time"}], "..."}], "\n", "\t            ", 
       "*)"}], "\n", "\t  ", "}"}], ",", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{"paused", ",", "\n", "\t\t\t", "expr", ",", "\n", "\t\t\t", 
       RowBox[{"Internal`WithLocalSettings", "[", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"FrontEndExecute", "@", "\n", "\t", "\t", "\t\t\t", 
           RowBox[{
           "FrontEnd`NotebookSuspendScreenUpdates", "[", "nb", "]"}]}], ";"}],
          ",", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{"paused", " ", "=", " ", "True"}], ";", "\n", "\t\t\t\t", 
          "expr"}], ",", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{"FrontEndExecute", "@", "\n", "\t\t\t\t\t", 
           RowBox[{"FrontEnd`NotebookResumeScreenUpdates", "[", "nb", "]"}]}],
           ";"}]}], "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t\t", "]"}]}], "\n", 
    "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{"WithNotebookPaused", "~", "SetAttributes", "~", 
  "HoldRest"}]}], "CodeInput"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]IDEPreemptive\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PreemptiveQueued", "[", 
    RowBox[{"nb_", ",", " ", "expr_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"MessageDialog", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"DynamicModule", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\n", "\t\t\t", "Null", ",", "\n", "\t\t\t", 
       RowBox[{"Initialization", "\[RuleDelayed]", 
        RowBox[{"{", "\n", "\t\t\t\t", 
         RowBox[{"Internal`WithLocalSettings", "[", "\n", "\t\t\t\t\t", 
          RowBox[{"Null", ",", "\n", "\t\t\t\t\t", 
           RowBox[{"Block", "[", "\n", "\t\t\t\t\t\t", 
            RowBox[{
             RowBox[{"{", "\n", "\t\t\t\t\t\t\t", 
              RowBox[{"$CurrentIDENotebook", "=", "nb"}], "\n", 
              "\t\t\t\t\t\t\t", "}"}], ",", "\n", "\t\t\t\t\t\t", "expr"}], 
            "\n", "\t\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t\t", 
           RowBox[{"NotebookClose", "[", 
            RowBox[{"EvaluationNotebook", "[", "]"}], "]"}]}], "\n", 
          "\t\t\t\t\t", "]"}], "\n", "\t\t\t\t", "}"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"SynchronousInitialization", " ", "->", " ", "False"}]}], "\n",
       "\t\t\t", "]"}], ",", "\n", "\t\t", 
     RowBox[{"Visible", "\[Rule]", "False"}], ",", "\n", "\t\t", 
     RowBox[{"Evaluator", "\[Rule]", 
      RowBox[{"CurrentValue", "[", 
       RowBox[{"nb", ",", " ", "Evaluator"}], "]"}]}]}], "\n", "\t\t", 
    "]"}]}], ";"}], "\n", 
 RowBox[{"PreemptiveQueued", "~", "SetAttributes", "~", 
  "HoldRest"}]}], "CodeInput"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}]], "InputSection"]
}, Open  ]],

Cell["", "SectionSeparator"]
},
WindowSize->{808, 755},
WindowMargins->{{Automatic, 270}, {Automatic, 49}},
TaggingRules->{
 "UUIDButtons" -> {
   "Active" -> {
     "Button-89ffd2c3-ec41-4179-a9b1-8e28670bca2c" -> False, 
      "Button-ca46e5e0-4fd1-47e8-8cf6-72998922b757" -> False, 
      "Button-a6d68254-3684-4d32-83fc-e5ef6f443930" -> False}}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->FrontEnd`FileName[{"BTools"}, "CodePackage.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 39, 0, 70, "CodeSection",ExpressionUUID->"6901eaee-2610-4a86-a0a4-bcf173030206"],
Cell[464, 17, 331, 9, 70, "CodeInput",ExpressionUUID->"dfb93a1b-f834-4d0d-ae89-f229704802b7"],
Cell[798, 28, 114, 2, 70, "Text",ExpressionUUID->"81e6d555-1b90-419c-8046-fd5844223c2c",
 Evaluatable->True],
Cell[915, 32, 230, 8, 70, "CodeInput",ExpressionUUID->"49a98e8c-2b9e-4a39-9ada-5ef1bc9636be"],
Cell[1148, 42, 234, 7, 70, "CodeInput",ExpressionUUID->"18383868-c7b5-4eb0-b4ee-70513cd9ab8a"],
Cell[1385, 51, 99, 2, 70, "InputSection",ExpressionUUID->"3d0b133b-c991-4a45-9421-a6380c916f58"],
Cell[CellGroupData[{
Cell[1509, 57, 86, 1, 70, "CodeSubsection",ExpressionUUID->"cc5e5f42-c747-41b4-a363-6df27f10e4b6",
 Evaluatable->True],
Cell[1598, 60, 993, 24, 70, "CodeInput",ExpressionUUID->"4cfbe10d-d5ec-480c-8b35-ea1d89d6a5d9"],
Cell[2594, 86, 1029, 24, 70, "CodeInput",ExpressionUUID->"f4125623-1d1b-4d17-8322-c04722b14dbc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3660, 115, 81, 1, 70, "CodeSubsection",ExpressionUUID->"ed582df3-9ce1-4347-9304-fa86d0fd43f4",
 Evaluatable->True],
Cell[3744, 118, 281, 7, 70, "CodeInput",ExpressionUUID->"d5c59c97-3c7c-49b5-a8fe-b477eef1da14"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4062, 130, 80, 1, 70, "CodeSubsection",ExpressionUUID->"1bb42a2e-3d5c-4856-81bc-62d9562e471f",
 Evaluatable->True],
Cell[CellGroupData[{
Cell[4167, 135, 94, 1, 70, "CodeSubsubsection",ExpressionUUID->"e76bde30-94df-44d6-b83d-58cdedb98ffa",
 Evaluatable->True],
Cell[4264, 138, 134, 5, 70, "Text",ExpressionUUID->"ae881c06-72d4-49ef-bc8a-3ddaef2dd1db",
 Evaluatable->True],
Cell[4401, 145, 2165, 47, 70, "CodeInput",ExpressionUUID->"fa9ab548-013d-4c37-86a2-cd959062e994"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6603, 197, 89, 1, 70, "CodeSubsubsection",ExpressionUUID->"29182981-7541-49e8-9017-f40701b32bcc",
 Evaluatable->True],
Cell[6695, 200, 1540, 31, 70, "CodeInput",ExpressionUUID->"9bf2c6f8-1b2d-4f3e-b10b-c41f2374a948"]
}, Open  ]]
}, Open  ]],
Cell[8262, 235, 76, 2, 70, "InputSection",ExpressionUUID->"e4ea5940-06c8-4a93-a7af-af5e398ffa60"]
}, Open  ]],
Cell[8353, 240, 28, 0, 70, "SectionSeparator",ExpressionUUID->"f494c86d-748d-476e-bd94-53064410ab5a"]
}
]
*)

