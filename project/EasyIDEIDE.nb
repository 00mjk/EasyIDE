Notebook[{

Cell[CellGroupData[{
Cell["Helper Functions", \
"CodeSection",ExpressionUUID->"d8a20d12-20be-477a-b6a7-a1fb8765f440"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"WithNotebookPaused", "::", "usage"}], "=", 
   "\"\<Pauses the notebook temporarily to execute code\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PreemptiveQueued", "::", "usage"}], "=", 
   "\"\<Evaluates preemptive code in a queued fashion\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"5e96e927-0e38-46ba-8ab3-48d7332d68f9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"WithFrontEndTracking", "::", "usage"}], "=", "\n", "  ", 
   "\"\<Executes with FrontEnd tracking enabled\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WithoutCurrentValueUpdating", "::", "usage"}], "=", "\n", "  ", 
   "\"\<Executes with FrontEnd tracking disabled\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WithCurrentValueUpdating", "::", "usage"}], "=", "\n", "  ", 
   "\"\<Alias for WithFrontEndTracking\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WithoutCurrentValueUpdating", "::", "usage"}], "=", "\n", "  ", 
   "\"\<Alias for WithoutFrontEndTracking\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"c6d72ed6-f702-4158-815c-8cc4585e907d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"WithoutDynamics", "::", "usage"}], "=", "\n", "  ", 
   "\"\<Executes with DynamicUpdating paused\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WithoutScreenUpdates", "::", "usage"}], "=", "\n", "  ", 
   "\"\<Executes with DynamicUpdating paused\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WithoutScreenUpdatesOrDynamics", "::", "usage"}], "=", "\n", 
   "\t", "\"\<Turns of both screen updates and DynamicUpdating in a clean \
fashion\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"5110ed26-615f-418f-84f0-efa2e6c8a2de"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"WithActiveNotebookPath", "::", "usage"}], "=", "\n", "  ", 
   "\"\<Temporarily sets NotebookFileName and NotebookDirectory to the \
ActiveFile path\>\""}], 
  ";"}]], "CodeInput",ExpressionUUID->"cd73d619-667a-4429-93ee-126953e7db62"],

Cell["\[LeftCeiling]Consistent references to the current IDE notebook\
\[RightFloor]", "Text",
 Evaluatable->True,ExpressionUUID->"1e60e09c-e2e5-4ba6-976e-42f852efed1f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$CurrentIDENotebook", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"$CurrentIDE", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"326dac70-b303-4f1f-941f-0ab3fe8aa317"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GetCurrentValue", "::", "usage"}], "=", 
   "\"\<Just reimplements CurrentValue for when it's needed\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetNotebookOptions", "::", "usage"}], "=", 
   "\"\<Reimplements SetOptions for when that is needed\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetCurrentValue", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetCurrentValueDelayed", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetCurrentValues", "::", "usage"}], "=", 
   "\"\<Batch form of SetCurrentValue\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetCurrentValuesDelayed", "::", "usage"}], "=", 
   "\"\<Batch form of SetCurrentValueDelayed\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WithIDEData", "::", "usage"}], "=", 
   "\"\<Reroutes CurrentValue to the EasyIDE path\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"cd7397ba-b664-418f-bf33-96f0141a6470"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"7df01ffb-5c00-4a9f-8c93-\
1abc2eeffc31"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]CurrentValues\[RightFloor]", "CodeSubsection",
 Evaluatable->True,ExpressionUUID->"fa7fb404-1b10-4ba2-b096-528537c487c2"],

Cell["\<\
\[LeftCeiling]
\tI do a lot of hoop jumping to avoid having to call into the front end \
multiple times but I think it\[CloseCurlyQuote]s worth it...
\[RightFloor]\
\>", "Text",
 Evaluatable->True,ExpressionUUID->"e57f031b-d387-4771-9b25-0bbb45e3f66c"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]iCurrentValue\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"6f635eef-3637-4f59-bf54-cf03aa32b0a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetCurrentValue", "[", "a___", "]"}], ":=", "\n", "  ", 
  RowBox[{
  "iCurrentValue", "[", "a", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"bfb038b0-75c6-4eb0-b0b6-2f2fc8ef4d15"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"iCurrentValue", "[", "a___", "]"}], "/;", 
    RowBox[{"!", 
     RowBox[{"TrueQ", "[", "$inCVHeld", "]"}]}]}], ":=", "\n", "  ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "FrontEnd`CurrentValue", "}"}], ",", "\n", "  ", "  ", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"c", "=", 
         RowBox[{"FrontEnd`CurrentValue", "[", "a", "]"}]}], "}"}], ",", "\n",
        "  ", "  ", "  ", 
       RowBox[{"Replace", "[", "\n", "  ", "  ", "    ", 
        RowBox[{
         RowBox[{"MathLink`CallFrontEnd", "[", "\n", "  ", "  ", "  ", "    ", 
          RowBox[{"FrontEnd`Value", "[", 
           RowBox[{"c", ",", " ", "FrontEnd`$TrackingEnabled"}], "]"}], "]"}],
          ",", "\n", "  ", "  ", "  ", "  ", 
         RowBox[{"c", "\[Rule]", "$Failed"}]}], "\n", "  ", "      ", "]"}]}],
       "\n", "      ", "]"}]}], "\n", "    ", "]"}]}], ";"}], "\n", 
 RowBox[{"  ", 
  RowBox[{
   RowBox[{
    RowBox[{"iCurrentValue", "[", 
     RowBox[{"nb_", ",", " ", "k_", ",", " ", "default___"}], "]"}], "/;", 
    RowBox[{"TrueQ", "[", "$inCVHeld", "]"}]}], ":=", "\n", "   ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"KeyExistsQ", "[", 
      RowBox[{"$setCurrentValueStack", ",", " ", 
       RowBox[{"{", 
        RowBox[{"nb", ",", " ", "k"}], "}"}]}], "]"}], ",", "\n", "     ", 
     RowBox[{"$setCurrentValueStack", "[", 
      RowBox[{"{", 
       RowBox[{"nb", ",", " ", "k"}], "}"}], "]"}], ",", "\n", "     ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "$inCVHeld", "}"}], ",", " ", 
       RowBox[{"iCurrentValue", "[", 
        RowBox[{"nb", ",", " ", "k", ",", " ", "default"}], "]"}]}], "]"}]}], 
    "\n", "     ", 
    "]"}]}]}]}], \
"CodeInput",ExpressionUUID->"7dcc8313-395d-47b6-baf8-75ba4d729522"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]iSetOptions\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"a4458e1c-693d-4e91-8d40-b7e7a45261d6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetNotebookOptions", "[", 
   RowBox[{"o_", ",", " ", "a___"}], "]"}], ":=", "\n", "  ", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "FrontEnd`SetOptions", "}"}], ",", "\n", "    ", 
    RowBox[{"MathLink`CallFrontEnd", "@", "\n", "      ", 
     RowBox[{"FrontEnd`SetOptions", "[", 
      RowBox[{"o", ",", " ", "a"}], "]"}]}]}], "\n", "    ", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"770b6131-7323-445d-8341-a181f7f8626a"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]SetCurrentValue\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"cef22c4d-b388-4c33-91f8-5d27d15f08c7"],

Cell[BoxData[{
 RowBox[{"SetCurrentValue", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetCurrentValue", "[", 
    RowBox[{"nb_", ",", " ", "k_", ",", " ", "value_"}], "]"}], ":=", "\n", 
   "  ", 
   RowBox[{"iSetCurrentValue", "[", 
    RowBox[{"nb", ",", " ", "k", ",", " ", "value"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"iSetCurrentValue", "[", 
     RowBox[{"nb_", ",", " ", "k_", ",", " ", "value_"}], "]"}], "/;", 
    RowBox[{"!", 
     RowBox[{"TrueQ", "[", "$inCVHeld", "]"}]}]}], ":=", "\n", "  ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"h", "=", "FrontEnd`$TrackingEnabled"}], "}"}], ",", "\n", "  ",
      "  \t", 
     RowBox[{"MathLink`CallFrontEndHeld", "[", "\n", "  ", "      ", 
      RowBox[{"FrontEnd`SetValue", "[", "\n", "  ", "\t\t\t\t\t", 
       RowBox[{
        RowBox[{"FEPrivate`Set", "[", "\n", "  ", "\t\t\t\t\t\t", 
         RowBox[{
          RowBox[{"FrontEnd`CurrentValue", "[", 
           RowBox[{"nb", ",", " ", "k"}], "]"}], ",", " ", "\n", "  ", 
          "          ", "value"}], "\n", "  ", "\t\t\t\t\t\t", "]"}], ",", 
        "\n", "  ", "\t\t\t\t\t", "h"}], "\n", "  ", "\t\t\t\t\t", "]"}], 
      "\n", "  ", "      ", "]"}]}], "\n", "  ", "    ", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"iSetCurrentValue", "[", 
     RowBox[{"nb_", ",", " ", "k_", ",", " ", "value_"}], "]"}], "/;", 
    RowBox[{"TrueQ", "[", "$inCVHeld", "]"}]}], ":=", "\n", "  ", 
   RowBox[{
    RowBox[{"$setCurrentValueStack", "[", 
     RowBox[{"{", 
      RowBox[{"nb", ",", " ", "k"}], "}"}], "]"}], " ", "=", " ", "value"}]}],
   ";"}]}], \
"CodeInput",ExpressionUUID->"2a589663-974a-412a-8986-2101245d472e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetCurrentValues", "[", "triples_", "]"}], ":=", "\n", "  ", 
   RowBox[{"MathLink`CallFrontEnd", "@", 
    RowBox[{"FrontEnd`SetValue", "@", "\n", "    ", 
     RowBox[{"Map", "[", "\n", "      ", 
      RowBox[{
       RowBox[{
        RowBox[{"FEPrivate`Set", "[", "\n", "        ", 
         RowBox[{
          RowBox[{"FrontEnd`CurrentValue", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", " ", "1"}], "]"}], "]"}], ",", " ", 
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", " ", "2"}], "]"}], "]"}]}], "]"}], ",", " ", 
          "\n", "        ", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "\n", "\t\t\t\t\t", "]"}], "&"}],
        ",", "\n", "\t\t\t  ", "triples"}], "\n", "\t\t\t  ", "]"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SetCurrentValuesDelayed", "[", "triples_", "]"}], ":=", "\n", "  ", 
  RowBox[{"With", "[", "\n", "    ", 
   RowBox[{
    RowBox[{"{", "\n", "      ", 
     RowBox[{"r", "=", 
      RowBox[{"FrontEnd`SetValue", "@", "\n", "  ", "  ", "    ", 
       RowBox[{"Map", "[", "\n", "  ", "  ", "      ", 
        RowBox[{
         RowBox[{
          RowBox[{"FEPrivate`SetDelayed", "[", "\n", "  ", "  ", "        ", 
           RowBox[{
            RowBox[{"FrontEnd`CurrentValue", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", " ", "1"}], "]"}], "]"}], ",", " ", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", " ", "2"}], "]"}], "]"}]}], "]"}], ",", " ",
             "\n", "  ", "  ", "        ", 
            RowBox[{"Extract", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", " ", "1", ",", " ", 
              "Unevaluated"}], "]"}]}], "\n", "  ", "  ", "\t\t\t\t\t", "]"}],
           "&"}], ",", "\n", "  ", "  ", "\t\t\t  ", "triples"}], "\n", "  ", 
        "  ", "\t\t\t  ", "]"}]}]}], "\n", "  ", "  \t\t", "}"}], ",", "\n", 
    "\t\t", 
    RowBox[{"MathLink`CallFrontEndHeld", "[", "r", "]"}]}], "\n", "\t\t", 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"0984b491-46a3-472f-95a2-169fb26735fb"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]SetCurrentValueDelayed\[RightFloor]", "CodeSubsubsection",
 
 Evaluatable->True,ExpressionUUID->"a4396684-4b4f-4d43-a4c8-d01bc859079f"],

Cell[BoxData[{
 RowBox[{"SetCurrentValueDelayed", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{"SetCurrentValueDelayed", "[", 
   RowBox[{"nb_", ",", " ", "k_", ",", " ", 
    RowBox[{"Hold", "[", "value_", "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"h", "=", "FrontEnd`$TrackingEnabled"}], "}"}], ",", "\n", "  ", 
    "\t", 
    RowBox[{"MathLink`CallFrontEndHeld", "[", "\n", "  ", "    ", 
     RowBox[{"FrontEnd`SetValue", "[", "\n", "        ", 
      RowBox[{
       RowBox[{"FEPrivate`SetDelayed", "[", "\n", "          ", 
        RowBox[{
         RowBox[{"FrontEnd`CurrentValue", "[", 
          RowBox[{"nb", ",", " ", "k"}], "]"}], ",", " ", "\n", "          ", 
         "value"}], "\n", "  ", "        ", "]"}], ",", "\n", "  ", "      ", 
       "h"}], "\n", "  ", "      ", "]"}], "\n", "      ", "]"}]}], "\n", 
   "    ", "]"}]}]}], \
"CodeInput",ExpressionUUID->"85a37a53-643d-46e0-88f8-10d50fa5f425"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]WithIDEData\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"26dac9bd-6577-4bae-a1da-d0a6aa3c4139"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"WithIDEData", "[", 
    RowBox[{"nb_", ",", " ", "expr_"}], "]"}], ":=", "\n", "  ", 
   RowBox[{"Block", "[", "\n", "    ", 
    RowBox[{
     RowBox[{"{", "\n", "      ", 
      RowBox[{"CurrentValue", ",", "\n", "      ", "FrontEnd`Options"}], "\n",
       "      ", "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{
       RowBox[{"CurrentValue", "[", 
        RowBox[{"a_", ",", " ", "b_", ",", " ", "c___"}], "]"}], ":=", "\n", 
       "      ", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"CurrentValue", "=", "iCurrentValue"}], ",", " ", 
           RowBox[{"k", "=", 
            RowBox[{"Flatten", "@", 
             RowBox[{"{", 
              RowBox[{"\"\<Options\>\"", ",", " ", "b"}], "}"}]}]}]}], "}"}], 
         ",", "\n", "        ", 
         RowBox[{"IDEData", "[", 
          RowBox[{"a", ",", " ", "k", ",", " ", "c"}], "]"}]}], "\n", 
        "        ", "]"}]}], ";", "\n", "    ", 
      RowBox[{"CurrentValue", "/:", "\n", "      ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"CurrentValue", "[", 
          RowBox[{"a_", ",", " ", "b_", ",", " ", "c___"}], "]"}], " ", "=", 
         " ", "v_"}], ")"}], ":=", "\n", "        ", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"CurrentValue", "=", "iCurrentValue"}], "}"}], ",", "\n", 
         "          ", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"k", "=", 
             RowBox[{"Flatten", "@", 
              RowBox[{"{", 
               RowBox[{"\"\<Options\>\"", ",", " ", "b"}], "}"}]}]}], "}"}], 
           ",", "\n", "            ", 
           RowBox[{
            RowBox[{"IDEData", "[", 
             RowBox[{"a", ",", " ", "k"}], "]"}], " ", "=", " ", "v"}]}], 
          "\n", "  ", "          ", "]"}]}], "\n", "          ", "]"}]}], ";",
       "\n", "    ", 
      RowBox[{"CurrentValue", "/:", "\n", "      ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"CurrentValue", "[", 
          RowBox[{"a_", ",", " ", "b_", ",", " ", "c___"}], "]"}], " ", ":=", 
         " ", "v_"}], ")"}], ":=", "\n", "        ", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"CurrentValue", "=", "iCurrentValue"}], "}"}], ",", "\n", 
         "          ", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"k", "=", 
             RowBox[{"Flatten", "@", 
              RowBox[{"{", 
               RowBox[{"\"\<Options\>\"", ",", " ", "b"}], "}"}]}]}], "}"}], 
           ",", "\n", "            ", 
           RowBox[{
            RowBox[{"IDEData", "[", 
             RowBox[{"a", ",", " ", "k"}], "]"}], " ", ":=", " ", "v"}]}], 
          "\n", "            ", "]"}]}], "\n", "          ", "]"}]}], ";", 
      "\n", "    ", 
      RowBox[{
       RowBox[{"FrontEnd`Options", "[", "n_", "]"}], ":=", "\n", "    \t", 
       RowBox[{"Block", "[", "\n", "    \t\t", 
        RowBox[{
         RowBox[{"{", "\n", "    \t\t\t", 
          RowBox[{"iCurrentValue", "=", "\n", "    \t\t\t\t", 
           RowBox[{
            RowBox[{"FrontEnd`Value", "[", "\n", "    \t\t\t\t  ", 
             RowBox[{
              RowBox[{"FrontEnd`CurrentValue", "[", "##", "]"}], ",", " ", 
              "\n", "    \t\t\t\t  ", "FrontEnd`$TrackingEnabled"}], "\n", 
             "    \t\t\t\t  ", "]"}], "&"}]}], "\n", "    \t\t\t", "}"}], ",",
          "\n", "    \t  ", 
         RowBox[{"IDEData", "[", 
          RowBox[{"n", ",", " ", "\"\<Options\>\""}], "]"}]}], "\n", 
        "    \t  ", "]"}]}], ";", "\n", "    ", 
      RowBox[{"Internal`InheritedBlock", "[", 
       RowBox[{
        RowBox[{"{", "NotebookGet", "}"}], ",", "\n", "    \t", 
        RowBox[{
         RowBox[{"Unprotect", "[", "NotebookGet", "]"}], ";", "\n", "    \t", 
         
         RowBox[{
          RowBox[{"NotebookGet", "[", "nb", "]"}], ":=", "\n", "    \t  ", 
          RowBox[{"Block", "[", "\n", "    \t  \t", 
           RowBox[{
            RowBox[{"{", "\n", "    \t  \t\t", 
             RowBox[{
              RowBox[{"NotebookGet", "=", 
               RowBox[{
                RowBox[{"MathLink`CallFrontEnd", "[", 
                 RowBox[{"FrontEnd`NotebookGet", "[", "nb", "]"}], "]"}], 
                "&"}]}], ",", "\n", "    \t  \t\t", 
              RowBox[{"CurrentValue", "=", "iCurrentValue"}]}], "\n", 
             "    \t  \t\t", "}"}], ",", "\n", "    \t\t\t", 
            RowBox[{"GetNotebookExpression", "[", "nb", "]"}]}], "\n", 
           "    \t\t\t", "]"}]}], ";", "\n", " \t   ", "expr"}]}], "\n", 
       " \t   ", "]"}]}]}], "\n", "    ", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"WithIDEData", "~", "SetAttributes", "~", "HoldRest"}], 
  ";"}]}], "CodeInput",ExpressionUUID->"d6f6ef82-a296-437b-88e1-a6fbd9cb614a"]\

}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]IDE Refs\[RightFloor]", "CodeSubsection",
 Evaluatable->True,ExpressionUUID->"9b71d3bf-a136-43d1-92c3-2e621734794f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$CurrentIDENotebook", " ", ":=", " ", 
   RowBox[{"EvaluationNotebook", "[", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"$CurrentIDE", " ", ":=", " ", 
   RowBox[{"IDENotebookObject", "[", "$CurrentIDENotebook", "]"}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"a95914dd-d745-452e-a472-d797550f2dd6"]\

}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Pausing\[RightFloor]", "CodeSubsection",
 Evaluatable->True,ExpressionUUID->"5fbce9fd-06e4-4352-b093-2f0e1d8fc20c"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]WithoutDynamics\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"5f907a75-5991-40e7-844c-390f9e8f32a4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"WithoutDynamics", "//", "Clear"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WithoutDynamics", "[", 
    RowBox[{"nb_NotebookObject", ",", " ", "expr_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Block", "[", "\n", "  \t", 
    RowBox[{
     RowBox[{"{", "\n", "  \t  ", 
      RowBox[{"dynamicsOff", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TrueQ", "@", "dynamicsOff"}], ",", " ", "True", ",", " ", 
         "False"}], "]"}]}], "\n", "  ", "\t  ", "}"}], ",", "\n", "  ", 
     "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
      "dynamicsOff", ",", "\n", "  ", "\t\t\t", "expr", ",", "\n", "  ", 
       "\t\t\t", 
       RowBox[{"Internal`WithLocalSettings", "[", "\n", "  ", "\t\t\t\t", 
        RowBox[{
         RowBox[{"SetOptions", "[", 
          RowBox[{"nb", ",", " ", 
           RowBox[{"DynamicUpdating", "\[Rule]", "False"}]}], "]"}], ",", 
         "\n", "  ", "\t\t\t\t", 
         RowBox[{
          RowBox[{"dynamicsOff", " ", "=", " ", "True"}], ";", "\n", "  ", 
          "\t\t\t\t", "expr"}], ",", "\n", "  \t\t\t\t", 
         RowBox[{"SetOptions", "[", 
          RowBox[{"nb", ",", " ", 
           RowBox[{"DynamicUpdating", "\[Rule]", "Automatic"}]}], "]"}]}], 
        "\n", "  \t\t\t\t", "]"}]}], "\n", "  \t\t\t", "]"}]}], "\n", 
    "  \t\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WithoutDynamics", "[", 
    RowBox[{
     RowBox[{"e", ":", 
      RowBox[{"Except", "[", "_NotebookObject", "]"}]}], ",", " ", "expr_"}], 
    "]"}], ":=", "\n", "  ", 
   RowBox[{"With", "[", "\n", "    ", 
    RowBox[{
     RowBox[{"{", "\n", "      ", 
      RowBox[{"nb", "=", "\n", "        ", 
       RowBox[{"Replace", "[", 
        RowBox[{"e", ",", " ", "\n", "          ", 
         RowBox[{
          RowBox[{"n", ":", 
           RowBox[{
           "_FrontEnd`InputNotebook", "|", "_FrontEnd`EvaluationNotebook"}]}],
           "\[RuleDelayed]", 
          RowBox[{"FE`Evaluate", "[", "n", "]"}]}]}], "\n", "          ", 
        "]"}]}], "\n", "      ", "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"WithoutDynamics", "[", 
       RowBox[{"nb", ",", " ", "expr"}], "]"}], "/;", 
      RowBox[{"MatchQ", "[", 
       RowBox[{"nb", ",", " ", "NotebookObject"}], "]"}]}]}], "\n", "    ", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WithoutDynamics", "[", "expr_", "]"}], ":=", "\n", "  ", 
   RowBox[{"WithoutDynamics", "[", 
    RowBox[{"$CurrentIDENotebook", ",", " ", "expr"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"WithoutDynamics", "~", "SetAttributes", "~", "HoldAll"}], 
  ";"}]}], "CodeInput",ExpressionUUID->"1f0c9102-a1a8-4115-84b7-5ead7e0135e5"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]WithoutScreenUpdates\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"0aff9dee-a586-4b82-85d8-15026311f81e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"pauseScreen", "[", "nb_", "]"}], ":=", "\n", "\t", 
   RowBox[{"MathLink`CallFrontEnd", "@", "\n", "\t\t", 
    RowBox[{"FrontEnd`NotebookSuspendScreenUpdates", "[", "nb", "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"resumeScreen", "[", "nb_", "]"}], ":=", "\n", "\t", 
   RowBox[{"MathLink`CallFrontEnd", "@", "\n", "\t\t", 
    RowBox[{"FrontEnd`NotebookResumeScreenUpdates", "[", "nb", "]"}]}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"f8c2ecab-8f0e-48d8-858e-2b42f9d1f541"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"WithoutScreenUpdates", "//", "Clear"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WithoutScreenUpdates", "[", 
    RowBox[{"nb_NotebookObject", ",", " ", "expr_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Block", "[", "\n", "  \t", 
    RowBox[{
     RowBox[{"{", "\n", "  \t  ", 
      RowBox[{"noScreen", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TrueQ", "@", "noScreen"}], ",", " ", "True", ",", " ", 
         "False"}], "]"}]}], "\n", "  ", "\t  ", "}"}], ",", "\n", "  \t\t", 
     RowBox[{"If", "[", 
      RowBox[{
      "noScreen", ",", "\n", "  \t\t\t", "expr", ",", "\n", "  \t\t\t", 
       RowBox[{"Internal`WithLocalSettings", "[", "\n", "  \t\t\t\t", 
        RowBox[{
         RowBox[{"pauseScreen", "[", "nb", "]"}], ",", "\n", "  \t\t\t\t", 
         RowBox[{
          RowBox[{"noScreen", " ", "=", " ", "True"}], ";", "\n", 
          "  \t\t\t\t", 
          RowBox[{"Block", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"pauseScreen", ",", " ", "resumeScreen"}], "}"}], ",", 
            " ", "expr"}], "]"}]}], ",", "\n", "  \t\t\t\t", 
         RowBox[{"resumeScreen", "[", "nb", "]"}]}], "\n", "  \t\t\t\t", 
        "]"}]}], "\n", "  \t\t\t", "]"}]}], "\n", "  \t\t", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WithoutScreenUpdates", "[", 
    RowBox[{
     RowBox[{"e", ":", 
      RowBox[{"Except", "[", "_NotebookObject", "]"}]}], ",", " ", "expr_"}], 
    "]"}], ":=", "\n", "  ", 
   RowBox[{"With", "[", "\n", "    ", 
    RowBox[{
     RowBox[{"{", "\n", "      ", 
      RowBox[{"nb", "=", "\n", "        ", 
       RowBox[{"Replace", "[", 
        RowBox[{"e", ",", " ", "\n", "          ", 
         RowBox[{
          RowBox[{"n", ":", 
           RowBox[{
           "_FrontEnd`InputNotebook", "|", "_FrontEnd`EvaluationNotebook"}]}],
           "\[RuleDelayed]", 
          RowBox[{"FE`Evaluate", "[", "n", "]"}]}]}], "\n", "          ", 
        "]"}]}], "\n", "      ", "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"WithoutScreenUpdates", "[", 
       RowBox[{"nb", ",", " ", "expr"}], "]"}], "/;", 
      RowBox[{"MatchQ", "[", 
       RowBox[{"nb", ",", " ", "NotebookObject"}], "]"}]}]}], "\n", "    ", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WithoutScreenUpdates", "[", "expr_", "]"}], ":=", "\n", "  ", 
   RowBox[{"WithoutScreenUpdates", "[", 
    RowBox[{"$CurrentIDENotebook", ",", " ", "expr"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"WithoutScreenUpdates", "~", "SetAttributes", "~", "HoldAll"}], 
  ";"}]}], "CodeInput",ExpressionUUID->"3ada7c3b-154b-4b03-93e5-dc144948ffd2"]\

}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]WithoutScreenUpdatesOrDynamics\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"9c0e2770-8c05-4545-8b0e-186814de7536"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"WithoutScreenUpdatesOrDynamics", "//", "Clear"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WithoutScreenUpdatesOrDynamics", "[", 
    RowBox[{"nb_NotebookObject", ",", " ", "expr_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Block", "[", "\n", "  \t", 
    RowBox[{
     RowBox[{"{", "\n", "  \t  ", 
      RowBox[{
       RowBox[{"noScreen", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"TrueQ", "@", "noScreen"}], ",", " ", "True", ",", " ", 
          "False"}], "]"}]}], ",", "\n", "  \t  ", 
       RowBox[{"dynamicsOff", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"TrueQ", "@", "dynamicsOff"}], ",", " ", "True", ",", " ", 
          "False"}], "]"}]}]}], "\n", "  \t  ", "}"}], ",", "\n", "  \t\t", 
     RowBox[{"Which", "[", "\n", "  \t\t\t", 
      RowBox[{
       RowBox[{"noScreen", " ", "&&", " ", "dynamicsOff"}], ",", "\n", 
       "\t  \t\t\t", "expr", ",", "\n", "\t\t\t\t", "noScreen", ",", "\n", 
       "\t\t\t\t\t", 
       RowBox[{"WithoutDynamics", "[", 
        RowBox[{"nb", ",", " ", "expr"}], "]"}], ",", "\n", "\t\t\t\t", 
       "dynamicsOff", ",", "\n", "\t\t\t\t\t", 
       RowBox[{"WithoutScreenUpdates", "[", 
        RowBox[{"nb", ",", " ", "expr"}], "]"}], ",", "\n", "\t\t\t\t", 
       "True", ",", "\n", "  \t\t\t\t", 
       RowBox[{"Internal`WithLocalSettings", "[", "\n", "\t  \t\t\t\t", 
        RowBox[{
         RowBox[{"FrontEndExecute", "@", 
          RowBox[{"{", "\n", "\t  \t\t\t\t  ", 
           RowBox[{
            RowBox[{"FrontEnd`NotebookSuspendScreenUpdates", "[", "nb", "]"}],
             ",", "\n", "\t  \t\t\t\t  ", 
            RowBox[{"FrontEnd`SetOptions", "[", 
             RowBox[{"nb", ",", " ", 
              RowBox[{"DynamicUpdating", "\[Rule]", "False"}]}], "]"}]}], 
           "\n", "\t  \t\t\t\t  ", "}"}]}], ",", "\n", "\t  \t\t\t\t", 
         RowBox[{
          RowBox[{"noScreen", " ", "=", " ", "True"}], ";", "\n", 
          "\t  \t\t\t\t", 
          RowBox[{"dynamicsOff", " ", "=", " ", "False"}], ";", "\n", 
          "\t  \t\t\t\t", "expr"}], ",", "\n", "\t  \t\t\t\t", 
         RowBox[{"FrontEndExecute", "@", 
          RowBox[{"{", "\n", "\t  \t\t\t\t  ", 
           RowBox[{
            RowBox[{"FrontEnd`NotebookResumeScreenUpdates", "[", "nb", "]"}], 
            ",", "\n", "\t  \t\t\t\t  ", 
            RowBox[{"FrontEnd`SetOptions", "[", 
             RowBox[{"nb", ",", " ", 
              RowBox[{"DynamicUpdating", "\[Rule]", "Inherited"}]}], "]"}]}], 
           "\n", "\t  \t\t\t\t  ", "}"}]}]}], "\n", "\t  \t\t\t\t", "]"}]}], 
      "\n", "\t  \t\t\t", "]"}]}], "\n", "  \t\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WithoutScreenUpdatesOrDynamics", "[", 
    RowBox[{
     RowBox[{"e", ":", 
      RowBox[{"Except", "[", "_NotebookObject", "]"}]}], ",", " ", "expr_"}], 
    "]"}], ":=", "\n", "  ", 
   RowBox[{"With", "[", "\n", "    ", 
    RowBox[{
     RowBox[{"{", "\n", "      ", 
      RowBox[{"nb", "=", "\n", "        ", 
       RowBox[{"Replace", "[", 
        RowBox[{"e", ",", " ", "\n", "          ", 
         RowBox[{
          RowBox[{"n", ":", 
           RowBox[{
           "_FrontEnd`InputNotebook", "|", "_FrontEnd`EvaluationNotebook"}]}],
           "\[RuleDelayed]", 
          RowBox[{"FE`Evaluate", "[", "n", "]"}]}]}], "\n", "          ", 
        "]"}]}], "\n", "      ", "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"WithoutScreenUpdatesOrDynamics", "[", 
       RowBox[{"nb", ",", " ", "expr"}], "]"}], "/;", 
      RowBox[{"MatchQ", "[", 
       RowBox[{"nb", ",", " ", "NotebookObject"}], "]"}]}]}], "\n", "    ", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WithoutScreenUpdatesOrDynamics", "[", "expr_", "]"}], ":=", "\n", 
   "  ", 
   RowBox[{"WithoutScreenUpdatesOrDynamics", "[", 
    RowBox[{"$CurrentIDENotebook", ",", " ", "expr"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "WithoutScreenUpdatesOrDynamics", "~", "SetAttributes", "~", "HoldAll"}], 
  ";"}]}], "CodeInput",ExpressionUUID->"4e052710-f980-44cb-a33d-6ed7dba7536e"]\

}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]WithFrontEndTracking\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"e6b6538b-f2a4-4258-b7f7-f9206425cba5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"WithFrontEndTracking", "[", "expr_", "]"}], ":=", "\n", "\t", 
   RowBox[{"Block", "[", "\n", "\t  ", 
    RowBox[{
     RowBox[{"{", "\n", "  \t  ", 
      RowBox[{"FrontEnd`$TrackingEnabled", " ", "=", " ", "True"}], 
      RowBox[{"(*", 
       RowBox[{",", "\n", "  \t  ", 
        RowBox[{"$inCVHeld", " ", "=", " ", "False"}], ",", "\n", "  \t  ", 
        RowBox[{"$setCurrentValueStack", " ", "=", " ", "\n", "  \t    ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"AssociationQ", "[", "$setCurrentValueStack", "]"}]}], 
           ",", " ", 
           RowBox[{"<|", "|>"}], ",", " ", "$setCurrentValueStack"}], 
          "]"}]}]}], "*)"}], "\n", "  \t  ", "}"}], ",", "\n", "   ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"SetCurrentValues", "[", 
        RowBox[{"KeyValueMap", "[", 
         RowBox[{"List", ",", " ", "$setCurrentValueStack"}], "]"}], "]"}], 
       ";", "\n", "   ", 
       RowBox[{"$setCurrentValueStack", " ", "=", " ", 
        RowBox[{"<|", "|>"}]}], ";"}], "*)"}], "\n", "\t\t", "expr"}], "\n", 
    "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{"WithFrontEndTracking", "~", "SetAttributes", "~", 
  "HoldRest"}]}], \
"CodeInput",ExpressionUUID->"390f01cf-a3fc-4135-ac77-f864f0d1f2fe"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]WithoutFrontEndTracking\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"305e3171-0462-41ca-aa10-3e8f7793ced6"],

Cell[BoxData[{
 RowBox[{"WithoutFrontEndTracking", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WithoutFrontEndTracking", "[", "expr_", "]"}], ":=", "\n", "\t", 
   RowBox[{"Block", "[", "\n", "\t  ", 
    RowBox[{
     RowBox[{"{", "\n", "  \t  ", 
      RowBox[{"FrontEnd`$TrackingEnabled", " ", "=", " ", "False"}], 
      RowBox[{"(*", 
       RowBox[{",", "\n", "  \t  ", 
        RowBox[{"$headCall", " ", "=", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"TrueQ", "[", "$headCall", "]"}], ",", " ", "False", ",", 
           " ", "True"}], "]"}]}], ",", "\n", "  \t  ", 
        RowBox[{"$inCVHeld", " ", "=", " ", "True"}], ",", "\n", "  \t  ", 
        RowBox[{"$setCurrentValueStack", " ", "=", " ", "\n", "  \t    ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"AssociationQ", "[", "$setCurrentValueStack", "]"}]}], 
           ",", " ", 
           RowBox[{"<|", "|>"}], ",", " ", "$setCurrentValueStack"}], 
          "]"}]}]}], "*)"}], "\n", "  \t  ", "}"}], ",", "\n", "  \t", 
     "expr"}], "\n", "  \t", 
    RowBox[{"(*", 
     RowBox[{"Internal`WithLocalSettings", "[", "\n", "  \t  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"don", "'"}], "t", " ", "need", " ", "to", " ", "process", 
        " ", "$setCurrentValueStack", " ", "before", " ", "hand"}], " ", 
       "*)"}], "\n", "  \t  ", 
      RowBox[{"None", ",", "\n", "\t\t  ", "expr", ",", "\n", "\t\t  ", 
       RowBox[{"If", "[", 
        RowBox[{"$headCall", ",", " ", 
         RowBox[{"(*", " ", 
          RowBox[{"if", " ", 
           RowBox[{"we", "'"}], "ve", " ", "bottomed", " ", "out", " ", "we", 
           " ", "call", " ", "into", " ", "the", " ", "FE"}], " ", "*)"}], 
         "\n", "\t\t    ", 
         RowBox[{"SetCurrentValues", "[", 
          RowBox[{"KeyValueMap", "[", 
           RowBox[{"List", ",", " ", "$setCurrentValueStack"}], "]"}], 
          "]"}]}], "\n", "\t\t    ", "]"}]}], "\n", "\t\t  ", "]"}], "*)"}], 
    "\n", "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{"WithoutFrontEndTracking", "~", "SetAttributes", "~", 
  "HoldRest"}]}], \
"CodeInput",ExpressionUUID->"caac2564-d573-463d-8044-afba552454de"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]WithCurrentValueUpdating\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"22a9bd8b-fd17-4abb-a50d-d8ebd4affb4a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"WithCurrentValueUpdating", " ", "=", " ", "WithFrontEndTracking"}],
   ";"}]], "CodeInput",ExpressionUUID->"50f01861-4477-4c5b-8292-6f95695e8621"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]WithoutCurrentValueUpdating\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"08290244-6c64-4e49-8d68-5c220b36de07"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "WithoutCurrentValueUpdating", " ", "=", " ", "WithoutFrontEndTracking"}], 
  ";"}]], "CodeInput",ExpressionUUID->"115ca14d-4b36-4545-868c-70ee1b1513a5"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]WithNotebookPaused\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"6cbb0e20-d8af-44fe-9e53-b35e9c37764e"],

Cell["\<\
\[LeftCeiling]
\tHelper function to suspend the screen while updating the nb
\[RightFloor]\
\>", "Text",
 Evaluatable->True,ExpressionUUID->"eebb5dd3-db83-42a8-8399-b211f0eebe3e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"WithNotebookPaused", "//", "Clear"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WithNotebookPaused", "[", 
    RowBox[{"nb_NotebookObject", ",", " ", "expr_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"WithoutFrontEndTracking", "@", "\n", "\t  ", 
    RowBox[{"WithoutScreenUpdatesOrDynamics", "[", 
     RowBox[{"nb", ",", " ", "expr"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WithNotebookPaused", "[", 
    RowBox[{
     RowBox[{"e", ":", 
      RowBox[{"Except", "[", "_NotebookObject", "]"}]}], ",", " ", "expr_"}], 
    "]"}], ":=", "\n", "  ", 
   RowBox[{"With", "[", "\n", "    ", 
    RowBox[{
     RowBox[{"{", "\n", "      ", 
      RowBox[{"nb", "=", "\n", "        ", 
       RowBox[{"Replace", "[", 
        RowBox[{"e", ",", " ", "\n", "          ", 
         RowBox[{"{", "\n", "          \t", 
          RowBox[{
           RowBox[{"n", ":", 
            RowBox[{
            "_FrontEnd`InputNotebook", "|", 
             "_FrontEnd`EvaluationNotebook"}]}], "\[RuleDelayed]", 
           RowBox[{"FE`Evaluate", "[", "n", "]"}]}], "\n", "          \t", 
          "}"}]}], "\n", "          ", "]"}]}], "\n", "      ", "}"}], ",", 
     "\n", "    ", 
     RowBox[{
      RowBox[{"WithNotebookPaused", "[", 
       RowBox[{"nb", ",", " ", "expr"}], "]"}], "/;", 
      RowBox[{"MatchQ", "[", 
       RowBox[{"nb", ",", " ", "NotebookObject"}], "]"}]}]}], "\n", "    ", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WithNotebookPaused", "[", "expr_", "]"}], ":=", "\n", "  ", 
   RowBox[{"WithNotebookPaused", "[", 
    RowBox[{"$CurrentIDENotebook", ",", " ", "expr"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"WithNotebookPaused", "~", "SetAttributes", "~", "HoldAll"}], 
  ";"}]}], "CodeInput",ExpressionUUID->"3ddd685f-704b-4317-8f0a-e76b49f84ada"]\

}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Preemptive\[RightFloor]", "CodeSubsection",
 Evaluatable->True,ExpressionUUID->"c9ff0561-a2a1-459f-907e-7b8ef081d928"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]PreemptiveQueued\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"88710acb-f35a-4b4d-9a23-6cf3b36fc891"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PreemptiveQueued", "[", 
    RowBox[{"nb_", ",", " ", "expr_"}], "]"}], ":=", "\n", "  ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nnbb", "=", "nb"}], "}"}], ",", "\n", "  ", "\t", 
     RowBox[{"MessageDialog", "[", "\n", "  ", "\t\t", 
      RowBox[{
       RowBox[{"DynamicModule", "[", "\n", "  ", "\t\t\t", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\n", "  ", "\t\t\t", "Null", ",", "\n", 
         "  ", "\t\t\t", 
         RowBox[{"Initialization", "\[RuleDelayed]", 
          RowBox[{"{", "\n", "  ", "\t\t\t\t", 
           RowBox[{
           "Internal`WithLocalSettings", "[", "\n", "  ", "\t\t\t\t\t", 
            RowBox[{"Null", ",", "\n", "  ", "\t\t\t\t\t", 
             RowBox[{"Block", "[", "\n", "  ", "\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{"{", "\n", "  ", "\t\t\t\t\t\t\t", 
                RowBox[{"$CurrentIDENotebook", "=", "nnbb"}], "\n", "  ", 
                "\t\t\t\t\t\t\t", "}"}], ",", "\n", "  ", "\t\t\t\t\t\t", 
               "expr"}], "\n", "  ", "\t\t\t\t\t\t", "]"}], ",", "\n", "  ", 
             "\t\t\t\t\t", 
             RowBox[{"NotebookClose", "[", 
              RowBox[{"EvaluationNotebook", "[", "]"}], "]"}]}], "\n", "  ", 
            "\t\t\t\t\t", "]"}], "\n", "  ", "\t\t\t\t", "}"}]}], ",", "\n", 
         "  ", "\t\t\t", 
         RowBox[{"SynchronousInitialization", " ", "->", " ", "False"}]}], 
        "\n", "  ", "\t\t\t", "]"}], ",", "\n", "  ", "\t\t", 
       RowBox[{"Visible", "\[Rule]", "False"}], ",", "\n", "  ", "\t\t", 
       RowBox[{"Evaluator", "\[Rule]", 
        RowBox[{"CurrentValue", "[", 
         RowBox[{"nb", ",", " ", "Evaluator"}], "]"}]}]}], "\n", "  \t\t", 
      "]"}]}], "\n", "    ", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PreemptiveQueued", "[", "expr_", "]"}], ":=", "\n", "  ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nb", "=", "$CurrentIDENotebook"}], "}"}], ",", "\n", "  ", 
     "  ", 
     RowBox[{"PreemptiveQueued", "[", 
      RowBox[{"nb", ",", " ", "expr"}], "]"}]}], "\n", "    ", "]"}]}], 
  ";"}], "\n", 
 RowBox[{"PreemptiveQueued", "~", "SetAttributes", "~", 
  "HoldAll"}]}], \
"CodeInput",ExpressionUUID->"829959ab-3078-4758-b1a0-ee4711af603d"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Paths\[RightFloor]", "CodeSubsection",
 Evaluatable->True,ExpressionUUID->"58ca2ae0-ec4d-4718-883d-30ca93539cb0"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]WithActiveNotebookPath\[RightFloor]", "CodeSubsubsection",
 
 Evaluatable->True,ExpressionUUID->"0c2ab76b-8450-4ea5-adf0-4e7ec7df408a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"WithActiveNotebookPath", "[", 
    RowBox[{"nb_", ",", " ", "expr_"}], "]"}], ":=", "\n", "  ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", "=", 
       RowBox[{"IDEPath", "[", 
        RowBox[{"nb", ",", " ", 
         RowBox[{"Key", "[", "\"\<ActiveFile\>\"", "]"}]}], "]"}]}], "}"}], 
     ",", "\n", "    ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"StringQ", "[", "p", "]"}], ",", "\n", "      ", 
       RowBox[{"Internal`InheritedBlock", "[", "\n", "        ", 
        RowBox[{
         RowBox[{"{", "\n", "          ", 
          RowBox[{
          "NotebookFileName", ",", "\n", "  ", "  ", "      ", 
           "NotebookDirectory"}], "\n", "          ", "}"}], ",", "\n", 
         "        ", 
         RowBox[{
          RowBox[{"Unprotect", "[", "NotebookFileName", "]"}], ";", "\n", 
          "        ", 
          RowBox[{"Unprotect", "[", "NotebookDirectory", "]"}], ";", "\n", 
          "        ", 
          RowBox[{
           RowBox[{"NotebookFileName", "[", "nb", "]"}], "=", "p"}], ";", 
          "\n", "        ", 
          RowBox[{
           RowBox[{"NotebookDirectory", "[", "nb", "]"}], "=", 
           RowBox[{"DirectoryName", "[", "p", "]"}]}], ";", "\n", "        ", 
          
          RowBox[{"DownValues", "[", "NotebookFileName", "]"}], ";", "\n", 
          "        ", "expr"}]}], "\n", "        ", "]"}], ",", "\n", 
       "      ", "expr"}], "\n", "      ", "]"}]}], "\n", "    ", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WithActiveNotebookPath", "[", "expr_", "]"}], ":=", "\n", "  ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nb", "=", "$CurrentIDENotebook"}], "}"}], ",", "\n", "    ", 
     RowBox[{"WithActiveNotebookPath", "[", 
      RowBox[{"nb", ",", " ", "expr"}], "]"}]}], "\n", "    ", "]"}]}], 
  ";"}], "\n", 
 RowBox[{"WithActiveNotebookPath", "~", "SetAttributes", "~", 
  "HoldAll"}]}], \
"CodeInput",ExpressionUUID->"e0baf2c2-9d4b-479c-817e-409458419c7a"]
}, Closed]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"End", "[", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"aede888e-ab02-4b26-bef9-\
38d92d13217b"]
}, Open  ]],

Cell["", "SectionSeparator",ExpressionUUID->"687e58e1-ba12-4727-8b65-\
b6054e55d49f"]
},
NotebookEventActions->{{"MenuCommand", "Save"} :> 
  EasyIDE`Notebooks`Manipulation`IDESave[
    EvaluationNotebook[]], 
  "MouseDown" :> (Needs["EasyIDE`"]; 
   EasyIDE`Notebooks`Manipulation`EnsureNotebookUpdated[
     EvaluationNotebook[]]), PassEventsDown -> True, EvaluationOrder -> After},
Selectable->True,
WindowSize->{884, 781},
WindowMargins->{{Automatic, 166}, {Automatic, 0}},
WindowTitle->"EasyIDE: EasyIDE",
TaggingRules->{
 "IndentCharacter" -> "  ", 
  "EasyIDE" -> {
   "Tabs" -> {
     "Tabs" -> {
       "File" -> 
        "/Users/Mark/Documents/Wolfram \
Mathematica/Applications/EasyIDE/Packages/Notebooks/FormattingElements/Tabs.\
nb", "Modified" -> False}, 
      "NotebookData" -> {
       "File" -> 
        "/Users/Mark/Documents/Wolfram \
Mathematica/Applications/EasyIDE/Packages/Notebooks/Manipulation/NotebookData.\
nb", "Modified" -> False}, 
      "NotebookFunctions" -> {
       "File" -> 
        "/Users/Mark/Documents/Wolfram \
Mathematica/Applications/EasyIDE/Packages/Notebooks/NotebookFunctions.nb", 
        "Modified" -> False}, 
      "NotebookManipulation" -> {
       "File" -> 
        "/Users/Mark/Documents/Wolfram \
Mathematica/Applications/EasyIDE/Packages/Notebooks/Manipulation/\
NotebookManipulation.nb", "Modified" -> False}, 
      "HelperFunctions" -> {
       "File" -> 
        "/Users/Mark/Documents/Wolfram \
Mathematica/Applications/EasyIDE/Packages/Notebooks/Utilities/HelperFunctions.\
nb", "Modified" -> True}, 
      "DropDownMenu" -> {
       "File" -> 
        "/Users/Mark/Documents/Wolfram \
Mathematica/Applications/EasyIDE/Packages/Notebooks/FormattingElements/\
DropDownMenu.nb", "Modified" -> False}}, "FileViewer" -> {"Visible" -> False},
     "Toolbars" -> {"Column" -> GridBox[{{
          GridBox[{{
             GridBox[{{
                StyleBox[
                 ButtonBox[
                 "\"Load Package\"", ButtonFunction :> 
                  EasyIDE`Plugins`CodePackageToolbar`loadPackage[], 
                  Appearance -> Inherited, Evaluator -> Automatic, Method -> 
                  "Preemptive"], "ToolbarElement"], 
                StyleBox[
                 ButtonBox[
                 "\"Open Package\"", ButtonFunction :> 
                  EasyIDE`Plugins`CodePackageToolbar`openPackage[], 
                  Appearance -> Inherited, Evaluator -> Automatic, Method -> 
                  "Preemptive"], "ToolbarElement"], 
                StyleBox[
                 ActionMenuBox[
                  ButtonBox[
                  "\"Insert\"", ButtonFunction :> {}, Evaluator -> None, 
                   BaseStyle -> "PluginMenu", Appearance -> Inherited, 
                   FrameMargins -> {{10, 10}, {0, 0}}, 
                   ImageSize -> {Automatic, 28}, Method -> "Preemptive"], {
                  "\"Package\"" :> FrontEndExecute[
                    FrontEnd`NotebookWrite[
                    FrontEnd`InputNotebook[], {
                    Cell["Package Name", "CodeSection"], 
                    Cell[
                    "\[LeftCeiling]\n  Package description\n\[RightFloor]", 
                    "Text", Evaluatable -> True], 
                    Cell[
                    BoxData[
                    RowBox[{
                    RowBox[{"Begin", "[", "\"`Private`\"", "]"}], ";"}]], 
                    "InputSection"], 
                    Cell[
                    BoxData[
                    RowBox[{
                    RowBox[{"End", "[", "]"}], ";"}]], "InputSection"], 
                    Cell["", "SectionSeparator"]}]]}, Appearance -> None, 
                  MenuAppearance -> "Dropdown"], "ToolbarElement"]}}, 
              BaseStyle -> "ToolbarElementRow"], 
             ButtonBox[
             "", BaseStyle -> "ToolbarCloseButton", ButtonData -> 
              "CodePackage"]}}, BaseStyle -> "ToolbarCell"]}}, BaseStyle -> 
        "Toolbars"], "Tags" -> {"CodePackage"}, 
      "Cells" -> {"CodePackage" -> GridBox[{{
            GridBox[{{
               StyleBox[
                ButtonBox[
                "\"Load Package\"", ButtonFunction :> 
                 EasyIDE`Plugins`CodePackageToolbar`loadPackage[], Appearance -> 
                 Inherited, Evaluator -> Automatic, Method -> "Preemptive"], 
                "ToolbarElement"], 
               StyleBox[
                ButtonBox[
                "\"Open Package\"", ButtonFunction :> 
                 EasyIDE`Plugins`CodePackageToolbar`openPackage[], Appearance -> 
                 Inherited, Evaluator -> Automatic, Method -> "Preemptive"], 
                "ToolbarElement"], 
               StyleBox[
                ActionMenuBox[
                 ButtonBox[
                 "\"Insert\"", ButtonFunction :> {}, Evaluator -> None, 
                  BaseStyle -> "PluginMenu", Appearance -> Inherited, 
                  FrameMargins -> {{10, 10}, {0, 0}}, 
                  ImageSize -> {Automatic, 28}, Method -> "Preemptive"], {
                 "\"Package\"" :> FrontEndExecute[
                    FrontEnd`NotebookWrite[
                    FrontEnd`InputNotebook[], {
                    Cell["Package Name", "CodeSection"], 
                    Cell[
                    "\[LeftCeiling]\n  Package description\n\[RightFloor]", 
                    "Text", Evaluatable -> True], 
                    Cell[
                    BoxData[
                    RowBox[{
                    RowBox[{"Begin", "[", "\"`Private`\"", "]"}], ";"}]], 
                    "InputSection"], 
                    Cell[
                    BoxData[
                    RowBox[{
                    RowBox[{"End", "[", "]"}], ";"}]], "InputSection"], 
                    Cell["", "SectionSeparator"]}]]}, Appearance -> None, 
                 MenuAppearance -> "Dropdown"], "ToolbarElement"]}}, 
             BaseStyle -> "ToolbarElementRow"], 
            ButtonBox[
            "", BaseStyle -> "ToolbarCloseButton", ButtonData -> 
             "CodePackage"]}}, BaseStyle -> "ToolbarCell"], "Docs" -> None, 
        "BugTracker" -> None, "Authoring" -> None, "Package" -> None}}, 
    "Project" -> {
     "Directory" -> 
      "/Users/Mark/Documents/Wolfram Mathematica/Applications/EasyIDE/"}, 
    "ActiveTab" -> "HelperFunctions", "StyleSheet" -> 
    FrontEnd`FileName[{"EasyIDE", "Extensions", "DarkGUI"}, "CodePackage.nb"],
     "FileToolbar" -> "CodePackage", 
    "Options" -> {
     WindowSize -> {808, 755}, 
      WindowMargins -> {{114, Automatic}, {Automatic, 0}}, 
      TaggingRules -> {
       "UUIDButtons" -> {
         "Active" -> {
           "Button-89ffd2c3-ec41-4179-a9b1-8e28670bca2c" -> False, 
            "Button-ca46e5e0-4fd1-47e8-8cf6-72998922b757" -> False, 
            "Button-a6d68254-3684-4d32-83fc-e5ef6f443930" -> False}}}, 
      FrontEndVersion -> "12.0 for Mac OS X x86 (64-bit) (April 8, 2019)", 
      StyleDefinitions -> Notebook[{
         Cell[
          StyleData[
          StyleDefinitions -> 
           FrontEnd`FileName[{"BTools"}, "CodePackage.nb", CharacterEncoding -> 
             "UTF-8"]]]}, Visible -> False, FrontEndVersion -> 
        "12.0 for Mac OS X x86 (64-bit) (April 8, 2019)", StyleDefinitions -> 
        "PrivateStylesheetFormatting.nb"]}, "AutoGeneratePackage" -> True, 
    "SavingAction" -> None, "MainStyleName" -> "DarkGUI", "BaseStyleName" -> 
    "LightMode", 
    "Styles" -> {
     "UnthemedStylesheet" -> "CodePackage", "StyleSheet" -> 
      FrontEnd`FileName[{"EasyIDE", "Extensions", "DarkGUI"}, 
        "CodePackage.nb"], "Theme" -> "DarkGUI"}}, 
  "Bugs" -> {"SearchInterface" -> {"SearchText" -> ""}}, 
  "UUIDButtons" -> {
   "Active" -> {
     "Button-89ffd2c3-ec41-4179-a9b1-8e28670bca2c" -> False, 
      "Button-ca46e5e0-4fd1-47e8-8cf6-72998922b757" -> False, 
      "Button-a6d68254-3684-4d32-83fc-e5ef6f443930" -> False, 
      "Button-218b63f2-ff44-42ce-90ef-7f03f91452c9" -> False}}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{"EasyIDE", "Extensions", "DarkGUI"}, 
       "CodePackage.nb"]]]}, Visible -> False, 
  TaggingRules -> {"EasyIDE" -> {"FileViewer" -> {"Visible" -> False}}}, 
  FrontEndVersion -> "12.0 for Mac OS X x86 (64-bit) (April 8, 2019)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]

